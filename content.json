{"meta":{"title":"BHD Tec","subtitle":"","description":"BHD技术博客 —— 专注逆向工程、二进制安全、漏洞挖掘与软件分析的深度技术平台。单机游戏逻辑破解、网络游戏协议逆向、反外挂机制对抗、内存数据篡改与注入技术","author":"bahadir","url":"https://bhdtec.com","root":"/"},"pages":[{"title":"关于","date":"2025-02-21T12:46:21.000Z","updated":"2025-08-21T01:43:22.941Z","comments":true,"path":"about/index.html","permalink":"https://bhdtec.com/about/index.html","excerpt":"","text":"关于我大家好，我是 bahadir，一个对逆向工程和代码分析比较感兴趣的程序员。 我在做什么平时主要研究一些软件的内部实现机制，特别是游戏相关的技术。最近在深入分析《杀手5》这款游戏，已经写了好几篇关于它的逆向分析文章，涵盖了生命值系统、射击机制、后坐力控制、得分系统等各个方面。 每次分析一个新功能都会先用 Cheat Engine 来定位内存地址和相关的汇编代码，然后把可执行文件拖到 IDA Pro 里进行静态分析，看看函数的具体实现逻辑。有时候还会用 ReClass.NET 来分析一些复杂的数据结构，特别是那些类指针和继承关系比较复杂的地方。 用得比较多的工具： IDA Pro - 静态分析的主力工具，主要用来看函数逻辑和调用约定 Cheat Engine - 动态调试和内存分析，找内存地址基本靠它 ReClass.NET - 结构体分析，分析类的内存布局很有用 Visual Studio - 写代码和调试 Class Informer - IDA的插件，用来解析RTTI信息 编程语言方面主要用 C&#x2F;C++，因为分析的游戏大多是用这些语言写的。偶尔也写点 Python 脚本来辅助分析，比如批量处理一些数据什么的。 这个博客这里记录一些我在学习过程中的发现和思考，主要包括： 游戏逆向分析 - 目前主要在写《杀手5》的系列分析，从生命值、射击、后坐力到得分系统都有涉及 Windows API 使用 - 比如如何获取进程PID和模块基址，这些在逆向分析中经常用到 工具使用技巧 - IDA Pro、Cheat Engine、ReClass.NET 这些工具的一些使用心得 遇到的坑和解决方案 - 比如补码存储负数、RTTI信息解析、虚函数表分析等等 写这些文章一方面是为了整理自己的思路，因为有时候分析完一个函数过段时间就忘了具体细节。另一方面也希望能对有相同兴趣的朋友有所帮助，毕竟这方面的中文资料还是比较少的。 分析方法我的分析流程一般是这样的： 动态分析 - 先用 Cheat Engine 附加到目标程序，通过搜索内存值来定位关键数据 代码定位 - 用 “Find out what writes to this address” 功能找到修改这些数据的汇编代码 静态分析 - 把地址复制到 IDA Pro 中，分析函数的具体实现逻辑 结构分析 - 如果涉及复杂的类结构，会用 ReClass.NET 来分析内存布局 验证测试 - 最后回到 Cheat Engine 验证分析结果，比如修改关键参数看效果 这套流程用下来基本能把大部分游戏功能的实现原理搞清楚。 技术栈 系统编程: Windows API, C&#x2F;C++ 逆向分析: IDA Pro, x64dbg, Cheat Engine 结构分析: ReClass.NET, Class Informer 插件 调试工具: Process Monitor, API Monitor 开发工具: Visual Studio, Git 脚本语言: Python, JavaScript 最近在研究 《杀手5》逆向分析系列 - 已经分析了生命值、射击、后坐力、得分等系统，还在继续深入 游戏反作弊机制 - 研究一些游戏是如何检测和防止内存修改的 DLL注入技术 - 内部注入和外部注入的不同实现方式 RTTI信息解析 - 通过Class Informer插件来分析C++类的继承关系 联系方式如果你对文章内容有疑问，或者想交流相关技术，可以通过以下方式联系我： 邮箱: bahadir.alixir@outlook.com GitHub: https://github.com/47bahadir 博客: https://bhdtec.com 声明博客中的所有技术内容仅供学习研究使用，请不要用于任何非法用途。 感谢你的访问！"},{"title":"Categories","date":"2025-02-22T10:02:52.000Z","updated":"2025-08-20T08:38:53.713Z","comments":false,"path":"categories/index.html","permalink":"https://bhdtec.com/categories/index.html","excerpt":"","text":""},{"title":"隐私政策","date":"2025-02-25T11:17:02.000Z","updated":"2025-02-25T11:19:12.262Z","comments":false,"path":"privacy/index.html","permalink":"https://bhdtec.com/privacy/index.html","excerpt":"","text":"更新日期：2&#x2F;25&#x2F;2025 生效日期：2&#x2F;25&#x2F;2025 导言BHD技术博客 是一款由 bahadir （以下简称“我们”）提供的产品。 您在使用我们的服务时，我们可能会收集和使用您的相关信息。我们希望通过本《隐私政策》向您说明，在使用我们的服务时，我们如何收集、使用、储存和分享这些信息，以及我们为您提供的访问、更新、控制和保护这些信息的方式。 本《隐私政策》与您所使用的 BHD技术博客 服务息息相关，希望您仔细阅读，在需要时，按照本《隐私政策》的指引，作出您认为适当的选择。本《隐私政策》中涉及的相关技术词汇，我们尽量以简明扼要的表述，并提供进一步说明的链接，以便您的理解。 您使用或继续使用我们的服务，即意味着同意我们按照本《隐私政策》收集、使用、储存和分享您的相关信息。 如对本《隐私政策》或相关事宜有任何问题，请通过 &#98;&#97;&#104;&#97;&#x64;&#x69;&#x72;&#46;&#x61;&#x6c;&#105;&#120;&#105;&#114;&#64;&#111;&#x75;&#116;&#108;&#x6f;&#111;&#x6b;&#46;&#x63;&#x6f;&#109; 与我们联系。 1. 我们收集的信息我们或我们的第三方合作伙伴提供服务时，可能会收集、储存和使用下列与您有关的信息。如果您不提供相关信息，可能无法注册成为我们的用户或无法享受我们提供的某些服务，或者无法达到相关服务拟达到的效果。 2. 信息的存储2.1 信息存储的方式和期限 我们会通过安全的方式存储您的信息，包括本地存储（例如利用APP进行数据缓存）、数据库和服务器日志。 一般情况下，我们只会在为实现服务目的所必需的时间内或法律法规规定的条件下存储您的个人信息。 2.2 信息存储的地域 我们会按照法律法规规定，将境内收集的用户个人信息存储于中国境内。 目前我们不会跨境传输或存储您的个人信息。将来如需跨境传输或存储的，我们会向您告知信息出境的目的、接收方、安全保证措施和安全风险，并征得您的同意。 2.3 产品或服务停止运营时的通知 当我们的产品或服务发生停止运营的情况时，我们将以推送通知、公告等形式通知您，并在合理期限内删除您的个人信息或进行匿名化处理，法律法规另有规定的除外。 3. 信息安全我们使用各种安全技术和程序，以防信息的丢失、不当使用、未经授权阅览或披露。例如，在某些服务中，我们将利用加密技术（例如SSL）来保护您提供的个人信息。但请您理解，由于技术的限制以及可能存在的各种恶意手段，在互联网行业，即便竭尽所能加强安全措施，也不可能始终保证信息百分之百的安全。您需要了解，您接入我们的服务所用的系统和通讯网络，有可能因我们可控范围外的因素而出现问题。 4. 我们如何使用信息我们可能将在向您提供服务的过程之中所收集的信息用作下列用途： 向您提供服务； 在我们提供服务时，用于身份验证、客户服务、安全防范、诈骗监测、存档和备份用途，确保我们向您提供的产品和服务的安全性； 帮助我们设计新服务，改善我们现有服务； 使我们更加了解您如何接入和使用我们的服务，从而针对性地回应您的个性化需求，例如语言设定、位置设定、个性化的帮助服务和指示，或对您和其他用户作出其他方面的回应； 向您提供与您更加相关的广告以替代普遍投放的广告； 评估我们服务中的广告和其他促销及推广活动的效果，并加以改善； 软件认证或管理软件升级； 让您参与有关我们产品和服务的调查。 5. 信息共享目前，我们不会主动共享或转让您的个人信息至第三方，如存在其他共享或转让您的个人信息或您需要我们将您的个人信息共享或转让至第三方情形时，我们会直接或确认第三方征得您对上述行为的明示同意。 为了投放广告，评估、优化广告投放效果等目的，我们需要向广告主及其代理商等第三方合作伙伴共享您的部分数据，要求其严格遵守我们关于数据隐私保护的措施与要求，包括但不限于根据数据保护协议、承诺书及相关数据处理政策进行处理，避免识别出个人身份，保障隐私安全。 我们不会向合作伙伴分享可用于识别您个人身份的信息（例如您的姓名或电子邮件地址），除非您明确授权。 我们不会对外公开披露所收集的个人信息，如必须公开披露时，我们会向您告知此次公开披露的目的、披露信息的类型及可能涉及的敏感信息，并征得您的明示同意。 随着我们业务的持续发展，我们有可能进行合并、收购、资产转让等交易，我们将告知您相关情形，按照法律法规及不低于本《隐私政策》所要求的标准继续保护或要求新的控制者继续保护您的个人信息。 另外，根据相关法律法规及国家标准，以下情形中，我们可能会共享、转让、公开披露个人信息无需事先征得您的授权同意： 与国家安全、国防安全直接相关的； 与公共安全、公共卫生、重大公共利益直接相关的； 犯罪侦查、起诉、审判和判决执行等直接相关的； 出于维护个人信息主体或其他个人的生命、财产等重大合法权益但又很难得到本人同意的； 个人信息主体自行向社会公众公开个人信息的； 从合法公开披露的信息中收集个人信息的，如合法的新闻报道、政府信息公开等渠道。 6. 您的权利在您使用我们的服务期间，我们可能会视产品具体情况为您提供相应的操作设置，以便您可以查询、删除、更正或撤回您的相关个人信息，您可参考相应的具体指引进行操作。此外，我们还设置了投诉举报渠道，您的意见将会得到及时的处理。如果您无法通过上述途径和方式行使您的个人信息主体权利，您可以通过本《隐私政策》中提供的联系方式提出您的请求，我们会按照法律法规的规定予以反馈。 7. 变更我们可能适时修订本《隐私政策》的条款。当变更发生时，我们会在版本更新时向您提示新的《隐私政策》，并向您说明生效日期。请您仔细阅读变更后的《隐私政策》内容，若您继续使用我们的服务，即表示您同意我们按照更新后的《隐私政策》处理您的个人信息。 8. 未成年人保护我们鼓励父母或监护人指导未满十八岁的未成年人使用我们的服务。我们建议未成年人鼓励他们的父母或监护人阅读本《隐私政策》，并建议未成年人在提交的个人信息之前寻求父母或监护人的同意和指导。"},{"title":"标签","date":"2025-02-22T10:03:41.000Z","updated":"2025-08-20T05:49:31.842Z","comments":false,"path":"tags/index.html","permalink":"https://bhdtec.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2025-07-22T05:31:19.497Z","updated":"2024-11-20T18:00:56.000Z","comments":true,"path":"script/AfterProcess.js","permalink":"https://bhdtec.com/script/AfterProcess.js","excerpt":"","text":"window.AfterProcess = { ResetCodeStyle: () => { var eles = document.getElementsByClassName(\"highlight\"); var colors = [\"#ed6a5e\", \"#f5bd4f\", \"#61c454\"]; for (let i = 0, len = eles.length; i < len; i++) { let child = eles[i].firstChild; //创建按钮 let customDiv = document.createElement(\"div\"); customDiv.style.display = \"flex\"; customDiv.style.height = \"40px\"; customDiv.style.width = \"100%\"; for (let j = 0; j < 3; j++) { let btn = document.createElement(\"div\"); btn.style.backgroundColor = colors[j]; btn.style.height = \"20px\"; btn.style.width = \"20px\"; btn.style.border = \"1px solid \" + colors[j]; btn.style.borderRadius = \"10px\"; btn.style.margin = \"10px 5px 10px 5px\"; customDiv.appendChild(btn); } console.log(\"是否匹配\", child.nodeName); if (child.nodeName != \"FIGCAPTION\") { //没有标题 eles[i].insertBefore(customDiv, child); } else { eles[i].replaceChild(customDiv, child); //有标题 let p = document.createElement(\"p\"); p.style.width = customDiv.offsetWidth - 40 * 3 + \"px\"; p.style.height = \"40px\"; p.style.textAlign = \"center\"; p.style.margin = \"0px\"; p.style.lineHeight = \"40px\"; p.innerText = child.firstChild.innerText; p.style.fontSize = \"20px\"; customDiv.appendChild(p); } } }, ResetTitle: () => { let colors = { H1: \"#61c454\", H2: \"#61c454\", H3: \"#f5bd4f\", H4: \"#ed6a5e\", H5: \"#e40056\", H6: \"#029ae2\", }; var eles = document.querySelectorAll(\"h1,h2,h3,h4,h5,h6\"); var picker = window.getComputedStyle; for (let i = 1, len = eles.length; i < len; i++) { let child = eles[i].firstChild; let eleStyle = picker(eles[i]); let div = document.createElement(\"div\"); div.classList.add(\"title_div\"); div.style.width = \"100%\"; div.style.display = \"flex\"; //创建标识 let customDiv = document.createElement(\"div\"); customDiv.classList.add(\"title_mark\"); customDiv.style.display = \"flex\"; customDiv.style.width = \"15px\"; customDiv.style.backgroundColor = colors[eles[i].tagName]; customDiv.style.height = eleStyle.fontSize; customDiv.style.marginRight = \"10px\"; customDiv.style.marginTop = (parseFloat(eleStyle.lineHeight) - parseFloat(eleStyle.fontSize)) * 0.5 + \"px\"; customDiv.style.borderRadius = \"5px\"; // console.log(\"字体大小\",eleStyle.fontSize,parseFloat(eleStyle.lineHeight),parseFloat(eleStyle.fontSize)) // customDiv.style.verticalAlign eles[i].style.display = \"flex\"; eles[i].style.verticalAlign = \"center\"; div.appendChild(customDiv, child); let str = eles[i].textContent; eles[i].textContent = \"\"; var text = document.createTextNode(str); div.appendChild(text); eles[i].appendChild(div); } }, InitVideo: () => { let videos = document.getElementsByTagName(\"video\"); for (let index = 0; index < videos.length; index++) { let ele = videos[index]; let player = new Plyr(ele, { controls: [ \"play-large\", // The large play button in the center \"play\", // Play/pause playback \"restart\", // Restart playback \"progress\", // The progress bar and scrubber for playback and buffering \"current-time\", // The current time of playback \"duration\", // The full duration of the media \"mute\", // Toggle mute \"volume\", // Volume control \"captions\", // Toggle captions \"settings\", // Settings menu \"pip\", // Picture-in-picture (currently Safari only) \"airplay\", // Airplay (currently Safari only) \"download\", // Show a download button with a link to either the current source or a custom URL you specify in your options \"fullscreen\", // Toggle fullscreen ], }); } // 监听全屏状态变化 document.addEventListener(\"fullscreenchange\", handleFullscreenChange); document.addEventListener(\"webkitfullscreenchange\", handleFullscreenChange); document.addEventListener(\"mozfullscreenchange\", handleFullscreenChange); document.addEventListener(\"MSFullscreenChange\", handleFullscreenChange); function handleFullscreenChange() { var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement; if (fullscreenElement) { // fullscreenStateDiv.textContent = '当前是全屏状态'; for (let index = 0; index < videos.length; index++) { let ele = videos[index]; ele.classList.add(\"full-screen\"); } } else { // fullscreenStateDiv.textContent = '当前不是全屏状态'; for (let index = 0; index < videos.length; index++) { let ele = videos[index]; ele.classList.remove(\"full-screen\"); } } } }, InitList: () => { const olElements = document.querySelectorAll(\"ol\"); olElements.forEach((ol) => { const start = ol.getAttribute(\"start\"); if (start) { ol.style.counterReset = `custom-counter ${start - 1}`; } }); }, Init: () => { console.log(\"初始化界面\"); AfterProcess.ResetCodeStyle(); AfterProcess.ResetTitle(); AfterProcess.InitVideo(); AfterProcess.InitList(); mermaid.init(undefined, \".mermaid\"); }, }; AfterProcess.Init();"},{"title":"","date":"2025-07-22T05:31:19.497Z","updated":"2024-11-20T18:00:56.000Z","comments":true,"path":"script/HomeScript.js","permalink":"https://bhdtec.com/script/HomeScript.js","excerpt":"","text":"window.HomeScript = { InitCard: () => { var targetDiv = document.getElementsByClassName(\"post-wrapper\"); for (var i = 0; i < targetDiv.length; i++) { var element = targetDiv[i]; element.classList.add(\"card-ani\"); var targetDivTop = element.getBoundingClientRect().top; if (targetDivTop < window.innerHeight + 260) { // 当目标div进入视口时，添加动画效果 // element.classList.add(\"animated\"); element.classList.add(\"card-in\"); } else { // 当目标div离开视口时，移除动画效果 // element.classList.remove(\"animated\"); element.classList.remove(\"card-in\"); } } }, CardAni: () => { var targetDiv = document.getElementsByClassName(\"post-wrapper\"); for (var i = 0; i < targetDiv.length; i++) { var element = targetDiv[i]; var targetDivTop = element.getBoundingClientRect().top; // if (targetDivTop < window.innerHeight) { // // 当目标div进入视口时，添加动画效果 // // element.classList.add(\"animated\"); // element.classList.add(\"card-in\"); // } else { // // 当目标div离开视口时，移除动画效果 // // element.classList.remove(\"animated\"); // element.classList.remove(\"card-in\"); // } if (targetDivTop >= window.innerHeight) { element.classList.remove(\"card-in\"); } else { element.classList.add(\"card-in\"); } } }, Init: () => { HomeScript.InitCard(); window.removeEventListener(\"scroll\", HomeScript.CardAni); window.addEventListener(\"scroll\", HomeScript.CardAni); }, }; HomeScript.Init();"},{"title":"","date":"2025-07-22T05:31:19.498Z","updated":"2024-11-20T18:00:56.000Z","comments":true,"path":"script/NavBarScript.js","permalink":"https://bhdtec.com/script/NavBarScript.js","excerpt":"","text":"window.NavBarScript = { obj: null, InitLock: () => { var isLock = localStorage.getItem(\"isLock\") || false; var ele = document.getElementsByClassName(\"head-bar\")[0]; var head = document.getElementsByClassName(\"l_header\")[0]; if (isLock == \"true\") { ele.classList.remove(\"head-bar-hover\"); head.classList.remove(\"l_header-hover\"); ele.classList.add(\"head-bar-focus\"); obj.innerHTML = \"🔒\"; } else { ele.classList.add(\"head-bar-hover\"); head.classList.add(\"l_header-hover\"); ele.classList.remove(\"head-bar-focus\"); obj.innerHTML = \"🔓\"; } console.log(\"初始化\", isLock); }, ChangeLock: () => { var isLock = localStorage.getItem(\"isLock\") || false; console.log(\"切换\"); var ele = document.getElementsByClassName(\"head-bar\")[0]; var head = document.getElementsByClassName(\"l_header\")[0]; if (isLock == \"false\") { ele.classList.remove(\"head-bar-hover\"); head.classList.remove(\"l_header-hover\"); ele.classList.add(\"head-bar-focus\"); obj.innerHTML = \"🔒\"; } else { ele.classList.add(\"head-bar-hover\"); head.classList.add(\"l_header-hover\"); ele.classList.remove(\"head-bar-focus\"); obj.innerHTML = \"🔓\"; } isLock = isLock == \"false\" ? \"true\" : \"false\"; console.log(isLock); localStorage.setItem(\"isLock\", isLock); }, Init: () => { obj = document.getElementsByClassName(\"lock-emoji\")[0]; NavBarScript.InitLock(); obj.addEventListener(\"click\", () => { NavBarScript.ChangeLock(); }); }, }; NavBarScript.Init();"},{"title":"","date":"2025-07-22T05:31:19.498Z","updated":"2024-11-20T18:00:56.000Z","comments":true,"path":"script/marked.min.js","permalink":"https://bhdtec.com/script/marked.min.js","excerpt":"","text":"/** * marked v4.3.0 - a markdown parser * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed) * https://github.com/markedjs/marked */ !function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=\"undefined\"!=typeof globalThis?globalThis:e||self).marked={})}(this,function(r){\"use strict\";function i(e,t){for(var u=0;u"},{"title":"搜索","date":"2025-08-20T04:36:50.000Z","updated":"2025-08-20T04:37:02.222Z","comments":true,"path":"search/index.html","permalink":"https://bhdtec.com/search/index.html","excerpt":"","text":""},{"title":"","date":"2025-07-22T05:31:19.498Z","updated":"2024-11-20T18:00:56.000Z","comments":true,"path":"script/plyr.js","permalink":"https://bhdtec.com/script/plyr.js","excerpt":"","text":"\"object\"==typeof navigator&&function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(\"Plyr\",t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).Plyr=t()}(this,(function(){\"use strict\";!function(){if(\"undefined\"!=typeof window)try{var e=new window.CustomEvent(\"test\",{cancelable:!0});if(e.preventDefault(),!0!==e.defaultPrevented)throw new Error(\"Could not prevent default\")}catch(e){var t=function(e,t){var i,s;return(t=t||{}).bubbles=!!t.bubbles,t.cancelable=!!t.cancelable,(i=document.createEvent(\"CustomEvent\")).initCustomEvent(e,t.bubbles,t.cancelable,t.detail),s=i.preventDefault,i.preventDefault=function(){s.call(this);try{Object.defineProperty(this,\"defaultPrevented\",{get:function(){return!0}})}catch(e){this.defaultPrevented=!0}},i};t.prototype=window.Event.prototype,window.CustomEvent=t}}();var e=\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:\"undefined\"!=typeof self?self:{};function t(e,t,i){return(t=function(e){var t=function(e,t){if(\"object\"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var s=i.call(e,t||\"default\");if(\"object\"!=typeof s)return s;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return(\"string\"===t?String:Number)(e)}(e,\"string\");return\"symbol\"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function i(e,t){for(var i=0;i\"function\"==typeof e,E=e=>Array.isArray(e),C=e=>b(e,NodeList),S=e=>v(e)||(T(e)||E(e)||C(e))&&!e.length||w(e)&&!Object.keys(e).length;var A={nullOrUndefined:v,object:w,number:e=>y(e)===Number&&!Number.isNaN(e),string:T,boolean:e=>y(e)===Boolean,function:k,array:E,weakMap:e=>b(e,WeakMap),nodeList:C,element:e=>null!==e&&\"object\"==typeof e&&1===e.nodeType&&\"object\"==typeof e.style&&\"object\"==typeof e.ownerDocument,textNode:e=>y(e)===Text,event:e=>b(e,Event),keyboardEvent:e=>b(e,KeyboardEvent),cue:e=>b(e,window.TextTrackCue)||b(e,window.VTTCue),track:e=>b(e,TextTrack)||!v(e)&&T(e.kind),promise:e=>b(e,Promise)&&k(e.then),url:e=>{if(b(e,window.URL))return!0;if(!T(e))return!1;let t=e;e.startsWith(\"http://\")&&e.startsWith(\"https://\")||(t=`http://${e}`);try{return!S(new URL(t).hostname)}catch(e){return!1}},empty:S};const P=(()=>{const e=document.createElement(\"span\"),t={WebkitTransition:\"webkitTransitionEnd\",MozTransition:\"transitionend\",OTransition:\"oTransitionEnd otransitionend\",transition:\"transitionend\"},i=Object.keys(t).find((t=>void 0!==e.style[t]));return!!A.string(i)&&t[i]})();function M(e,t){setTimeout((()=>{try{e.hidden=!0,e.offsetHeight,e.hidden=!1}catch(e){}}),t)}var x={isIE:Boolean(window.document.documentMode),isEdge:/Edge/g.test(navigator.userAgent),isWebKit:\"WebkitAppearance\"in document.documentElement.style&&!/Edge/g.test(navigator.userAgent),isIPhone:/iPhone|iPod/gi.test(navigator.userAgent)&&navigator.maxTouchPoints>1,isIPadOS:\"MacIntel\"===navigator.platform&&navigator.maxTouchPoints>1,isIos:/iPad|iPhone|iPod/gi.test(navigator.userAgent)&&navigator.maxTouchPoints>1};function L(e,t){return t.split(\".\").reduce(((e,t)=>e&&e[t]),e)}function N(e={},...t){if(!t.length)return e;const i=t.shift();return A.object(i)?(Object.keys(i).forEach((t=>{A.object(i[t])?(Object.keys(e).includes(t)||Object.assign(e,{[t]:{}}),N(e[t],i[t])):Object.assign(e,{[t]:i[t]})})),N(e,...t)):e}function _(e,t){const i=e.length?e:[e];Array.from(i).reverse().forEach(((e,i)=>{const s=i>0?t.cloneNode(!0):t,n=e.parentNode,a=e.nextSibling;s.appendChild(e),a?n.insertBefore(s,a):n.appendChild(s)}))}function I(e,t){A.element(e)&&!A.empty(t)&&Object.entries(t).filter((([,e])=>!A.nullOrUndefined(e))).forEach((([t,i])=>e.setAttribute(t,i)))}function O(e,t,i){const s=document.createElement(e);return A.object(t)&&I(s,t),A.string(i)&&(s.innerText=i),s}function $(e,t,i,s){A.element(t)&&t.appendChild(O(e,i,s))}function j(e){A.nodeList(e)||A.array(e)?Array.from(e).forEach(j):A.element(e)&&A.element(e.parentNode)&&e.parentNode.removeChild(e)}function R(e){if(!A.element(e))return;let{length:t}=e.childNodes;for(;t>0;)e.removeChild(e.lastChild),t-=1}function D(e,t){return A.element(t)&&A.element(t.parentNode)&&A.element(e)?(t.parentNode.replaceChild(e,t),e):null}function q(e,t){if(!A.string(e)||A.empty(e))return{};const i={},s=N({},t);return e.split(\",\").forEach((e=>{const t=e.trim(),n=t.replace(\".\",\"\"),a=t.replace(/[[\\]]/g,\"\").split(\"=\"),[r]=a,o=a.length>1?a[1].replace(/[\"']/g,\"\"):\"\";switch(t.charAt(0)){case\".\":A.string(s.class)?i.class=`${s.class} ${n}`:i.class=n;break;case\"#\":i.id=t.replace(\"#\",\"\");break;case\"[\":i[r]=o}})),N(s,i)}function H(e,t){if(!A.element(e))return;let i=t;A.boolean(i)||(i=!e.hidden),e.hidden=i}function F(e,t,i){if(A.nodeList(e))return Array.from(e).map((e=>F(e,t,i)));if(A.element(e)){let s=\"toggle\";return void 0!==i&&(s=i?\"add\":\"remove\"),e.classList[s](t),e.classList.contains(t)}return!1}function U(e,t){return A.element(e)&&e.classList.contains(t)}function V(e,t){const{prototype:i}=Element;return(i.matches||i.webkitMatchesSelector||i.mozMatchesSelector||i.msMatchesSelector||function(){return Array.from(document.querySelectorAll(t)).includes(this)}).call(e,t)}function B(e){return this.elements.container.querySelectorAll(e)}function W(e){return this.elements.container.querySelector(e)}function z(e=null,t=!1){A.element(e)&&e.focus({preventScroll:!0,focusVisible:t})}const K={\"audio/ogg\":\"vorbis\",\"audio/wav\":\"1\",\"video/webm\":\"vp8, vorbis\",\"video/mp4\":\"avc1.42E01E, mp4a.40.2\",\"video/ogg\":\"theora\"},Y={audio:\"canPlayType\"in document.createElement(\"audio\"),video:\"canPlayType\"in document.createElement(\"video\"),check(e,t){const i=Y[e]||\"html5\"!==t;return{api:i,ui:i&&Y.rangeInput}},pip:!(x.isIPhone||!A.function(O(\"video\").webkitSetPresentationMode)&&(!document.pictureInPictureEnabled||O(\"video\").disablePictureInPicture)),airplay:A.function(window.WebKitPlaybackTargetAvailabilityEvent),playsinline:\"playsInline\"in document.createElement(\"video\"),mime(e){if(A.empty(e))return!1;const[t]=e.split(\"/\");let i=e;if(!this.isHTML5||t!==this.type)return!1;Object.keys(K).includes(i)&&(i+=`; codecs=\"${K[e]}\"`);try{return Boolean(i&&this.media.canPlayType(i).replace(/no/,\"\"))}catch(e){return!1}},textTracks:\"textTracks\"in document.createElement(\"video\"),rangeInput:(()=>{const e=document.createElement(\"input\");return e.type=\"range\",\"range\"===e.type})(),touch:\"ontouchstart\"in document.documentElement,transitions:!1!==P,reducedMotion:\"matchMedia\"in window&&window.matchMedia(\"(prefers-reduced-motion)\").matches},Q=(()=>{let e=!1;try{const t=Object.defineProperty({},\"passive\",{get:()=>(e=!0,null)});window.addEventListener(\"test\",null,t),window.removeEventListener(\"test\",null,t)}catch(e){}return e})();function X(e,t,i,s=!1,n=!0,a=!1){if(!e||!(\"addEventListener\"in e)||A.empty(t)||!A.function(i))return;const r=t.split(\" \");let o=a;Q&&(o={passive:n,capture:a}),r.forEach((t=>{this&&this.eventListeners&&s&&this.eventListeners.push({element:e,type:t,callback:i,options:o}),e[s?\"addEventListener\":\"removeEventListener\"](t,i,o)}))}function J(e,t=\"\",i,s=!0,n=!1){X.call(this,e,t,i,!0,s,n)}function G(e,t=\"\",i,s=!0,n=!1){X.call(this,e,t,i,!1,s,n)}function Z(e,t=\"\",i,s=!0,n=!1){const a=(...r)=>{G(e,t,a,s,n),i.apply(this,r)};X.call(this,e,t,a,!0,s,n)}function ee(e,t=\"\",i=!1,s={}){if(!A.element(e)||A.empty(t))return;const n=new CustomEvent(t,{bubbles:i,detail:{...s,plyr:this}});e.dispatchEvent(n)}function te(){this&&this.eventListeners&&(this.eventListeners.forEach((e=>{const{element:t,type:i,callback:s,options:n}=e;t.removeEventListener(i,s,n)})),this.eventListeners=[])}function ie(){return new Promise((e=>this.ready?setTimeout(e,0):J.call(this,this.elements.container,\"ready\",e))).then((()=>{}))}function se(e){A.promise(e)&&e.then(null,(()=>{}))}function ne(e){return A.array(e)?e.filter(((t,i)=>e.indexOf(t)===i)):e}function ae(e,t){return A.array(e)&&e.length?e.reduce(((e,i)=>Math.abs(i-t)({...e,[t/i]:[t,i]})),{});function le(e){if(!(A.array(e)||A.string(e)&&e.includes(\":\")))return!1;return(A.array(e)?e:e.split(\":\")).map(Number).every(A.number)}function ce(e){if(!A.array(e)||!e.every(A.number))return null;const[t,i]=e,s=(e,t)=>0===t?e:s(t,e%t),n=s(t,i);return[t/n,i/n]}function ue(e){const t=e=>le(e)?e.split(\":\").map(Number):null;let i=t(e);if(null===i&&(i=t(this.config.ratio)),null===i&&!A.empty(this.embed)&&A.array(this.embed.ratio)&&({ratio:i}=this.embed),null===i&&this.isHTML5){const{videoWidth:e,videoHeight:t}=this.media;i=[e,t]}return ce(i)}function he(e){if(!this.isVideo)return{};const{wrapper:t}=this.elements,i=ue.call(this,e);if(!A.array(i))return{};const[s,n]=ce(i),a=100/s*n;if(re(`aspect-ratio: ${s}/${n}`)?t.style.aspectRatio=`${s}/${n}`:t.style.paddingBottom=`${a}%`,this.isVimeo&&!this.config.vimeo.premium&&this.supported.ui){const e=100/this.media.offsetWidth*parseInt(window.getComputedStyle(this.media).paddingBottom,10),i=(e-a)/(e/50);this.fullscreen.active?t.style.paddingBottom=null:this.media.style.transform=`translateY(-${i}%)`}else this.isHTML5&&t.classList.add(this.config.classNames.videoFixedRatio);return{padding:a,ratio:i}}function de(e,t,i=.05){const s=e/t,n=ae(Object.keys(oe),s);return Math.abs(n-s){const t=e.getAttribute(\"type\");return!!A.empty(t)||Y.mime.call(this,t)}))},getQualityOptions(){return this.config.quality.forced?this.config.quality.options:me.getSources.call(this).map((e=>Number(e.getAttribute(\"size\")))).filter(Boolean)},setup(){if(!this.isHTML5)return;const e=this;e.options.speed=e.config.speed.options,A.empty(this.config.ratio)||he.call(e),Object.defineProperty(e.media,\"quality\",{get(){const t=me.getSources.call(e).find((t=>t.getAttribute(\"src\")===e.source));return t&&Number(t.getAttribute(\"size\"))},set(t){if(e.quality!==t){if(e.config.quality.forced&&A.function(e.config.quality.onChange))e.config.quality.onChange(t);else{const i=me.getSources.call(e).find((e=>Number(e.getAttribute(\"size\"))===t));if(!i)return;const{currentTime:s,paused:n,preload:a,readyState:r,playbackRate:o}=e.media;e.media.src=i.getAttribute(\"src\"),(\"none\"!==a||r)&&(e.once(\"loadedmetadata\",(()=>{e.speed=o,e.currentTime=s,n||se(e.play())})),e.media.load())}ee.call(e,e.media,\"qualitychange\",!1,{quality:t})}}})},cancelRequests(){this.isHTML5&&(j(me.getSources.call(this)),this.media.setAttribute(\"src\",this.config.blankVideo),this.media.load(),this.debug.log(\"Cancelled network requests\"))}};function pe(e,...t){return A.empty(e)?e:e.toString().replace(/{(\\d+)}/g,((e,i)=>t[i].toString()))}const ge=(e=\"\",t=\"\",i=\"\")=>e.replace(new RegExp(t.toString().replace(/([.*+?^=!:${}()|[\\]/\\\\])/g,\"\\\\$1\"),\"g\"),i.toString()),fe=(e=\"\")=>e.toString().replace(/\\w\\S*/g,(e=>e.charAt(0).toUpperCase()+e.slice(1).toLowerCase()));function ye(e=\"\"){let t=e.toString();return t=function(e=\"\"){let t=e.toString();return t=ge(t,\"-\",\" \"),t=ge(t,\"_\",\" \"),t=fe(t),ge(t,\" \",\"\")}(t),t.charAt(0).toLowerCase()+t.slice(1)}function be(e){const t=document.createElement(\"div\");return t.appendChild(e),t.innerHTML}const ve={pip:\"PIP\",airplay:\"AirPlay\",html5:\"HTML5\",vimeo:\"Vimeo\",youtube:\"YouTube\"},we={get(e=\"\",t={}){if(A.empty(e)||A.empty(t))return\"\";let i=L(t.i18n,e);if(A.empty(i))return Object.keys(ve).includes(e)?ve[e]:\"\";const s={\"{seektime}\":t.seekTime,\"{title}\":t.title};return Object.entries(s).forEach((([e,t])=>{i=ge(i,e,t)})),i}};class Te{constructor(e){t(this,\"get\",(e=>{if(!Te.supported||!this.enabled)return null;const t=window.localStorage.getItem(this.key);if(A.empty(t))return null;const i=JSON.parse(t);return A.string(e)&&e.length?i[e]:i})),t(this,\"set\",(e=>{if(!Te.supported||!this.enabled)return;if(!A.object(e))return;let t=this.get();A.empty(t)&&(t={}),N(t,e);try{window.localStorage.setItem(this.key,JSON.stringify(t))}catch(e){}})),this.enabled=e.config.storage.enabled,this.key=e.config.storage.key}static get supported(){try{if(!(\"localStorage\"in window))return!1;const e=\"___test\";return window.localStorage.setItem(e,e),window.localStorage.removeItem(e),!0}catch(e){return!1}}}function ke(e,t=\"text\"){return new Promise(((i,s)=>{try{const s=new XMLHttpRequest;if(!(\"withCredentials\"in s))return;s.addEventListener(\"load\",(()=>{if(\"text\"===t)try{i(JSON.parse(s.responseText))}catch(e){i(s.responseText)}else i(s.response)})),s.addEventListener(\"error\",(()=>{throw new Error(s.status)})),s.open(\"GET\",e,!0),s.responseType=t,s.send()}catch(e){s(e)}}))}function Ee(e,t){if(!A.string(e))return;const i=\"cache\",s=A.string(t);let n=!1;const a=()=>null!==document.getElementById(t),r=(e,t)=>{e.innerHTML=t,s&&a()||document.body.insertAdjacentElement(\"afterbegin\",e)};if(!s||!a()){const a=Te.supported,o=document.createElement(\"div\");if(o.setAttribute(\"hidden\",\"\"),s&&o.setAttribute(\"id\",t),a){const e=window.localStorage.getItem(`${i}-${t}`);if(n=null!==e,n){const t=JSON.parse(e);r(o,t.content)}}ke(e).then((e=>{if(!A.empty(e)){if(a)try{window.localStorage.setItem(`${i}-${t}`,JSON.stringify({content:e}))}catch(e){}r(o,e)}})).catch((()=>{}))}}const Ce=e=>Math.trunc(e/60/60%60,10),Se=e=>Math.trunc(e/60%60,10),Ae=e=>Math.trunc(e%60,10);function Pe(e=0,t=!1,i=!1){if(!A.number(e))return Pe(void 0,t,i);const s=e=>`0${e}`.slice(-2);let n=Ce(e);const a=Se(e),r=Ae(e);return n=t||n>0?`${n}:`:\"\",`${i&&e>0?\"-\":\"\"}${n}${s(a)}:${s(r)}`}const Me={getIconUrl(){const e=new URL(this.config.iconUrl,window.location),t=window.location.host?window.location.host:window.top.location.host,i=e.host!==t||x.isIE&&!window.svg4everybody;return{url:this.config.iconUrl,cors:i}},findElements(){try{return this.elements.controls=W.call(this,this.config.selectors.controls.wrapper),this.elements.buttons={play:B.call(this,this.config.selectors.buttons.play),pause:W.call(this,this.config.selectors.buttons.pause),restart:W.call(this,this.config.selectors.buttons.restart),rewind:W.call(this,this.config.selectors.buttons.rewind),fastForward:W.call(this,this.config.selectors.buttons.fastForward),mute:W.call(this,this.config.selectors.buttons.mute),pip:W.call(this,this.config.selectors.buttons.pip),airplay:W.call(this,this.config.selectors.buttons.airplay),settings:W.call(this,this.config.selectors.buttons.settings),captions:W.call(this,this.config.selectors.buttons.captions),fullscreen:W.call(this,this.config.selectors.buttons.fullscreen)},this.elements.progress=W.call(this,this.config.selectors.progress),this.elements.inputs={seek:W.call(this,this.config.selectors.inputs.seek),volume:W.call(this,this.config.selectors.inputs.volume)},this.elements.display={buffer:W.call(this,this.config.selectors.display.buffer),currentTime:W.call(this,this.config.selectors.display.currentTime),duration:W.call(this,this.config.selectors.display.duration)},A.element(this.elements.progress)&&(this.elements.display.seekTooltip=this.elements.progress.querySelector(`.${this.config.classNames.tooltip}`)),!0}catch(e){return this.debug.warn(\"It looks like there is a problem with your custom controls HTML\",e),this.toggleNativeControls(!0),!1}},createIcon(e,t){const i=\"http://www.w3.org/2000/svg\",s=Me.getIconUrl.call(this),n=`${s.cors?\"\":s.url}#${this.config.iconPrefix}`,a=document.createElementNS(i,\"svg\");I(a,N(t,{\"aria-hidden\":\"true\",focusable:\"false\"}));const r=document.createElementNS(i,\"use\"),o=`${n}-${e}`;return\"href\"in r&&r.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"href\",o),r.setAttributeNS(\"http://www.w3.org/1999/xlink\",\"xlink:href\",o),a.appendChild(r),a},createLabel(e,t={}){const i=we.get(e,this.config);return O(\"span\",{...t,class:[t.class,this.config.classNames.hidden].filter(Boolean).join(\" \")},i)},createBadge(e){if(A.empty(e))return null;const t=O(\"span\",{class:this.config.classNames.menu.value});return t.appendChild(O(\"span\",{class:this.config.classNames.menu.badge},e)),t},createButton(e,t){const i=N({},t);let s=ye(e);const n={element:\"button\",toggle:!1,label:null,icon:null,labelPressed:null,iconPressed:null};switch([\"element\",\"icon\",\"label\"].forEach((e=>{Object.keys(i).includes(e)&&(n[e]=i[e],delete i[e])})),\"button\"!==n.element||Object.keys(i).includes(\"type\")||(i.type=\"button\"),Object.keys(i).includes(\"class\")?i.class.split(\" \").some((e=>e===this.config.classNames.control))||N(i,{class:`${i.class} ${this.config.classNames.control}`}):i.class=this.config.classNames.control,e){case\"play\":n.toggle=!0,n.label=\"play\",n.labelPressed=\"pause\",n.icon=\"play\",n.iconPressed=\"pause\";break;case\"mute\":n.toggle=!0,n.label=\"mute\",n.labelPressed=\"unmute\",n.icon=\"volume\",n.iconPressed=\"muted\";break;case\"captions\":n.toggle=!0,n.label=\"enableCaptions\",n.labelPressed=\"disableCaptions\",n.icon=\"captions-off\",n.iconPressed=\"captions-on\";break;case\"fullscreen\":n.toggle=!0,n.label=\"enterFullscreen\",n.labelPressed=\"exitFullscreen\",n.icon=\"enter-fullscreen\",n.iconPressed=\"exit-fullscreen\";break;case\"play-large\":i.class+=` ${this.config.classNames.control}--overlaid`,s=\"play\",n.label=\"play\",n.icon=\"play\";break;default:A.empty(n.label)&&(n.label=s),A.empty(n.icon)&&(n.icon=e)}const a=O(n.element);return n.toggle?(a.appendChild(Me.createIcon.call(this,n.iconPressed,{class:\"icon--pressed\"})),a.appendChild(Me.createIcon.call(this,n.icon,{class:\"icon--not-pressed\"})),a.appendChild(Me.createLabel.call(this,n.labelPressed,{class:\"label--pressed\"})),a.appendChild(Me.createLabel.call(this,n.label,{class:\"label--not-pressed\"}))):(a.appendChild(Me.createIcon.call(this,n.icon)),a.appendChild(Me.createLabel.call(this,n.label))),N(i,q(this.config.selectors.buttons[s],i)),I(a,i),\"play\"===s?(A.array(this.elements.buttons[s])||(this.elements.buttons[s]=[]),this.elements.buttons[s].push(a)):this.elements.buttons[s]=a,a},createRange(e,t){const i=O(\"input\",N(q(this.config.selectors.inputs[e]),{type:\"range\",min:0,max:100,step:.01,value:0,autocomplete:\"off\",role:\"slider\",\"aria-label\":we.get(e,this.config),\"aria-valuemin\":0,\"aria-valuemax\":100,\"aria-valuenow\":0},t));return this.elements.inputs[e]=i,Me.updateRangeFill.call(this,i),f.setup(i),i},createProgress(e,t){const i=O(\"progress\",N(q(this.config.selectors.display[e]),{min:0,max:100,value:0,role:\"progressbar\",\"aria-hidden\":!0},t));if(\"volume\"!==e){i.appendChild(O(\"span\",null,\"0\"));const t={played:\"played\",buffer:\"buffered\"}[e],s=t?we.get(t,this.config):\"\";i.innerText=`% ${s.toLowerCase()}`}return this.elements.display[e]=i,i},createTime(e,t){const i=q(this.config.selectors.display[e],t),s=O(\"div\",N(i,{class:`${i.class?i.class:\"\"} ${this.config.classNames.display.time} `.trim(),\"aria-label\":we.get(e,this.config),role:\"timer\"}),\"00:00\");return this.elements.display[e]=s,s},bindMenuItemShortcuts(e,t){J.call(this,e,\"keydown keyup\",(i=>{if(![\" \",\"ArrowUp\",\"ArrowDown\",\"ArrowRight\"].includes(i.key))return;if(i.preventDefault(),i.stopPropagation(),\"keydown\"===i.type)return;const s=V(e,'[role=\"menuitemradio\"]');if(!s&&[\" \",\"ArrowRight\"].includes(i.key))Me.showMenuPanel.call(this,t,!0);else{let t;\" \"!==i.key&&(\"ArrowDown\"===i.key||s&&\"ArrowRight\"===i.key?(t=e.nextElementSibling,A.element(t)||(t=e.parentNode.firstElementChild)):(t=e.previousElementSibling,A.element(t)||(t=e.parentNode.lastElementChild)),z.call(this,t,!0))}}),!1),J.call(this,e,\"keyup\",(e=>{\"Return\"===e.key&&Me.focusFirstMenuItem.call(this,null,!0)}))},createMenuItem({value:e,list:t,type:i,title:s,badge:n=null,checked:a=!1}){const r=q(this.config.selectors.inputs[i]),o=O(\"button\",N(r,{type:\"button\",role:\"menuitemradio\",class:`${this.config.classNames.control} ${r.class?r.class:\"\"}`.trim(),\"aria-checked\":a,value:e})),l=O(\"span\");l.innerHTML=s,A.element(n)&&l.appendChild(n),o.appendChild(l),Object.defineProperty(o,\"checked\",{enumerable:!0,get:()=>\"true\"===o.getAttribute(\"aria-checked\"),set(e){e&&Array.from(o.parentNode.children).filter((e=>V(e,'[role=\"menuitemradio\"]'))).forEach((e=>e.setAttribute(\"aria-checked\",\"false\"))),o.setAttribute(\"aria-checked\",e?\"true\":\"false\")}}),this.listeners.bind(o,\"click keyup\",(t=>{if(!A.keyboardEvent(t)||\" \"===t.key){switch(t.preventDefault(),t.stopPropagation(),o.checked=!0,i){case\"language\":this.currentTrack=Number(e);break;case\"quality\":this.quality=e;break;case\"speed\":this.speed=parseFloat(e)}Me.showMenuPanel.call(this,\"home\",A.keyboardEvent(t))}}),i,!1),Me.bindMenuItemShortcuts.call(this,o,i),t.appendChild(o)},formatTime(e=0,t=!1){if(!A.number(e))return e;return Pe(e,Ce(this.duration)>0,t)},updateTimeDisplay(e=null,t=0,i=!1){A.element(e)&&A.number(t)&&(e.innerText=Me.formatTime(t,i))},updateVolume(){this.supported.ui&&(A.element(this.elements.inputs.volume)&&Me.setRange.call(this,this.elements.inputs.volume,this.muted?0:this.volume),A.element(this.elements.buttons.mute)&&(this.elements.buttons.mute.pressed=this.muted||0===this.volume))},setRange(e,t=0){A.element(e)&&(e.value=t,Me.updateRangeFill.call(this,e))},updateProgress(e){if(!this.supported.ui||!A.event(e))return;let t=0;const i=(e,t)=>{const i=A.number(t)?t:0,s=A.element(e)?e:this.elements.display.buffer;if(A.element(s)){s.value=i;const e=s.getElementsByTagName(\"span\")[0];A.element(e)&&(e.childNodes[0].nodeValue=i)}};if(e)switch(e.type){case\"timeupdate\":case\"seeking\":case\"seeked\":s=this.currentTime,n=this.duration,t=0===s||0===n||Number.isNaN(s)||Number.isNaN(n)?0:(s/n*100).toFixed(2),\"timeupdate\"===e.type&&Me.setRange.call(this,this.elements.inputs.seek,t);break;case\"playing\":case\"progress\":i(this.elements.display.buffer,100*this.buffered)}var s,n},updateRangeFill(e){const t=A.event(e)?e.target:e;if(A.element(t)&&\"range\"===t.getAttribute(\"type\")){if(V(t,this.config.selectors.inputs.seek)){t.setAttribute(\"aria-valuenow\",this.currentTime);const e=Me.formatTime(this.currentTime),i=Me.formatTime(this.duration),s=we.get(\"seekLabel\",this.config);t.setAttribute(\"aria-valuetext\",s.replace(\"{currentTime}\",e).replace(\"{duration}\",i))}else if(V(t,this.config.selectors.inputs.volume)){const e=100*t.value;t.setAttribute(\"aria-valuenow\",e),t.setAttribute(\"aria-valuetext\",`${e.toFixed(1)}%`)}else t.setAttribute(\"aria-valuenow\",t.value);(x.isWebKit||x.isIPadOS)&&t.style.setProperty(\"--value\",t.value/t.max*100+\"%\")}},updateSeekTooltip(e){var t,i;if(!this.config.tooltips.seek||!A.element(this.elements.inputs.seek)||!A.element(this.elements.display.seekTooltip)||0===this.duration)return;const s=this.elements.display.seekTooltip,n=`${this.config.classNames.tooltip}--visible`,a=e=>F(s,n,e);if(this.touch)return void a(!1);let r=0;const o=this.elements.progress.getBoundingClientRect();if(A.event(e))r=100/o.width*(e.pageX-o.left);else{if(!U(s,n))return;r=parseFloat(s.style.left,10)}r100&&(r=100);const l=this.duration/100*r;s.innerText=Me.formatTime(l);const c=null===(t=this.config.markers)||void 0===t||null===(i=t.points)||void 0===i?void 0:i.find((({time:e})=>e===Math.round(l)));c&&s.insertAdjacentHTML(\"afterbegin\",`${c.label}`),s.style.left=`${r}%`,A.event(e)&&[\"mouseenter\",\"mouseleave\"].includes(e.type)&&a(\"mouseenter\"===e.type)},timeUpdate(e){const t=!A.element(this.elements.display.duration)&&this.config.invertTime;Me.updateTimeDisplay.call(this,this.elements.display.currentTime,t?this.duration-this.currentTime:this.currentTime,t),e&&\"timeupdate\"===e.type&&this.media.seeking||Me.updateProgress.call(this,e)},durationUpdate(){if(!this.supported.ui||!this.config.invertTime&&this.currentTime)return;if(this.duration>=2**32)return H(this.elements.display.currentTime,!0),void H(this.elements.progress,!0);A.element(this.elements.inputs.seek)&&this.elements.inputs.seek.setAttribute(\"aria-valuemax\",this.duration);const e=A.element(this.elements.display.duration);!e&&this.config.displayDuration&&this.paused&&Me.updateTimeDisplay.call(this,this.elements.display.currentTime,this.duration),e&&Me.updateTimeDisplay.call(this,this.elements.display.duration,this.duration),this.config.markers.enabled&&Me.setMarkers.call(this),Me.updateSeekTooltip.call(this)},toggleMenuButton(e,t){H(this.elements.settings.buttons[e],!t)},updateSetting(e,t,i){const s=this.elements.settings.panels[e];let n=null,a=t;if(\"captions\"===e)n=this.currentTrack;else{if(n=A.empty(i)?this[e]:i,A.empty(n)&&(n=this.config[e].default),!A.empty(this.options[e])&&!this.options[e].includes(n))return void this.debug.warn(`Unsupported value of '${n}' for ${e}`);if(!this.config[e].options.includes(n))return void this.debug.warn(`Disabled value of '${n}' for ${e}`)}if(A.element(a)||(a=s&&s.querySelector('[role=\"menu\"]')),!A.element(a))return;this.elements.settings.buttons[e].querySelector(`.${this.config.classNames.menu.value}`).innerHTML=Me.getLabel.call(this,e,n);const r=a&&a.querySelector(`[value=\"${n}\"]`);A.element(r)&&(r.checked=!0)},getLabel(e,t){switch(e){case\"speed\":return 1===t?we.get(\"normal\",this.config):`${t}&times;`;case\"quality\":if(A.number(t)){const e=we.get(`qualityLabel.${t}`,this.config);return e.length?e:`${t}p`}return fe(t);case\"captions\":return Ne.getLabel.call(this);default:return null}},setQualityMenu(e){if(!A.element(this.elements.settings.panels.quality))return;const t=\"quality\",i=this.elements.settings.panels.quality.querySelector('[role=\"menu\"]');A.array(e)&&(this.options.quality=ne(e).filter((e=>this.config.quality.options.includes(e))));const s=!A.empty(this.options.quality)&&this.options.quality.length>1;if(Me.toggleMenuButton.call(this,t,s),R(i),Me.checkMenu.call(this),!s)return;const n=e=>{const t=we.get(`qualityBadge.${e}`,this.config);return t.length?Me.createBadge.call(this,t):null};this.options.quality.sort(((e,t)=>{const i=this.config.quality.options;return i.indexOf(e)>i.indexOf(t)?1:-1})).forEach((e=>{Me.createMenuItem.call(this,{value:e,list:i,type:t,title:Me.getLabel.call(this,\"quality\",e),badge:n(e)})})),Me.updateSetting.call(this,t,i)},setCaptionsMenu(){if(!A.element(this.elements.settings.panels.captions))return;const e=\"captions\",t=this.elements.settings.panels.captions.querySelector('[role=\"menu\"]'),i=Ne.getTracks.call(this),s=Boolean(i.length);if(Me.toggleMenuButton.call(this,e,s),R(t),Me.checkMenu.call(this),!s)return;const n=i.map(((e,i)=>({value:i,checked:this.captions.toggled&&this.currentTrack===i,title:Ne.getLabel.call(this,e),badge:e.language&&Me.createBadge.call(this,e.language.toUpperCase()),list:t,type:\"language\"})));n.unshift({value:-1,checked:!this.captions.toggled,title:we.get(\"disabled\",this.config),list:t,type:\"language\"}),n.forEach(Me.createMenuItem.bind(this)),Me.updateSetting.call(this,e,t)},setSpeedMenu(){if(!A.element(this.elements.settings.panels.speed))return;const e=\"speed\",t=this.elements.settings.panels.speed.querySelector('[role=\"menu\"]');this.options.speed=this.options.speed.filter((e=>e>=this.minimumSpeed&&e1;Me.toggleMenuButton.call(this,e,i),R(t),Me.checkMenu.call(this),i&&(this.options.speed.forEach((i=>{Me.createMenuItem.call(this,{value:i,list:t,type:e,title:Me.getLabel.call(this,\"speed\",i)})})),Me.updateSetting.call(this,e,t))},checkMenu(){const{buttons:e}=this.elements.settings,t=!A.empty(e)&&Object.values(e).some((e=>!e.hidden));H(this.elements.settings.menu,!t)},focusFirstMenuItem(e,t=!1){if(this.elements.settings.popup.hidden)return;let i=e;A.element(i)||(i=Object.values(this.elements.settings.panels).find((e=>!e.hidden)));const s=i.querySelector('[role^=\"menuitem\"]');z.call(this,s,t)},toggleMenu(e){const{popup:t}=this.elements.settings,i=this.elements.buttons.settings;if(!A.element(t)||!A.element(i))return;const{hidden:s}=t;let n=s;if(A.boolean(e))n=e;else if(A.keyboardEvent(e)&&\"Escape\"===e.key)n=!1;else if(A.event(e)){const s=A.function(e.composedPath)?e.composedPath()[0]:e.target,a=t.contains(s);if(a||!a&&e.target!==i&&n)return}i.setAttribute(\"aria-expanded\",n),H(t,!n),F(this.elements.container,this.config.classNames.menu.open,n),n&&A.keyboardEvent(e)?Me.focusFirstMenuItem.call(this,null,!0):n||s||z.call(this,i,A.keyboardEvent(e))},getMenuSize(e){const t=e.cloneNode(!0);t.style.position=\"absolute\",t.style.opacity=0,t.removeAttribute(\"hidden\"),e.parentNode.appendChild(t);const i=t.scrollWidth,s=t.scrollHeight;return j(t),{width:i,height:s}},showMenuPanel(e=\"\",t=!1){const i=this.elements.container.querySelector(`#plyr-settings-${this.id}-${e}`);if(!A.element(i))return;const s=i.parentNode,n=Array.from(s.children).find((e=>!e.hidden));if(Y.transitions&&!Y.reducedMotion){s.style.width=`${n.scrollWidth}px`,s.style.height=`${n.scrollHeight}px`;const e=Me.getMenuSize.call(this,i),t=e=>{e.target===s&&[\"width\",\"height\"].includes(e.propertyName)&&(s.style.width=\"\",s.style.height=\"\",G.call(this,s,P,t))};J.call(this,s,P,t),s.style.width=`${e.width}px`,s.style.height=`${e.height}px`}H(n,!0),H(i,!1),Me.focusFirstMenuItem.call(this,i,t)},setDownloadUrl(){const e=this.elements.buttons.download;A.element(e)&&e.setAttribute(\"href\",this.download)},create(e){const{bindMenuItemShortcuts:t,createButton:i,createProgress:s,createRange:n,createTime:a,setQualityMenu:r,setSpeedMenu:o,showMenuPanel:l}=Me;this.elements.controls=null,A.array(this.config.controls)&&this.config.controls.includes(\"play-large\")&&this.elements.container.appendChild(i.call(this,\"play-large\"));const c=O(\"div\",q(this.config.selectors.controls.wrapper));this.elements.controls=c;const u={class:\"plyr__controls__item\"};return ne(A.array(this.config.controls)?this.config.controls:[]).forEach((r=>{if(\"restart\"===r&&c.appendChild(i.call(this,\"restart\",u)),\"rewind\"===r&&c.appendChild(i.call(this,\"rewind\",u)),\"play\"===r&&c.appendChild(i.call(this,\"play\",u)),\"fast-forward\"===r&&c.appendChild(i.call(this,\"fast-forward\",u)),\"progress\"===r){const t=O(\"div\",{class:`${u.class} plyr__progress__container`}),i=O(\"div\",q(this.config.selectors.progress));if(i.appendChild(n.call(this,\"seek\",{id:`plyr-seek-${e.id}`})),i.appendChild(s.call(this,\"buffer\")),this.config.tooltips.seek){const e=O(\"span\",{class:this.config.classNames.tooltip},\"00:00\");i.appendChild(e),this.elements.display.seekTooltip=e}this.elements.progress=i,t.appendChild(this.elements.progress),c.appendChild(t)}if(\"current-time\"===r&&c.appendChild(a.call(this,\"currentTime\",u)),\"duration\"===r&&c.appendChild(a.call(this,\"duration\",u)),\"mute\"===r||\"volume\"===r){let{volume:t}=this.elements;if(A.element(t)&&c.contains(t)||(t=O(\"div\",N({},u,{class:`${u.class} plyr__volume`.trim()})),this.elements.volume=t,c.appendChild(t)),\"mute\"===r&&t.appendChild(i.call(this,\"mute\")),\"volume\"===r&&!x.isIos&&!x.isIPadOS){const i={max:1,step:.05,value:this.config.volume};t.appendChild(n.call(this,\"volume\",N(i,{id:`plyr-volume-${e.id}`})))}}if(\"captions\"===r&&c.appendChild(i.call(this,\"captions\",u)),\"settings\"===r&&!A.empty(this.config.settings)){const s=O(\"div\",N({},u,{class:`${u.class} plyr__menu`.trim(),hidden:\"\"}));s.appendChild(i.call(this,\"settings\",{\"aria-haspopup\":!0,\"aria-controls\":`plyr-settings-${e.id}`,\"aria-expanded\":!1}));const n=O(\"div\",{class:\"plyr__menu__container\",id:`plyr-settings-${e.id}`,hidden:\"\"}),a=O(\"div\"),r=O(\"div\",{id:`plyr-settings-${e.id}-home`}),o=O(\"div\",{role:\"menu\"});r.appendChild(o),a.appendChild(r),this.elements.settings.panels.home=r,this.config.settings.forEach((i=>{const s=O(\"button\",N(q(this.config.selectors.buttons.settings),{type:\"button\",class:`${this.config.classNames.control} ${this.config.classNames.control}--forward`,role:\"menuitem\",\"aria-haspopup\":!0,hidden:\"\"}));t.call(this,s,i),J.call(this,s,\"click\",(()=>{l.call(this,i,!1)}));const n=O(\"span\",null,we.get(i,this.config)),r=O(\"span\",{class:this.config.classNames.menu.value});r.innerHTML=e[i],n.appendChild(r),s.appendChild(n),o.appendChild(s);const c=O(\"div\",{id:`plyr-settings-${e.id}-${i}`,hidden:\"\"}),u=O(\"button\",{type:\"button\",class:`${this.config.classNames.control} ${this.config.classNames.control}--back`});u.appendChild(O(\"span\",{\"aria-hidden\":!0},we.get(i,this.config))),u.appendChild(O(\"span\",{class:this.config.classNames.hidden},we.get(\"menuBack\",this.config))),J.call(this,c,\"keydown\",(e=>{\"ArrowLeft\"===e.key&&(e.preventDefault(),e.stopPropagation(),l.call(this,\"home\",!0))}),!1),J.call(this,u,\"click\",(()=>{l.call(this,\"home\",!1)})),c.appendChild(u),c.appendChild(O(\"div\",{role:\"menu\"})),a.appendChild(c),this.elements.settings.buttons[i]=s,this.elements.settings.panels[i]=c})),n.appendChild(a),s.appendChild(n),c.appendChild(s),this.elements.settings.popup=n,this.elements.settings.menu=s}if(\"pip\"===r&&Y.pip&&c.appendChild(i.call(this,\"pip\",u)),\"airplay\"===r&&Y.airplay&&c.appendChild(i.call(this,\"airplay\",u)),\"download\"===r){const e=N({},u,{element:\"a\",href:this.download,target:\"_blank\"});this.isHTML5&&(e.download=\"\");const{download:t}=this.config.urls;!A.url(t)&&this.isEmbed&&N(e,{icon:`logo-${this.provider}`,label:this.provider}),c.appendChild(i.call(this,\"download\",e))}\"fullscreen\"===r&&c.appendChild(i.call(this,\"fullscreen\",u))})),this.isHTML5&&r.call(this,me.getQualityOptions.call(this)),o.call(this),c},inject(){if(this.config.loadSprite){const e=Me.getIconUrl.call(this);e.cors&&Ee(e.url,\"sprite-plyr\")}this.id=Math.floor(1e4*Math.random());let e=null;this.elements.controls=null;const t={id:this.id,seektime:this.config.seekTime,title:this.config.title};let i=!0;A.function(this.config.controls)&&(this.config.controls=this.config.controls.call(this,t)),this.config.controls||(this.config.controls=[]),A.element(this.config.controls)||A.string(this.config.controls)?e=this.config.controls:(e=Me.create.call(this,{id:this.id,seektime:this.config.seekTime,speed:this.speed,quality:this.quality,captions:Ne.getLabel.call(this)}),i=!1);let s;i&&A.string(this.config.controls)&&(e=(e=>{let i=e;return Object.entries(t).forEach((([e,t])=>{i=ge(i,`{${e}}`,t)})),i})(e)),A.string(this.config.selectors.controls.container)&&(s=document.querySelector(this.config.selectors.controls.container)),A.element(s)||(s=this.elements.container);if(s[A.element(e)?\"insertAdjacentElement\":\"insertAdjacentHTML\"](\"afterbegin\",e),A.element(this.elements.controls)||Me.findElements.call(this),!A.empty(this.elements.buttons)){const e=e=>{const t=this.config.classNames.controlPressed;e.setAttribute(\"aria-pressed\",\"false\"),Object.defineProperty(e,\"pressed\",{configurable:!0,enumerable:!0,get:()=>U(e,t),set(i=!1){F(e,t,i),e.setAttribute(\"aria-pressed\",i?\"true\":\"false\")}})};Object.values(this.elements.buttons).filter(Boolean).forEach((t=>{A.array(t)||A.nodeList(t)?Array.from(t).filter(Boolean).forEach(e):e(t)}))}if(x.isEdge&&M(s),this.config.tooltips.controls){const{classNames:e,selectors:t}=this.config,i=`${t.controls.wrapper} ${t.labels} .${e.hidden}`,s=B.call(this,i);Array.from(s).forEach((e=>{F(e,this.config.classNames.hidden,!1),F(e,this.config.classNames.tooltip,!0)}))}},setMediaMetadata(){try{\"mediaSession\"in navigator&&(navigator.mediaSession.metadata=new window.MediaMetadata({title:this.config.mediaMetadata.title,artist:this.config.mediaMetadata.artist,album:this.config.mediaMetadata.album,artwork:this.config.mediaMetadata.artwork}))}catch(e){}},setMarkers(){var e,t;if(!this.duration||this.elements.markers)return;const i=null===(e=this.config.markers)||void 0===e||null===(t=e.points)||void 0===t?void 0:t.filter((({time:e})=>e>0&&eF(a,r,e);i.forEach((e=>{const t=O(\"span\",{class:this.config.classNames.marker},\"\"),i=e.time/this.duration*100+\"%\";a&&(t.addEventListener(\"mouseenter\",(()=>{e.label||(a.style.left=i,a.innerHTML=e.label,o(!0))})),t.addEventListener(\"mouseleave\",(()=>{o(!1)}))),t.addEventListener(\"click\",(()=>{this.currentTime=e.time})),t.style.left=i,n.appendChild(t)})),s.appendChild(n),this.config.tooltips.seek||(a=O(\"span\",{class:this.config.classNames.tooltip},\"\"),s.appendChild(a)),this.elements.markers={points:n,tip:a},this.elements.progress.appendChild(s)}};function xe(e,t=!0){let i=e;if(t){const e=document.createElement(\"a\");e.href=i,i=e.href}try{return new URL(i)}catch(e){return null}}function Le(e){const t=new URLSearchParams;return A.object(e)&&Object.entries(e).forEach((([e,i])=>{t.set(e,i)})),t}const Ne={setup(){if(!this.supported.ui)return;if(!this.isVideo||this.isYouTube||this.isHTML5&&!Y.textTracks)return void(A.array(this.config.controls)&&this.config.controls.includes(\"settings\")&&this.config.settings.includes(\"captions\")&&Me.setCaptionsMenu.call(this));var e,t;if(A.element(this.elements.captions)||(this.elements.captions=O(\"div\",q(this.config.selectors.captions)),this.elements.captions.setAttribute(\"dir\",\"auto\"),e=this.elements.captions,t=this.elements.wrapper,A.element(e)&&A.element(t)&&t.parentNode.insertBefore(e,t.nextSibling)),x.isIE&&window.URL){const e=this.media.querySelectorAll(\"track\");Array.from(e).forEach((e=>{const t=e.getAttribute(\"src\"),i=xe(t);null!==i&&i.hostname!==window.location.href.hostname&&[\"http:\",\"https:\"].includes(i.protocol)&&ke(t,\"blob\").then((t=>{e.setAttribute(\"src\",window.URL.createObjectURL(t))})).catch((()=>{j(e)}))}))}const i=ne((navigator.languages||[navigator.language||navigator.userLanguage||\"en\"]).map((e=>e.split(\"-\")[0])));let s=(this.storage.get(\"language\")||this.config.captions.language||\"auto\").toLowerCase();\"auto\"===s&&([s]=i);let n=this.storage.get(\"captions\");if(A.boolean(n)||({active:n}=this.config.captions),Object.assign(this.captions,{toggled:!1,active:n,language:s,languages:i}),this.isHTML5){const e=this.config.captions.update?\"addtrack removetrack\":\"removetrack\";J.call(this,this.media.textTracks,e,Ne.update.bind(this))}setTimeout(Ne.update.bind(this),0)},update(){const e=Ne.getTracks.call(this,!0),{active:t,language:i,meta:s,currentTrackNode:n}=this.captions,a=Boolean(e.find((e=>e.language===i)));this.isHTML5&&this.isVideo&&e.filter((e=>!s.get(e))).forEach((e=>{this.debug.log(\"Track added\",e),s.set(e,{default:\"showing\"===e.mode}),\"showing\"===e.mode&&(e.mode=\"hidden\"),J.call(this,e,\"cuechange\",(()=>Ne.updateCues.call(this)))})),(a&&this.language!==i||!e.includes(n))&&(Ne.setLanguage.call(this,i),Ne.toggle.call(this,t&&a)),this.elements&&F(this.elements.container,this.config.classNames.captions.enabled,!A.empty(e)),A.array(this.config.controls)&&this.config.controls.includes(\"settings\")&&this.config.settings.includes(\"captions\")&&Me.setCaptionsMenu.call(this)},toggle(e,t=!0){if(!this.supported.ui)return;const{toggled:i}=this.captions,s=this.config.classNames.captions.active,n=A.nullOrUndefined(e)?!i:e;if(n!==i){if(t||(this.captions.active=n,this.storage.set({captions:n})),!this.language&&n&&!t){const e=Ne.getTracks.call(this),t=Ne.findTrack.call(this,[this.captions.language,...this.captions.languages],!0);return this.captions.language=t.language,void Ne.set.call(this,e.indexOf(t))}this.elements.buttons.captions&&(this.elements.buttons.captions.pressed=n),F(this.elements.container,s,n),this.captions.toggled=n,Me.updateSetting.call(this,\"captions\"),ee.call(this,this.media,n?\"captionsenabled\":\"captionsdisabled\")}setTimeout((()=>{n&&this.captions.toggled&&(this.captions.currentTrackNode.mode=\"hidden\")}))},set(e,t=!0){const i=Ne.getTracks.call(this);if(-1!==e)if(A.number(e))if(e in i){if(this.captions.currentTrack!==e){this.captions.currentTrack=e;const s=i[e],{language:n}=s||{};this.captions.currentTrackNode=s,Me.updateSetting.call(this,\"captions\"),t||(this.captions.language=n,this.storage.set({language:n})),this.isVimeo&&this.embed.enableTextTrack(n),ee.call(this,this.media,\"languagechange\")}Ne.toggle.call(this,!0,t),this.isHTML5&&this.isVideo&&Ne.updateCues.call(this)}else this.debug.warn(\"Track not found\",e);else this.debug.warn(\"Invalid caption argument\",e);else Ne.toggle.call(this,!1,t)},setLanguage(e,t=!0){if(!A.string(e))return void this.debug.warn(\"Invalid language argument\",e);const i=e.toLowerCase();this.captions.language=i;const s=Ne.getTracks.call(this),n=Ne.findTrack.call(this,[i]);Ne.set.call(this,s.indexOf(n),t)},getTracks(e=!1){return Array.from((this.media||{}).textTracks||[]).filter((t=>!this.isHTML5||e||this.captions.meta.has(t))).filter((e=>[\"captions\",\"subtitles\"].includes(e.kind)))},findTrack(e,t=!1){const i=Ne.getTracks.call(this),s=e=>Number((this.captions.meta.get(e)||{}).default),n=Array.from(i).sort(((e,t)=>s(t)-s(e)));let a;return e.every((e=>(a=n.find((t=>t.language===e)),!a))),a||(t?n[0]:void 0)},getCurrentTrack(){return Ne.getTracks.call(this)[this.currentTrack]},getLabel(e){let t=e;return!A.track(t)&&Y.textTracks&&this.captions.toggled&&(t=Ne.getCurrentTrack.call(this)),A.track(t)?A.empty(t.label)?A.empty(t.language)?we.get(\"enabled\",this.config):e.language.toUpperCase():t.label:we.get(\"disabled\",this.config)},updateCues(e){if(!this.supported.ui)return;if(!A.element(this.elements.captions))return void this.debug.warn(\"No captions element to render to\");if(!A.nullOrUndefined(e)&&!Array.isArray(e))return void this.debug.warn(\"updateCues: Invalid input\",e);let t=e;if(!t){const e=Ne.getCurrentTrack.call(this);t=Array.from((e||{}).activeCues||[]).map((e=>e.getCueAsHTML())).map(be)}const i=t.map((e=>e.trim())).join(\"\\n\");if(i!==this.elements.captions.innerHTML){R(this.elements.captions);const e=O(\"span\",q(this.config.selectors.caption));e.innerHTML=i,this.elements.captions.appendChild(e),ee.call(this,this.media,\"cuechange\")}}},_e={enabled:!0,title:\"\",debug:!1,autoplay:!1,autopause:!0,playsinline:!0,seekTime:10,volume:1,muted:!1,duration:null,displayDuration:!0,invertTime:!0,toggleInvert:!0,ratio:null,clickToPlay:!0,hideControls:!0,resetOnEnd:!1,disableContextMenu:!0,loadSprite:!0,iconPrefix:\"plyr\",iconUrl:\"https://cdn.plyr.io/3.7.8/plyr.svg\",blankVideo:\"https://cdn.plyr.io/static/blank.mp4\",quality:{default:576,options:[4320,2880,2160,1440,1080,720,576,480,360,240],forced:!1,onChange:null},loop:{active:!1},speed:{selected:1,options:[.5,.75,1,1.25,1.5,1.75,2,4]},keyboard:{focused:!0,global:!1},tooltips:{controls:!1,seek:!0},captions:{active:!1,language:\"auto\",update:!1},fullscreen:{enabled:!0,fallback:!0,iosNative:!1},storage:{enabled:!0,key:\"plyr\"},controls:[\"play-large\",\"play\",\"progress\",\"current-time\",\"mute\",\"volume\",\"captions\",\"settings\",\"pip\",\"airplay\",\"fullscreen\"],settings:[\"captions\",\"quality\",\"speed\"],i18n:{restart:\"Restart\",rewind:\"Rewind {seektime}s\",play:\"Play\",pause:\"Pause\",fastForward:\"Forward {seektime}s\",seek:\"Seek\",seekLabel:\"{currentTime} of {duration}\",played:\"Played\",buffered:\"Buffered\",currentTime:\"Current time\",duration:\"Duration\",volume:\"Volume\",mute:\"Mute\",unmute:\"Unmute\",enableCaptions:\"Enable captions\",disableCaptions:\"Disable captions\",download:\"Download\",enterFullscreen:\"Enter fullscreen\",exitFullscreen:\"Exit fullscreen\",frameTitle:\"Player for {title}\",captions:\"Captions\",settings:\"Settings\",pip:\"PIP\",menuBack:\"Go back to previous menu\",speed:\"Speed\",normal:\"Normal\",quality:\"Quality\",loop:\"Loop\",start:\"Start\",end:\"End\",all:\"All\",reset:\"Reset\",disabled:\"Disabled\",enabled:\"Enabled\",advertisement:\"Ad\",qualityBadge:{2160:\"4K\",1440:\"HD\",1080:\"HD\",720:\"HD\",576:\"SD\",480:\"SD\"}},urls:{download:null,vimeo:{sdk:\"https://player.vimeo.com/api/player.js\",iframe:\"https://player.vimeo.com/video/{0}?{1}\",api:\"https://vimeo.com/api/oembed.json?url={0}\"},youtube:{sdk:\"https://www.youtube.com/iframe_api\",api:\"https://noembed.com/embed?url=https://www.youtube.com/watch?v={0}\"},googleIMA:{sdk:\"https://imasdk.googleapis.com/js/sdkloader/ima3.js\"}},listeners:{seek:null,play:null,pause:null,restart:null,rewind:null,fastForward:null,mute:null,volume:null,captions:null,download:null,fullscreen:null,pip:null,airplay:null,speed:null,quality:null,loop:null,language:null},events:[\"ended\",\"progress\",\"stalled\",\"playing\",\"waiting\",\"canplay\",\"canplaythrough\",\"loadstart\",\"loadeddata\",\"loadedmetadata\",\"timeupdate\",\"volumechange\",\"play\",\"pause\",\"error\",\"seeking\",\"seeked\",\"emptied\",\"ratechange\",\"cuechange\",\"download\",\"enterfullscreen\",\"exitfullscreen\",\"captionsenabled\",\"captionsdisabled\",\"languagechange\",\"controlshidden\",\"controlsshown\",\"ready\",\"statechange\",\"qualitychange\",\"adsloaded\",\"adscontentpause\",\"adscontentresume\",\"adstarted\",\"adsmidpoint\",\"adscomplete\",\"adsallcomplete\",\"adsimpression\",\"adsclick\"],selectors:{editable:\"input, textarea, select, [contenteditable]\",container:\".plyr\",controls:{container:null,wrapper:\".plyr__controls\"},labels:\"[data-plyr]\",buttons:{play:'[data-plyr=\"play\"]',pause:'[data-plyr=\"pause\"]',restart:'[data-plyr=\"restart\"]',rewind:'[data-plyr=\"rewind\"]',fastForward:'[data-plyr=\"fast-forward\"]',mute:'[data-plyr=\"mute\"]',captions:'[data-plyr=\"captions\"]',download:'[data-plyr=\"download\"]',fullscreen:'[data-plyr=\"fullscreen\"]',pip:'[data-plyr=\"pip\"]',airplay:'[data-plyr=\"airplay\"]',settings:'[data-plyr=\"settings\"]',loop:'[data-plyr=\"loop\"]'},inputs:{seek:'[data-plyr=\"seek\"]',volume:'[data-plyr=\"volume\"]',speed:'[data-plyr=\"speed\"]',language:'[data-plyr=\"language\"]',quality:'[data-plyr=\"quality\"]'},display:{currentTime:\".plyr__time--current\",duration:\".plyr__time--duration\",buffer:\".plyr__progress__buffer\",loop:\".plyr__progress__loop\",volume:\".plyr__volume--display\"},progress:\".plyr__progress\",captions:\".plyr__captions\",caption:\".plyr__caption\"},classNames:{type:\"plyr--{0}\",provider:\"plyr--{0}\",video:\"plyr__video-wrapper\",embed:\"plyr__video-embed\",videoFixedRatio:\"plyr__video-wrapper--fixed-ratio\",embedContainer:\"plyr__video-embed__container\",poster:\"plyr__poster\",posterEnabled:\"plyr__poster-enabled\",ads:\"plyr__ads\",control:\"plyr__control\",controlPressed:\"plyr__control--pressed\",playing:\"plyr--playing\",paused:\"plyr--paused\",stopped:\"plyr--stopped\",loading:\"plyr--loading\",hover:\"plyr--hover\",tooltip:\"plyr__tooltip\",cues:\"plyr__cues\",marker:\"plyr__progress__marker\",hidden:\"plyr__sr-only\",hideControls:\"plyr--hide-controls\",isTouch:\"plyr--is-touch\",uiSupported:\"plyr--full-ui\",noTransition:\"plyr--no-transition\",display:{time:\"plyr__time\"},menu:{value:\"plyr__menu__value\",badge:\"plyr__badge\",open:\"plyr--menu-open\"},captions:{enabled:\"plyr--captions-enabled\",active:\"plyr--captions-active\"},fullscreen:{enabled:\"plyr--fullscreen-enabled\",fallback:\"plyr--fullscreen-fallback\"},pip:{supported:\"plyr--pip-supported\",active:\"plyr--pip-active\"},airplay:{supported:\"plyr--airplay-supported\",active:\"plyr--airplay-active\"},previewThumbnails:{thumbContainer:\"plyr__preview-thumb\",thumbContainerShown:\"plyr__preview-thumb--is-shown\",imageContainer:\"plyr__preview-thumb__image-container\",timeContainer:\"plyr__preview-thumb__time-container\",scrubbingContainer:\"plyr__preview-scrubbing\",scrubbingContainerShown:\"plyr__preview-scrubbing--is-shown\"}},attributes:{embed:{provider:\"data-plyr-provider\",id:\"data-plyr-embed-id\",hash:\"data-plyr-embed-hash\"}},ads:{enabled:!1,publisherId:\"\",tagUrl:\"\"},previewThumbnails:{enabled:!1,src:\"\"},vimeo:{byline:!1,portrait:!1,title:!1,speed:!0,transparent:!1,customControls:!0,referrerPolicy:null,premium:!1},youtube:{rel:0,showinfo:0,iv_load_policy:3,modestbranding:1,customControls:!0,noCookie:!1},mediaMetadata:{title:\"\",artist:\"\",album:\"\",artwork:[]},markers:{enabled:!1,points:[]}},Ie=\"picture-in-picture\",Oe=\"inline\",$e={html5:\"html5\",youtube:\"youtube\",vimeo:\"vimeo\"},je=\"audio\",Re=\"video\";const De=()=>{};class qe{constructor(e=!1){this.enabled=window.console&&e,this.enabled&&this.log(\"Debugging enabled\")}get log(){return this.enabled?Function.prototype.bind.call(console.log,console):De}get warn(){return this.enabled?Function.prototype.bind.call(console.warn,console):De}get error(){return this.enabled?Function.prototype.bind.call(console.error,console):De}}class He{constructor(e){t(this,\"onChange\",(()=>{if(!this.supported)return;const e=this.player.elements.buttons.fullscreen;A.element(e)&&(e.pressed=this.active);const t=this.target===this.player.media?this.target:this.player.elements.container;ee.call(this.player,t,this.active?\"enterfullscreen\":\"exitfullscreen\",!0)})),t(this,\"toggleFallback\",((e=!1)=>{if(e?this.scrollPosition={x:window.scrollX??0,y:window.scrollY??0}:window.scrollTo(this.scrollPosition.x,this.scrollPosition.y),document.body.style.overflow=e?\"hidden\":\"\",F(this.target,this.player.config.classNames.fullscreen.fallback,e),x.isIos){let t=document.head.querySelector('meta[name=\"viewport\"]');const i=\"viewport-fit=cover\";t||(t=document.createElement(\"meta\"),t.setAttribute(\"name\",\"viewport\"));const s=A.string(t.content)&&t.content.includes(i);e?(this.cleanupViewport=!s,s||(t.content+=`,${i}`)):this.cleanupViewport&&(t.content=t.content.split(\",\").filter((e=>e.trim()!==i)).join(\",\"))}this.onChange()})),t(this,\"trapFocus\",(e=>{if(x.isIos||x.isIPadOS||!this.active||\"Tab\"!==e.key)return;const t=document.activeElement,i=B.call(this.player,\"a[href], button:not(:disabled), input:not(:disabled), [tabindex]\"),[s]=i,n=i[i.length-1];t!==n||e.shiftKey?t===s&&e.shiftKey&&(n.focus(),e.preventDefault()):(s.focus(),e.preventDefault())})),t(this,\"update\",(()=>{if(this.supported){let e;e=this.forceFallback?\"Fallback (forced)\":He.nativeSupported?\"Native\":\"Fallback\",this.player.debug.log(`${e} fullscreen enabled`)}else this.player.debug.log(\"Fullscreen not supported and fallback disabled\");F(this.player.elements.container,this.player.config.classNames.fullscreen.enabled,this.supported)})),t(this,\"enter\",(()=>{this.supported&&(x.isIos&&this.player.config.fullscreen.iosNative?this.player.isVimeo?this.player.embed.requestFullscreen():this.target.webkitEnterFullscreen():!He.nativeSupported||this.forceFallback?this.toggleFallback(!0):this.prefix?A.empty(this.prefix)||this.target[`${this.prefix}Request${this.property}`]():this.target.requestFullscreen({navigationUI:\"hide\"}))})),t(this,\"exit\",(()=>{if(this.supported)if(x.isIos&&this.player.config.fullscreen.iosNative)this.player.isVimeo?this.player.embed.exitFullscreen():this.target.webkitEnterFullscreen(),se(this.player.play());else if(!He.nativeSupported||this.forceFallback)this.toggleFallback(!1);else if(this.prefix){if(!A.empty(this.prefix)){const e=\"moz\"===this.prefix?\"Cancel\":\"Exit\";document[`${this.prefix}${e}${this.property}`]()}}else(document.cancelFullScreen||document.exitFullscreen).call(document)})),t(this,\"toggle\",(()=>{this.active?this.exit():this.enter()})),this.player=e,this.prefix=He.prefix,this.property=He.property,this.scrollPosition={x:0,y:0},this.forceFallback=\"force\"===e.config.fullscreen.fallback,this.player.elements.fullscreen=e.config.fullscreen.container&&function(e,t){const{prototype:i}=Element;return(i.closest||function(){let e=this;do{if(V.matches(e,t))return e;e=e.parentElement||e.parentNode}while(null!==e&&1===e.nodeType);return null}).call(e,t)}(this.player.elements.container,e.config.fullscreen.container),J.call(this.player,document,\"ms\"===this.prefix?\"MSFullscreenChange\":`${this.prefix}fullscreenchange`,(()=>{this.onChange()})),J.call(this.player,this.player.elements.container,\"dblclick\",(e=>{A.element(this.player.elements.controls)&&this.player.elements.controls.contains(e.target)||this.player.listeners.proxy(e,this.toggle,\"fullscreen\")})),J.call(this,this.player.elements.container,\"keydown\",(e=>this.trapFocus(e))),this.update()}static get nativeSupported(){return!!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled||document.msFullscreenEnabled)}get useNative(){return He.nativeSupported&&!this.forceFallback}static get prefix(){if(A.function(document.exitFullscreen))return\"\";let e=\"\";return[\"webkit\",\"moz\",\"ms\"].some((t=>!(!A.function(document[`${t}ExitFullscreen`])&&!A.function(document[`${t}CancelFullScreen`]))&&(e=t,!0))),e}static get property(){return\"moz\"===this.prefix?\"FullScreen\":\"Fullscreen\"}get supported(){return[this.player.config.fullscreen.enabled,this.player.isVideo,He.nativeSupported||this.player.config.fullscreen.fallback,!this.player.isYouTube||He.nativeSupported||!x.isIos||this.player.config.playsinline&&!this.player.config.fullscreen.iosNative].every(Boolean)}get active(){if(!this.supported)return!1;if(!He.nativeSupported||this.forceFallback)return U(this.target,this.player.config.classNames.fullscreen.fallback);const e=this.prefix?this.target.getRootNode()[`${this.prefix}${this.property}Element`]:this.target.getRootNode().fullscreenElement;return e&&e.shadowRoot?e===this.target.getRootNode().host:e===this.target}get target(){return x.isIos&&this.player.config.fullscreen.iosNative?this.player.media:this.player.elements.fullscreen??this.player.elements.container}}function Fe(e,t=1){return new Promise(((i,s)=>{const n=new Image,a=()=>{delete n.onload,delete n.onerror,(n.naturalWidth>=t?i:s)(n)};Object.assign(n,{onload:a,onerror:a,src:e})}))}const Ue={addStyleHook(){F(this.elements.container,this.config.selectors.container.replace(\".\",\"\"),!0),F(this.elements.container,this.config.classNames.uiSupported,this.supported.ui)},toggleNativeControls(e=!1){e&&this.isHTML5?this.media.setAttribute(\"controls\",\"\"):this.media.removeAttribute(\"controls\")},build(){if(this.listeners.media(),!this.supported.ui)return this.debug.warn(`Basic support only for ${this.provider} ${this.type}`),void Ue.toggleNativeControls.call(this,!0);A.element(this.elements.controls)||(Me.inject.call(this),this.listeners.controls()),Ue.toggleNativeControls.call(this),this.isHTML5&&Ne.setup.call(this),this.volume=null,this.muted=null,this.loop=null,this.quality=null,this.speed=null,Me.updateVolume.call(this),Me.timeUpdate.call(this),Me.durationUpdate.call(this),Ue.checkPlaying.call(this),F(this.elements.container,this.config.classNames.pip.supported,Y.pip&&this.isHTML5&&this.isVideo),F(this.elements.container,this.config.classNames.airplay.supported,Y.airplay&&this.isHTML5),F(this.elements.container,this.config.classNames.isTouch,this.touch),this.ready=!0,setTimeout((()=>{ee.call(this,this.media,\"ready\")}),0),Ue.setTitle.call(this),this.poster&&Ue.setPoster.call(this,this.poster,!1).catch((()=>{})),this.config.duration&&Me.durationUpdate.call(this),this.config.mediaMetadata&&Me.setMediaMetadata.call(this)},setTitle(){let e=we.get(\"play\",this.config);if(A.string(this.config.title)&&!A.empty(this.config.title)&&(e+=`, ${this.config.title}`),Array.from(this.elements.buttons.play||[]).forEach((t=>{t.setAttribute(\"aria-label\",e)})),this.isEmbed){const e=W.call(this,\"iframe\");if(!A.element(e))return;const t=A.empty(this.config.title)?\"video\":this.config.title,i=we.get(\"frameTitle\",this.config);e.setAttribute(\"title\",i.replace(\"{title}\",t))}},togglePoster(e){F(this.elements.container,this.config.classNames.posterEnabled,e)},setPoster(e,t=!0){return t&&this.poster?Promise.reject(new Error(\"Poster already set\")):(this.media.setAttribute(\"data-poster\",e),this.elements.poster.removeAttribute(\"hidden\"),ie.call(this).then((()=>Fe(e))).catch((t=>{throw e===this.poster&&Ue.togglePoster.call(this,!1),t})).then((()=>{if(e!==this.poster)throw new Error(\"setPoster cancelled by later call to setPoster\")})).then((()=>(Object.assign(this.elements.poster.style,{backgroundImage:`url('${e}')`,backgroundSize:\"\"}),Ue.togglePoster.call(this,!0),e))))},checkPlaying(e){F(this.elements.container,this.config.classNames.playing,this.playing),F(this.elements.container,this.config.classNames.paused,this.paused),F(this.elements.container,this.config.classNames.stopped,this.stopped),Array.from(this.elements.buttons.play||[]).forEach((e=>{Object.assign(e,{pressed:this.playing}),e.setAttribute(\"aria-label\",we.get(this.playing?\"pause\":\"play\",this.config))})),A.event(e)&&\"timeupdate\"===e.type||Ue.toggleControls.call(this)},checkLoading(e){this.loading=[\"stalled\",\"waiting\"].includes(e.type),clearTimeout(this.timers.loading),this.timers.loading=setTimeout((()=>{F(this.elements.container,this.config.classNames.loading,this.loading),Ue.toggleControls.call(this)}),this.loading?250:0)},toggleControls(e){const{controls:t}=this.elements;if(t&&this.config.hideControls){const i=this.touch&&this.lastSeekTime+2e3>Date.now();this.toggleControls(Boolean(e||this.loading||this.paused||t.pressed||t.hover||i))}},migrateStyles(){Object.values({...this.media.style}).filter((e=>!A.empty(e)&&A.string(e)&&e.startsWith(\"--plyr\"))).forEach((e=>{this.elements.container.style.setProperty(e,this.media.style.getPropertyValue(e)),this.media.style.removeProperty(e)})),A.empty(this.media.style)&&this.media.removeAttribute(\"style\")}};class Ve{constructor(e){t(this,\"firstTouch\",(()=>{const{player:e}=this,{elements:t}=e;e.touch=!0,F(t.container,e.config.classNames.isTouch,!0)})),t(this,\"global\",((e=!0)=>{const{player:t}=this;t.config.keyboard.global&&X.call(t,window,\"keydown keyup\",this.handleKey,e,!1),X.call(t,document.body,\"click\",this.toggleMenu,e),Z.call(t,document.body,\"touchstart\",this.firstTouch)})),t(this,\"container\",(()=>{const{player:e}=this,{config:t,elements:i,timers:s}=e;!t.keyboard.global&&t.keyboard.focused&&J.call(e,i.container,\"keydown keyup\",this.handleKey,!1),J.call(e,i.container,\"mousemove mouseleave touchstart touchmove enterfullscreen exitfullscreen\",(t=>{const{controls:n}=i;n&&\"enterfullscreen\"===t.type&&(n.pressed=!1,n.hover=!1);let a=0;[\"touchstart\",\"touchmove\",\"mousemove\"].includes(t.type)&&(Ue.toggleControls.call(e,!0),a=e.touch?3e3:2e3),clearTimeout(s.controls),s.controls=setTimeout((()=>Ue.toggleControls.call(e,!1)),a)}));const n=()=>{if(!e.isVimeo||e.config.vimeo.premium)return;const t=i.wrapper,{active:s}=e.fullscreen,[n,a]=ue.call(e),r=re(`aspect-ratio: ${n} / ${a}`);if(!s)return void(r?(t.style.width=null,t.style.height=null):(t.style.maxWidth=null,t.style.margin=null));const[o,l]=[Math.max(document.documentElement.clientWidth||0,window.innerWidth||0),Math.max(document.documentElement.clientHeight||0,window.innerHeight||0)],c=o/l>n/a;r?(t.style.width=c?\"auto\":\"100%\",t.style.height=c?\"100%\":\"auto\"):(t.style.maxWidth=c?l/a*n+\"px\":null,t.style.margin=c?\"0 auto\":null)},a=()=>{clearTimeout(s.resized),s.resized=setTimeout(n,50)};J.call(e,i.container,\"enterfullscreen exitfullscreen\",(t=>{const{target:s}=e.fullscreen;if(s!==i.container)return;if(!e.isEmbed&&A.empty(e.config.ratio))return;n();(\"enterfullscreen\"===t.type?J:G).call(e,window,\"resize\",a)}))})),t(this,\"media\",(()=>{const{player:e}=this,{elements:t}=e;if(J.call(e,e.media,\"timeupdate seeking seeked\",(t=>Me.timeUpdate.call(e,t))),J.call(e,e.media,\"durationchange loadeddata loadedmetadata\",(t=>Me.durationUpdate.call(e,t))),J.call(e,e.media,\"ended\",(()=>{e.isHTML5&&e.isVideo&&e.config.resetOnEnd&&(e.restart(),e.pause())})),J.call(e,e.media,\"progress playing seeking seeked\",(t=>Me.updateProgress.call(e,t))),J.call(e,e.media,\"volumechange\",(t=>Me.updateVolume.call(e,t))),J.call(e,e.media,\"playing play pause ended emptied timeupdate\",(t=>Ue.checkPlaying.call(e,t))),J.call(e,e.media,\"waiting canplay seeked playing\",(t=>Ue.checkLoading.call(e,t))),e.supported.ui&&e.config.clickToPlay&&!e.isAudio){const i=W.call(e,`.${e.config.classNames.video}`);if(!A.element(i))return;J.call(e,t.container,\"click\",(s=>{([t.container,i].includes(s.target)||i.contains(s.target))&&(e.touch&&e.config.hideControls||(e.ended?(this.proxy(s,e.restart,\"restart\"),this.proxy(s,(()=>{se(e.play())}),\"play\")):this.proxy(s,(()=>{se(e.togglePlay())}),\"play\")))}))}e.supported.ui&&e.config.disableContextMenu&&J.call(e,t.wrapper,\"contextmenu\",(e=>{e.preventDefault()}),!1),J.call(e,e.media,\"volumechange\",(()=>{e.storage.set({volume:e.volume,muted:e.muted})})),J.call(e,e.media,\"ratechange\",(()=>{Me.updateSetting.call(e,\"speed\"),e.storage.set({speed:e.speed})})),J.call(e,e.media,\"qualitychange\",(t=>{Me.updateSetting.call(e,\"quality\",null,t.detail.quality)})),J.call(e,e.media,\"ready qualitychange\",(()=>{Me.setDownloadUrl.call(e)}));const i=e.config.events.concat([\"keyup\",\"keydown\"]).join(\" \");J.call(e,e.media,i,(i=>{let{detail:s={}}=i;\"error\"===i.type&&(s=e.media.error),ee.call(e,t.container,i.type,!0,s)}))})),t(this,\"proxy\",((e,t,i)=>{const{player:s}=this,n=s.config.listeners[i];let a=!0;A.function(n)&&(a=n.call(s,e)),!1!==a&&A.function(t)&&t.call(s,e)})),t(this,\"bind\",((e,t,i,s,n=!0)=>{const{player:a}=this,r=a.config.listeners[s],o=A.function(r);J.call(a,e,t,(e=>this.proxy(e,i,s)),n&&!o)})),t(this,\"controls\",(()=>{const{player:e}=this,{elements:t}=e,i=x.isIE?\"change\":\"input\";if(t.buttons.play&&Array.from(t.buttons.play).forEach((t=>{this.bind(t,\"click\",(()=>{se(e.togglePlay())}),\"play\")})),this.bind(t.buttons.restart,\"click\",e.restart,\"restart\"),this.bind(t.buttons.rewind,\"click\",(()=>{e.lastSeekTime=Date.now(),e.rewind()}),\"rewind\"),this.bind(t.buttons.fastForward,\"click\",(()=>{e.lastSeekTime=Date.now(),e.forward()}),\"fastForward\"),this.bind(t.buttons.mute,\"click\",(()=>{e.muted=!e.muted}),\"mute\"),this.bind(t.buttons.captions,\"click\",(()=>e.toggleCaptions())),this.bind(t.buttons.download,\"click\",(()=>{ee.call(e,e.media,\"download\")}),\"download\"),this.bind(t.buttons.fullscreen,\"click\",(()=>{e.fullscreen.toggle()}),\"fullscreen\"),this.bind(t.buttons.pip,\"click\",(()=>{e.pip=\"toggle\"}),\"pip\"),this.bind(t.buttons.airplay,\"click\",e.airplay,\"airplay\"),this.bind(t.buttons.settings,\"click\",(t=>{t.stopPropagation(),t.preventDefault(),Me.toggleMenu.call(e,t)}),null,!1),this.bind(t.buttons.settings,\"keyup\",(t=>{[\" \",\"Enter\"].includes(t.key)&&(\"Enter\"!==t.key?(t.preventDefault(),t.stopPropagation(),Me.toggleMenu.call(e,t)):Me.focusFirstMenuItem.call(e,null,!0))}),null,!1),this.bind(t.settings.menu,\"keydown\",(t=>{\"Escape\"===t.key&&Me.toggleMenu.call(e,t)})),this.bind(t.inputs.seek,\"mousedown mousemove\",(e=>{const i=t.progress.getBoundingClientRect(),s=100/i.width*(e.pageX-i.left);e.currentTarget.setAttribute(\"seek-value\",s)})),this.bind(t.inputs.seek,\"mousedown mouseup keydown keyup touchstart touchend\",(t=>{const i=t.currentTarget,s=\"play-on-seeked\";if(A.keyboardEvent(t)&&![\"ArrowLeft\",\"ArrowRight\"].includes(t.key))return;e.lastSeekTime=Date.now();const n=i.hasAttribute(s),a=[\"mouseup\",\"touchend\",\"keyup\"].includes(t.type);n&&a?(i.removeAttribute(s),se(e.play())):!a&&e.playing&&(i.setAttribute(s,\"\"),e.pause())})),x.isIos){const t=B.call(e,'input[type=\"range\"]');Array.from(t).forEach((e=>this.bind(e,i,(e=>M(e.target)))))}this.bind(t.inputs.seek,i,(t=>{const i=t.currentTarget;let s=i.getAttribute(\"seek-value\");A.empty(s)&&(s=i.value),i.removeAttribute(\"seek-value\"),e.currentTime=s/i.max*e.duration}),\"seek\"),this.bind(t.progress,\"mouseenter mouseleave mousemove\",(t=>Me.updateSeekTooltip.call(e,t))),this.bind(t.progress,\"mousemove touchmove\",(t=>{const{previewThumbnails:i}=e;i&&i.loaded&&i.startMove(t)})),this.bind(t.progress,\"mouseleave touchend click\",(()=>{const{previewThumbnails:t}=e;t&&t.loaded&&t.endMove(!1,!0)})),this.bind(t.progress,\"mousedown touchstart\",(t=>{const{previewThumbnails:i}=e;i&&i.loaded&&i.startScrubbing(t)})),this.bind(t.progress,\"mouseup touchend\",(t=>{const{previewThumbnails:i}=e;i&&i.loaded&&i.endScrubbing(t)})),x.isWebKit&&Array.from(B.call(e,'input[type=\"range\"]')).forEach((t=>{this.bind(t,\"input\",(t=>Me.updateRangeFill.call(e,t.target)))})),e.config.toggleInvert&&!A.element(t.display.duration)&&this.bind(t.display.currentTime,\"click\",(()=>{0!==e.currentTime&&(e.config.invertTime=!e.config.invertTime,Me.timeUpdate.call(e))})),this.bind(t.inputs.volume,i,(t=>{e.volume=t.target.value}),\"volume\"),this.bind(t.controls,\"mouseenter mouseleave\",(i=>{t.controls.hover=!e.touch&&\"mouseenter\"===i.type})),t.fullscreen&&Array.from(t.fullscreen.children).filter((e=>!e.contains(t.container))).forEach((i=>{this.bind(i,\"mouseenter mouseleave\",(i=>{t.controls&&(t.controls.hover=!e.touch&&\"mouseenter\"===i.type)}))})),this.bind(t.controls,\"mousedown mouseup touchstart touchend touchcancel\",(e=>{t.controls.pressed=[\"mousedown\",\"touchstart\"].includes(e.type)})),this.bind(t.controls,\"focusin\",(()=>{const{config:i,timers:s}=e;F(t.controls,i.classNames.noTransition,!0),Ue.toggleControls.call(e,!0),setTimeout((()=>{F(t.controls,i.classNames.noTransition,!1)}),0);const n=this.touch?3e3:4e3;clearTimeout(s.controls),s.controls=setTimeout((()=>Ue.toggleControls.call(e,!1)),n)})),this.bind(t.inputs.volume,\"wheel\",(t=>{const i=t.webkitDirectionInvertedFromDevice,[s,n]=[t.deltaX,-t.deltaY].map((e=>i?-e:e)),a=Math.sign(Math.abs(s)>Math.abs(n)?s:n);e.increaseVolume(a/50);const{volume:r}=e.media;(1===a&&r0)&&t.preventDefault()}),\"volume\",!1)})),this.player=e,this.lastKey=null,this.focusTimer=null,this.lastKeyDown=null,this.handleKey=this.handleKey.bind(this),this.toggleMenu=this.toggleMenu.bind(this),this.firstTouch=this.firstTouch.bind(this)}handleKey(e){const{player:t}=this,{elements:i}=t,{key:s,type:n,altKey:a,ctrlKey:r,metaKey:o,shiftKey:l}=e,c=\"keydown\"===n,u=c&&s===this.lastKey;if(a||r||o||l)return;if(!s)return;if(c){const n=document.activeElement;if(A.element(n)){const{editable:s}=t.config.selectors,{seek:a}=i.inputs;if(n!==a&&V(n,s))return;if(\" \"===e.key&&V(n,'button, [role^=\"menuitem\"]'))return}switch([\" \",\"ArrowLeft\",\"ArrowUp\",\"ArrowRight\",\"ArrowDown\",\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"c\",\"f\",\"k\",\"l\",\"m\"].includes(s)&&(e.preventDefault(),e.stopPropagation()),s){case\"0\":case\"1\":case\"2\":case\"3\":case\"4\":case\"5\":case\"6\":case\"7\":case\"8\":case\"9\":u||(h=parseInt(s,10),t.currentTime=t.duration/10*h);break;case\" \":case\"k\":u||se(t.togglePlay());break;case\"ArrowUp\":t.increaseVolume(.1);break;case\"ArrowDown\":t.decreaseVolume(.1);break;case\"m\":u||(t.muted=!t.muted);break;case\"ArrowRight\":t.forward();break;case\"ArrowLeft\":t.rewind();break;case\"f\":t.fullscreen.toggle();break;case\"c\":u||t.toggleCaptions();break;case\"l\":t.loop=!t.loop}\"Escape\"===s&&!t.fullscreen.usingNative&&t.fullscreen.active&&t.fullscreen.toggle(),this.lastKey=s}else this.lastKey=null;var h}toggleMenu(e){Me.toggleMenu.call(this.player,e)}}var Be=function(e,t){return e(t={exports:{}},t.exports),t.exports}((function(e,t){e.exports=function(){var e=function(){},t={},i={},s={};function n(e,t){e=e.push?e:[e];var n,a,r,o=[],l=e.length,c=l;for(n=function(e,i){i.length&&o.push(e),--c||t(o)};l--;)a=e[l],(r=i[a])?n(a,r):(s[a]=s[a]||[]).push(n)}function a(e,t){if(e){var n=s[e];if(i[e]=t,n)for(;n.length;)n[0](e,t),n.splice(0,1)}}function r(t,i){t.call&&(t={success:t}),i.length?(t.error||e)(i):(t.success||e)(t)}function o(t,i,s,n){var a,r,l=document,c=s.async,u=(s.numRetries||0)+1,h=s.before||e,d=t.replace(/[\\?|#].*$/,\"\"),m=t.replace(/^(css|img)!/,\"\");n=n||0,/(^css!|\\.css$)/.test(d)?((r=l.createElement(\"link\")).rel=\"stylesheet\",r.href=m,(a=\"hideFocus\"in r)&&r.relList&&(a=0,r.rel=\"preload\",r.as=\"style\")):/(^img!|\\.(png|gif|jpg|svg|webp)$)/.test(d)?(r=l.createElement(\"img\")).src=m:((r=l.createElement(\"script\")).src=t,r.async=void 0===c||c),r.onload=r.onerror=r.onbeforeload=function(e){var l=e.type[0];if(a)try{r.sheet.cssText.length||(l=\"e\")}catch(e){18!=e.code&&(l=\"e\")}if(\"e\"==l){if((n+=1){Ke.ready.call(e)})).catch((t=>{e.debug.warn(\"Vimeo SDK (player.js) failed to load\",t)}))},ready(){const e=this,t=e.config.vimeo,{premium:i,referrerPolicy:s,...n}=t;let a=e.media.getAttribute(\"src\"),r=\"\";A.empty(a)?(a=e.media.getAttribute(e.config.attributes.embed.id),r=e.media.getAttribute(e.config.attributes.embed.hash)):r=function(e){const t=e.match(/^.*(vimeo.com\\/|video\\/)(\\d+)(\\?.*&*h=|\\/)+([\\d,a-f]+)/);return t&&5===t.length?t[4]:null}(a);const o=r?{h:r}:{};i&&Object.assign(n,{controls:!1,sidedock:!1});const l=Le({loop:e.config.loop.active,autoplay:e.autoplay,muted:e.muted,gesture:\"media\",playsinline:e.config.playsinline,...o,...n}),c=(u=a,A.empty(u)?null:A.number(Number(u))?u:u.match(/^.*(vimeo.com\\/|video\\/)(\\d+).*/)?RegExp.$2:u);var u;const h=O(\"iframe\"),d=pe(e.config.urls.vimeo.iframe,c,l);if(h.setAttribute(\"src\",d),h.setAttribute(\"allowfullscreen\",\"\"),h.setAttribute(\"allow\",[\"autoplay\",\"fullscreen\",\"picture-in-picture\",\"encrypted-media\",\"accelerometer\",\"gyroscope\"].join(\"; \")),A.empty(s)||h.setAttribute(\"referrerPolicy\",s),i||!t.customControls)h.setAttribute(\"data-poster\",e.poster),e.media=D(h,e.media);else{const t=O(\"div\",{class:e.config.classNames.embedContainer,\"data-poster\":e.poster});t.appendChild(h),e.media=D(t,e.media)}t.customControls||ke(pe(e.config.urls.vimeo.api,d)).then((t=>{!A.empty(t)&&t.thumbnail_url&&Ue.setPoster.call(e,t.thumbnail_url).catch((()=>{}))})),e.embed=new window.Vimeo.Player(h,{autopause:e.config.autopause,muted:e.muted}),e.media.paused=!0,e.media.currentTime=0,e.supported.ui&&e.embed.disableTextTrack(),e.media.play=()=>(ze.call(e,!0),e.embed.play()),e.media.pause=()=>(ze.call(e,!1),e.embed.pause()),e.media.stop=()=>{e.pause(),e.currentTime=0};let{currentTime:m}=e.media;Object.defineProperty(e.media,\"currentTime\",{get:()=>m,set(t){const{embed:i,media:s,paused:n,volume:a}=e,r=n&&!i.hasPlayed;s.seeking=!0,ee.call(e,s,\"seeking\"),Promise.resolve(r&&i.setVolume(0)).then((()=>i.setCurrentTime(t))).then((()=>r&&i.pause())).then((()=>r&&i.setVolume(a))).catch((()=>{}))}});let p=e.config.speed.selected;Object.defineProperty(e.media,\"playbackRate\",{get:()=>p,set(t){e.embed.setPlaybackRate(t).then((()=>{p=t,ee.call(e,e.media,\"ratechange\")})).catch((()=>{e.options.speed=[1]}))}});let{volume:g}=e.config;Object.defineProperty(e.media,\"volume\",{get:()=>g,set(t){e.embed.setVolume(t).then((()=>{g=t,ee.call(e,e.media,\"volumechange\")}))}});let{muted:f}=e.config;Object.defineProperty(e.media,\"muted\",{get:()=>f,set(t){const i=!!A.boolean(t)&&t;e.embed.setMuted(!!i||e.config.muted).then((()=>{f=i,ee.call(e,e.media,\"volumechange\")}))}});let y,{loop:b}=e.config;Object.defineProperty(e.media,\"loop\",{get:()=>b,set(t){const i=A.boolean(t)?t:e.config.loop.active;e.embed.setLoop(i).then((()=>{b=i}))}}),e.embed.getVideoUrl().then((t=>{y=t,Me.setDownloadUrl.call(e)})).catch((e=>{this.debug.warn(e)})),Object.defineProperty(e.media,\"currentSrc\",{get:()=>y}),Object.defineProperty(e.media,\"ended\",{get:()=>e.currentTime===e.duration}),Promise.all([e.embed.getVideoWidth(),e.embed.getVideoHeight()]).then((t=>{const[i,s]=t;e.embed.ratio=de(i,s),he.call(this)})),e.embed.setAutopause(e.config.autopause).then((t=>{e.config.autopause=t})),e.embed.getVideoTitle().then((t=>{e.config.title=t,Ue.setTitle.call(this)})),e.embed.getCurrentTime().then((t=>{m=t,ee.call(e,e.media,\"timeupdate\")})),e.embed.getDuration().then((t=>{e.media.duration=t,ee.call(e,e.media,\"durationchange\")})),e.embed.getTextTracks().then((t=>{e.media.textTracks=t,Ne.setup.call(e)})),e.embed.on(\"cuechange\",(({cues:t=[]})=>{const i=t.map((e=>function(e){const t=document.createDocumentFragment(),i=document.createElement(\"div\");return t.appendChild(i),i.innerHTML=e,t.firstChild.innerText}(e.text)));Ne.updateCues.call(e,i)})),e.embed.on(\"loaded\",(()=>{if(e.embed.getPaused().then((t=>{ze.call(e,!t),t||ee.call(e,e.media,\"playing\")})),A.element(e.embed.element)&&e.supported.ui){e.embed.element.setAttribute(\"tabindex\",-1)}})),e.embed.on(\"bufferstart\",(()=>{ee.call(e,e.media,\"waiting\")})),e.embed.on(\"bufferend\",(()=>{ee.call(e,e.media,\"playing\")})),e.embed.on(\"play\",(()=>{ze.call(e,!0),ee.call(e,e.media,\"playing\")})),e.embed.on(\"pause\",(()=>{ze.call(e,!1)})),e.embed.on(\"timeupdate\",(t=>{e.media.seeking=!1,m=t.seconds,ee.call(e,e.media,\"timeupdate\")})),e.embed.on(\"progress\",(t=>{e.media.buffered=t.percent,ee.call(e,e.media,\"progress\"),1===parseInt(t.percent,10)&&ee.call(e,e.media,\"canplaythrough\"),e.embed.getDuration().then((t=>{t!==e.media.duration&&(e.media.duration=t,ee.call(e,e.media,\"durationchange\"))}))})),e.embed.on(\"seeked\",(()=>{e.media.seeking=!1,ee.call(e,e.media,\"seeked\")})),e.embed.on(\"ended\",(()=>{e.media.paused=!0,ee.call(e,e.media,\"ended\")})),e.embed.on(\"error\",(t=>{e.media.error=t,ee.call(e,e.media,\"error\")})),t.customControls&&setTimeout((()=>Ue.build.call(e)),0)}};function Ye(e){e&&!this.embed.hasPlayed&&(this.embed.hasPlayed=!0),this.media.paused===e&&(this.media.paused=!e,ee.call(this,this.media,e?\"play\":\"pause\"))}function Qe(e){return e.noCookie?\"https://www.youtube-nocookie.com\":\"http:\"===window.location.protocol?\"http://www.youtube.com\":void 0}const Xe={setup(){if(F(this.elements.wrapper,this.config.classNames.embed,!0),A.object(window.YT)&&A.function(window.YT.Player))Xe.ready.call(this);else{const e=window.onYouTubeIframeAPIReady;window.onYouTubeIframeAPIReady=()=>{A.function(e)&&e(),Xe.ready.call(this)},We(this.config.urls.youtube.sdk).catch((e=>{this.debug.warn(\"YouTube API failed to load\",e)}))}},getTitle(e){ke(pe(this.config.urls.youtube.api,e)).then((e=>{if(A.object(e)){const{title:t,height:i,width:s}=e;this.config.title=t,Ue.setTitle.call(this),this.embed.ratio=de(s,i)}he.call(this)})).catch((()=>{he.call(this)}))},ready(){const e=this,t=e.config.youtube,i=e.media&&e.media.getAttribute(\"id\");if(!A.empty(i)&&i.startsWith(\"youtube-\"))return;let s=e.media.getAttribute(\"src\");A.empty(s)&&(s=e.media.getAttribute(this.config.attributes.embed.id));const n=(a=s,A.empty(a)?null:a.match(/^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/)?RegExp.$2:a);var a;const r=O(\"div\",{id:`${e.provider}-${Math.floor(1e4*Math.random())}`,\"data-poster\":t.customControls?e.poster:void 0});if(e.media=D(r,e.media),t.customControls){const t=e=>`https://i.ytimg.com/vi/${n}/${e}default.jpg`;Fe(t(\"maxres\"),121).catch((()=>Fe(t(\"sd\"),121))).catch((()=>Fe(t(\"hq\")))).then((t=>Ue.setPoster.call(e,t.src))).then((t=>{t.includes(\"maxres\")||(e.elements.poster.style.backgroundSize=\"cover\")})).catch((()=>{}))}e.embed=new window.YT.Player(e.media,{videoId:n,host:Qe(t),playerVars:N({},{autoplay:e.config.autoplay?1:0,hl:e.config.hl,controls:e.supported.ui&&t.customControls?0:1,disablekb:1,playsinline:e.config.playsinline&&!e.config.fullscreen.iosNative?1:0,cc_load_policy:e.captions.active?1:0,cc_lang_pref:e.config.captions.language,widget_referrer:window?window.location.href:null},t),events:{onError(t){if(!e.media.error){const i=t.data,s={2:\"The request contains an invalid parameter value. For example, this error occurs if you specify a video ID that does not have 11 characters, or if the video ID contains invalid characters, such as exclamation points or asterisks.\",5:\"The requested content cannot be played in an HTML5 player or another error related to the HTML5 player has occurred.\",100:\"The video requested was not found. This error occurs when a video has been removed (for any reason) or has been marked as private.\",101:\"The owner of the requested video does not allow it to be played in embedded players.\",150:\"The owner of the requested video does not allow it to be played in embedded players.\"}[i]||\"An unknown error occurred\";e.media.error={code:i,message:s},ee.call(e,e.media,\"error\")}},onPlaybackRateChange(t){const i=t.target;e.media.playbackRate=i.getPlaybackRate(),ee.call(e,e.media,\"ratechange\")},onReady(i){if(A.function(e.media.play))return;const s=i.target;Xe.getTitle.call(e,n),e.media.play=()=>{Ye.call(e,!0),s.playVideo()},e.media.pause=()=>{Ye.call(e,!1),s.pauseVideo()},e.media.stop=()=>{s.stopVideo()},e.media.duration=s.getDuration(),e.media.paused=!0,e.media.currentTime=0,Object.defineProperty(e.media,\"currentTime\",{get:()=>Number(s.getCurrentTime()),set(t){e.paused&&!e.embed.hasPlayed&&e.embed.mute(),e.media.seeking=!0,ee.call(e,e.media,\"seeking\"),s.seekTo(t)}}),Object.defineProperty(e.media,\"playbackRate\",{get:()=>s.getPlaybackRate(),set(e){s.setPlaybackRate(e)}});let{volume:a}=e.config;Object.defineProperty(e.media,\"volume\",{get:()=>a,set(t){a=t,s.setVolume(100*a),ee.call(e,e.media,\"volumechange\")}});let{muted:r}=e.config;Object.defineProperty(e.media,\"muted\",{get:()=>r,set(t){const i=A.boolean(t)?t:r;r=i,s[i?\"mute\":\"unMute\"](),s.setVolume(100*a),ee.call(e,e.media,\"volumechange\")}}),Object.defineProperty(e.media,\"currentSrc\",{get:()=>s.getVideoUrl()}),Object.defineProperty(e.media,\"ended\",{get:()=>e.currentTime===e.duration});const o=s.getAvailablePlaybackRates();e.options.speed=o.filter((t=>e.config.speed.options.includes(t))),e.supported.ui&&t.customControls&&e.media.setAttribute(\"tabindex\",-1),ee.call(e,e.media,\"timeupdate\"),ee.call(e,e.media,\"durationchange\"),clearInterval(e.timers.buffering),e.timers.buffering=setInterval((()=>{e.media.buffered=s.getVideoLoadedFraction(),(null===e.media.lastBuffered||e.media.lastBufferedUe.build.call(e)),50)},onStateChange(i){const s=i.target;clearInterval(e.timers.playing);switch(e.media.seeking&&[1,2].includes(i.data)&&(e.media.seeking=!1,ee.call(e,e.media,\"seeked\")),i.data){case-1:ee.call(e,e.media,\"timeupdate\"),e.media.buffered=s.getVideoLoadedFraction(),ee.call(e,e.media,\"progress\");break;case 0:Ye.call(e,!1),e.media.loop?(s.stopVideo(),s.playVideo()):ee.call(e,e.media,\"ended\");break;case 1:t.customControls&&!e.config.autoplay&&e.media.paused&&!e.embed.hasPlayed?e.media.pause():(Ye.call(e,!0),ee.call(e,e.media,\"playing\"),e.timers.playing=setInterval((()=>{ee.call(e,e.media,\"timeupdate\")}),50),e.media.duration!==s.getDuration()&&(e.media.duration=s.getDuration(),ee.call(e,e.media,\"durationchange\")));break;case 2:e.muted||e.embed.unMute(),Ye.call(e,!1);break;case 3:ee.call(e,e.media,\"waiting\")}ee.call(e,e.elements.container,\"statechange\",!1,{code:i.data})}}})}},Je={setup(){this.media?(F(this.elements.container,this.config.classNames.type.replace(\"{0}\",this.type),!0),F(this.elements.container,this.config.classNames.provider.replace(\"{0}\",this.provider),!0),this.isEmbed&&F(this.elements.container,this.config.classNames.type.replace(\"{0}\",\"video\"),!0),this.isVideo&&(this.elements.wrapper=O(\"div\",{class:this.config.classNames.video}),_(this.media,this.elements.wrapper),this.elements.poster=O(\"div\",{class:this.config.classNames.poster}),this.elements.wrapper.appendChild(this.elements.poster)),this.isHTML5?me.setup.call(this):this.isYouTube?Xe.setup.call(this):this.isVimeo&&Ke.setup.call(this)):this.debug.warn(\"No media element found!\")}};class Ge{constructor(e){t(this,\"load\",(()=>{this.enabled&&(A.object(window.google)&&A.object(window.google.ima)?this.ready():We(this.player.config.urls.googleIMA.sdk).then((()=>{this.ready()})).catch((()=>{this.trigger(\"error\",new Error(\"Google IMA SDK failed to load\"))})))})),t(this,\"ready\",(()=>{var e;this.enabled||((e=this).manager&&e.manager.destroy(),e.elements.displayContainer&&e.elements.displayContainer.destroy(),e.elements.container.remove()),this.startSafetyTimer(12e3,\"ready()\"),this.managerPromise.then((()=>{this.clearSafetyTimer(\"onAdsManagerLoaded()\")})),this.listeners(),this.setupIMA()})),t(this,\"setupIMA\",(()=>{this.elements.container=O(\"div\",{class:this.player.config.classNames.ads}),this.player.elements.container.appendChild(this.elements.container),google.ima.settings.setVpaidMode(google.ima.ImaSdkSettings.VpaidMode.ENABLED),google.ima.settings.setLocale(this.player.config.ads.language),google.ima.settings.setDisableCustomPlaybackForIOS10Plus(this.player.config.playsinline),this.elements.displayContainer=new google.ima.AdDisplayContainer(this.elements.container,this.player.media),this.loader=new google.ima.AdsLoader(this.elements.displayContainer),this.loader.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED,(e=>this.onAdsManagerLoaded(e)),!1),this.loader.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR,(e=>this.onAdError(e)),!1),this.requestAds()})),t(this,\"requestAds\",(()=>{const{container:e}=this.player.elements;try{const t=new google.ima.AdsRequest;t.adTagUrl=this.tagUrl,t.linearAdSlotWidth=e.offsetWidth,t.linearAdSlotHeight=e.offsetHeight,t.nonLinearAdSlotWidth=e.offsetWidth,t.nonLinearAdSlotHeight=e.offsetHeight,t.forceNonLinearFullSlot=!1,t.setAdWillPlayMuted(!this.player.muted),this.loader.requestAds(t)}catch(e){this.onAdError(e)}})),t(this,\"pollCountdown\",((e=!1)=>{if(!e)return clearInterval(this.countdownTimer),void this.elements.container.removeAttribute(\"data-badge-text\");this.countdownTimer=setInterval((()=>{const e=Pe(Math.max(this.manager.getRemainingTime(),0)),t=`${we.get(\"advertisement\",this.player.config)} - ${e}`;this.elements.container.setAttribute(\"data-badge-text\",t)}),100)})),t(this,\"onAdsManagerLoaded\",(e=>{if(!this.enabled)return;const t=new google.ima.AdsRenderingSettings;t.restoreCustomPlaybackStateOnAdBreakComplete=!0,t.enablePreloading=!0,this.manager=e.getAdsManager(this.player,t),this.cuePoints=this.manager.getCuePoints(),this.manager.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR,(e=>this.onAdError(e))),Object.keys(google.ima.AdEvent.Type).forEach((e=>{this.manager.addEventListener(google.ima.AdEvent.Type[e],(e=>this.onAdEvent(e)))})),this.trigger(\"loaded\")})),t(this,\"addCuePoints\",(()=>{A.empty(this.cuePoints)||this.cuePoints.forEach((e=>{if(0!==e&&-1!==e&&e{const{container:t}=this.player.elements,i=e.getAd(),s=e.getAdData();switch((e=>{ee.call(this.player,this.player.media,`ads${e.replace(/_/g,\"\").toLowerCase()}`)})(e.type),e.type){case google.ima.AdEvent.Type.LOADED:this.trigger(\"loaded\"),this.pollCountdown(!0),i.isLinear()||(i.width=t.offsetWidth,i.height=t.offsetHeight);break;case google.ima.AdEvent.Type.STARTED:this.manager.setVolume(this.player.volume);break;case google.ima.AdEvent.Type.ALL_ADS_COMPLETED:this.player.ended?this.loadAds():this.loader.contentComplete();break;case google.ima.AdEvent.Type.CONTENT_PAUSE_REQUESTED:this.pauseContent();break;case google.ima.AdEvent.Type.CONTENT_RESUME_REQUESTED:this.pollCountdown(),this.resumeContent();break;case google.ima.AdEvent.Type.LOG:s.adError&&this.player.debug.warn(`Non-fatal ad error: ${s.adError.getMessage()}`)}})),t(this,\"onAdError\",(e=>{this.cancel(),this.player.debug.warn(\"Ads error\",e)})),t(this,\"listeners\",(()=>{const{container:e}=this.player.elements;let t;this.player.on(\"canplay\",(()=>{this.addCuePoints()})),this.player.on(\"ended\",(()=>{this.loader.contentComplete()})),this.player.on(\"timeupdate\",(()=>{t=this.player.currentTime})),this.player.on(\"seeked\",(()=>{const e=this.player.currentTime;A.empty(this.cuePoints)||this.cuePoints.forEach(((i,s)=>{t{const{container:e}=this.player.elements;this.managerPromise||this.resumeContent(),this.managerPromise.then((()=>{this.manager.setVolume(this.player.volume),this.elements.displayContainer.initialize();try{this.initialized||(this.manager.init(e.offsetWidth,e.offsetHeight,google.ima.ViewMode.NORMAL),this.manager.start()),this.initialized=!0}catch(e){this.onAdError(e)}})).catch((()=>{}))})),t(this,\"resumeContent\",(()=>{this.elements.container.style.zIndex=\"\",this.playing=!1,se(this.player.media.play())})),t(this,\"pauseContent\",(()=>{this.elements.container.style.zIndex=3,this.playing=!0,this.player.media.pause()})),t(this,\"cancel\",(()=>{this.initialized&&this.resumeContent(),this.trigger(\"error\"),this.loadAds()})),t(this,\"loadAds\",(()=>{this.managerPromise.then((()=>{this.manager&&this.manager.destroy(),this.managerPromise=new Promise((e=>{this.on(\"loaded\",e),this.player.debug.log(this.manager)})),this.initialized=!1,this.requestAds()})).catch((()=>{}))})),t(this,\"trigger\",((e,...t)=>{const i=this.events[e];A.array(i)&&i.forEach((e=>{A.function(e)&&e.apply(this,t)}))})),t(this,\"on\",((e,t)=>(A.array(this.events[e])||(this.events[e]=[]),this.events[e].push(t),this))),t(this,\"startSafetyTimer\",((e,t)=>{this.player.debug.log(`Safety timer invoked from: ${t}`),this.safetyTimer=setTimeout((()=>{this.cancel(),this.clearSafetyTimer(\"startSafetyTimer()\")}),e)})),t(this,\"clearSafetyTimer\",(e=>{A.nullOrUndefined(this.safetyTimer)||(this.player.debug.log(`Safety timer cleared from: ${e}`),clearTimeout(this.safetyTimer),this.safetyTimer=null)})),this.player=e,this.config=e.config.ads,this.playing=!1,this.initialized=!1,this.elements={container:null,displayContainer:null},this.manager=null,this.loader=null,this.cuePoints=null,this.events={},this.safetyTimer=null,this.countdownTimer=null,this.managerPromise=new Promise(((e,t)=>{this.on(\"loaded\",e),this.on(\"error\",t)})),this.load()}get enabled(){const{config:e}=this;return this.player.isHTML5&&this.player.isVideo&&e.enabled&&(!A.empty(e.publisherId)||A.url(e.tagUrl))}get tagUrl(){const{config:e}=this;if(A.url(e.tagUrl))return e.tagUrl;return`https://go.aniview.com/api/adserver6/vast/?${Le({AV_PUBLISHERID:\"58c25bb0073ef448b1087ad6\",AV_CHANNELID:\"5a0458dc28a06145e4519d21\",AV_URL:window.location.hostname,cb:Date.now(),AV_WIDTH:640,AV_HEIGHT:480,AV_CDIM2:e.publisherId})}`}}function Ze(e=0,t=0,i=255){return Math.min(Math.max(e,t),i)}const et=e=>{const t=[];return e.split(/\\r\\n\\r\\n|\\n\\n|\\r\\r/).forEach((e=>{const i={};e.split(/\\r\\n|\\n|\\r/).forEach((e=>{if(A.number(i.startTime)){if(!A.empty(e.trim())&&A.empty(i.text)){const t=e.trim().split(\"#xywh=\");[i.text]=t,t[1]&&([i.x,i.y,i.w,i.h]=t[1].split(\",\"))}}else{const t=e.match(/([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})( ?--> ?)([0-9]{2})?:?([0-9]{2}):([0-9]{2}).([0-9]{2,3})/);t&&(i.startTime=60*Number(t[1]||0)*60+60*Number(t[2])+Number(t[3])+Number(`0.${t[4]}`),i.endTime=60*Number(t[6]||0)*60+60*Number(t[7])+Number(t[8])+Number(`0.${t[9]}`))}})),i.text&&t.push(i)})),t},tt=(e,t)=>{const i={};return e>t.width/t.height?(i.width=t.width,i.height=1/e*t.width):(i.height=t.height,i.width=e*t.height),i};class it{constructor(e){t(this,\"load\",(()=>{this.player.elements.display.seekTooltip&&(this.player.elements.display.seekTooltip.hidden=this.enabled),this.enabled&&this.getThumbnails().then((()=>{this.enabled&&(this.render(),this.determineContainerAutoSizing(),this.listeners(),this.loaded=!0)}))})),t(this,\"getThumbnails\",(()=>new Promise((e=>{const{src:t}=this.player.config.previewThumbnails;if(A.empty(t))throw new Error(\"Missing previewThumbnails.src config attribute\");const i=()=>{this.thumbnails.sort(((e,t)=>e.height-t.height)),this.player.debug.log(\"Preview thumbnails\",this.thumbnails),e()};if(A.function(t))t((e=>{this.thumbnails=e,i()}));else{const e=(A.string(t)?[t]:t).map((e=>this.getThumbnail(e)));Promise.all(e).then(i)}})))),t(this,\"getThumbnail\",(e=>new Promise((t=>{ke(e).then((i=>{const s={frames:et(i),height:null,urlPrefix:\"\"};s.frames[0].text.startsWith(\"/\")||s.frames[0].text.startsWith(\"http://\")||s.frames[0].text.startsWith(\"https://\")||(s.urlPrefix=e.substring(0,e.lastIndexOf(\"/\")+1));const n=new Image;n.onload=()=>{s.height=n.naturalHeight,s.width=n.naturalWidth,this.thumbnails.push(s),t()},n.src=s.urlPrefix+s.frames[0].text}))})))),t(this,\"startMove\",(e=>{if(this.loaded&&A.event(e)&&[\"touchmove\",\"mousemove\"].includes(e.type)&&this.player.media.duration){if(\"touchmove\"===e.type)this.seekTime=this.player.media.duration*(this.player.elements.inputs.seek.value/100);else{var t,i;const s=this.player.elements.progress.getBoundingClientRect(),n=100/s.width*(e.pageX-s.left);this.seekTime=this.player.media.duration*(n/100),this.seekTimethis.player.media.duration-1&&(this.seekTime=this.player.media.duration-1),this.mousePosX=e.pageX,this.elements.thumb.time.innerText=Pe(this.seekTime);const a=null===(t=this.player.config.markers)||void 0===t||null===(i=t.points)||void 0===i?void 0:i.find((({time:e})=>e===Math.round(this.seekTime)));a&&this.elements.thumb.time.insertAdjacentHTML(\"afterbegin\",`${a.label}`)}this.showImageAtCurrentTime()}})),t(this,\"endMove\",(()=>{this.toggleThumbContainer(!1,!0)})),t(this,\"startScrubbing\",(e=>{(A.nullOrUndefined(e.button)||!1===e.button||0===e.button)&&(this.mouseDown=!0,this.player.media.duration&&(this.toggleScrubbingContainer(!0),this.toggleThumbContainer(!1,!0),this.showImageAtCurrentTime()))})),t(this,\"endScrubbing\",(()=>{this.mouseDown=!1,Math.ceil(this.lastTime)===Math.ceil(this.player.media.currentTime)?this.toggleScrubbingContainer(!1):Z.call(this.player,this.player.media,\"timeupdate\",(()=>{this.mouseDown||this.toggleScrubbingContainer(!1)}))})),t(this,\"listeners\",(()=>{this.player.on(\"play\",(()=>{this.toggleThumbContainer(!1,!0)})),this.player.on(\"seeked\",(()=>{this.toggleThumbContainer(!1)})),this.player.on(\"timeupdate\",(()=>{this.lastTime=this.player.media.currentTime}))})),t(this,\"render\",(()=>{this.elements.thumb.container=O(\"div\",{class:this.player.config.classNames.previewThumbnails.thumbContainer}),this.elements.thumb.imageContainer=O(\"div\",{class:this.player.config.classNames.previewThumbnails.imageContainer}),this.elements.thumb.container.appendChild(this.elements.thumb.imageContainer);const e=O(\"div\",{class:this.player.config.classNames.previewThumbnails.timeContainer});this.elements.thumb.time=O(\"span\",{},\"00:00\"),e.appendChild(this.elements.thumb.time),this.elements.thumb.imageContainer.appendChild(e),A.element(this.player.elements.progress)&&this.player.elements.progress.appendChild(this.elements.thumb.container),this.elements.scrubbing.container=O(\"div\",{class:this.player.config.classNames.previewThumbnails.scrubbingContainer}),this.player.elements.wrapper.appendChild(this.elements.scrubbing.container)})),t(this,\"destroy\",(()=>{this.elements.thumb.container&&this.elements.thumb.container.remove(),this.elements.scrubbing.container&&this.elements.scrubbing.container.remove()})),t(this,\"showImageAtCurrentTime\",(()=>{this.mouseDown?this.setScrubbingContainerSize():this.setThumbContainerSizeAndPos();const e=this.thumbnails[0].frames.findIndex((e=>this.seekTime>=e.startTime&&this.seekTime=0;let i=0;this.mouseDown||this.toggleThumbContainer(t),t&&(this.thumbnails.forEach(((t,s)=>{this.loadedImages.includes(t.frames[e].text)&&(i=s)})),e!==this.showingThumb&&(this.showingThumb=e,this.loadImage(i)))})),t(this,\"loadImage\",((e=0)=>{const t=this.showingThumb,i=this.thumbnails[e],{urlPrefix:s}=i,n=i.frames[t],a=i.frames[t].text,r=s+a;if(this.currentImageElement&&this.currentImageElement.dataset.filename===a)this.showImage(this.currentImageElement,n,e,t,a,!1),this.currentImageElement.dataset.index=t,this.removeOldImages(this.currentImageElement);else{this.loadingImage&&this.usingSprites&&(this.loadingImage.onload=null);const i=new Image;i.src=r,i.dataset.index=t,i.dataset.filename=a,this.showingThumbFilename=a,this.player.debug.log(`Loading image: ${r}`),i.onload=()=>this.showImage(i,n,e,t,a,!0),this.loadingImage=i,this.removeOldImages(i)}})),t(this,\"showImage\",((e,t,i,s,n,a=!0)=>{this.player.debug.log(`Showing thumb: ${n}. num: ${s}. qual: ${i}. newimg: ${a}`),this.setImageSizeAndOffset(e,t),a&&(this.currentImageContainer.appendChild(e),this.currentImageElement=e,this.loadedImages.includes(n)||this.loadedImages.push(n)),this.preloadNearby(s,!0).then(this.preloadNearby(s,!1)).then(this.getHigherQuality(i,e,t,n))})),t(this,\"removeOldImages\",(e=>{Array.from(this.currentImageContainer.children).forEach((t=>{if(\"img\"!==t.tagName.toLowerCase())return;const i=this.usingSprites?500:1e3;if(t.dataset.index!==e.dataset.index&&!t.dataset.deleting){t.dataset.deleting=!0;const{currentImageContainer:e}=this;setTimeout((()=>{e.removeChild(t),this.player.debug.log(`Removing thumb: ${t.dataset.filename}`)}),i)}}))})),t(this,\"preloadNearby\",((e,t=!0)=>new Promise((i=>{setTimeout((()=>{const s=this.thumbnails[0].frames[e].text;if(this.showingThumbFilename===s){let n;n=t?this.thumbnails[0].frames.slice(e):this.thumbnails[0].frames.slice(0,e).reverse();let a=!1;n.forEach((e=>{const t=e.text;if(t!==s&&!this.loadedImages.includes(t)){a=!0,this.player.debug.log(`Preloading thumb filename: ${t}`);const{urlPrefix:e}=this.thumbnails[0],s=e+t,n=new Image;n.src=s,n.onload=()=>{this.player.debug.log(`Preloaded thumb filename: ${t}`),this.loadedImages.includes(t)||this.loadedImages.push(t),i()}}})),a||i()}}),300)})))),t(this,\"getHigherQuality\",((e,t,i,s)=>{if(e{const i=this.player.config.classNames.previewThumbnails.thumbContainerShown;this.elements.thumb.container.classList.toggle(i,e),!e&&t&&(this.showingThumb=null,this.showingThumbFilename=null)})),t(this,\"toggleScrubbingContainer\",((e=!1)=>{const t=this.player.config.classNames.previewThumbnails.scrubbingContainerShown;this.elements.scrubbing.container.classList.toggle(t,e),e||(this.showingThumb=null,this.showingThumbFilename=null)})),t(this,\"determineContainerAutoSizing\",(()=>{(this.elements.thumb.imageContainer.clientHeight>20||this.elements.thumb.imageContainer.clientWidth>20)&&(this.sizeSpecifiedInCSS=!0)})),t(this,\"setThumbContainerSizeAndPos\",(()=>{const{imageContainer:e}=this.elements.thumb;if(this.sizeSpecifiedInCSS){if(e.clientHeight>20&&e.clientWidth{const e=this.player.elements.progress.getBoundingClientRect(),t=this.player.elements.container.getBoundingClientRect(),{container:i}=this.elements.thumb,s=t.left-e.left+10,n=t.right-e.left-i.clientWidth-10,a=this.mousePosX-e.left-i.clientWidth/2,r=Ze(a,s,n);i.style.left=`${r}px`,i.style.setProperty(\"--preview-arrow-offset\",a-r+\"px\")})),t(this,\"setScrubbingContainerSize\",(()=>{const{width:e,height:t}=tt(this.thumbAspectRatio,{width:this.player.media.clientWidth,height:this.player.media.clientHeight});this.elements.scrubbing.container.style.width=`${e}px`,this.elements.scrubbing.container.style.height=`${t}px`})),t(this,\"setImageSizeAndOffset\",((e,t)=>{if(!this.usingSprites)return;const i=this.thumbContainerHeight/t.h;e.style.height=e.naturalHeight*i+\"px\",e.style.width=e.naturalWidth*i+\"px\",e.style.left=`-${t.x*i}px`,e.style.top=`-${t.y*i}px`})),this.player=e,this.thumbnails=[],this.loaded=!1,this.lastMouseMoveTime=Date.now(),this.mouseDown=!1,this.loadedImages=[],this.elements={thumb:{},scrubbing:{}},this.load()}get enabled(){return this.player.isHTML5&&this.player.isVideo&&this.player.config.previewThumbnails.enabled}get currentImageContainer(){return this.mouseDown?this.elements.scrubbing.container:this.elements.thumb.imageContainer}get usingSprites(){return Object.keys(this.thumbnails[0].frames[0]).includes(\"w\")}get thumbAspectRatio(){return this.usingSprites?this.thumbnails[0].frames[0].w/this.thumbnails[0].frames[0].h:this.thumbnails[0].width/this.thumbnails[0].height}get thumbContainerHeight(){if(this.mouseDown){const{height:e}=tt(this.thumbAspectRatio,{width:this.player.media.clientWidth,height:this.player.media.clientHeight});return e}return this.sizeSpecifiedInCSS?this.elements.thumb.imageContainer.clientHeight:Math.floor(this.player.media.clientWidth/this.thumbAspectRatio/4)}get currentImageElement(){return this.mouseDown?this.currentScrubbingImageElement:this.currentThumbnailImageElement}set currentImageElement(e){this.mouseDown?this.currentScrubbingImageElement=e:this.currentThumbnailImageElement=e}}const st={insertElements(e,t){A.string(t)?$(e,this.media,{src:t}):A.array(t)&&t.forEach((t=>{$(e,this.media,t)}))},change(e){L(e,\"sources.length\")?(me.cancelRequests.call(this),this.destroy.call(this,(()=>{this.options.quality=[],j(this.media),this.media=null,A.element(this.elements.container)&&this.elements.container.removeAttribute(\"class\");const{sources:t,type:i}=e,[{provider:s=$e.html5,src:n}]=t,a=\"html5\"===s?i:\"div\",r=\"html5\"===s?{}:{src:n};Object.assign(this,{provider:s,type:i,supported:Y.check(i,s,this.config.playsinline),media:O(a,r)}),this.elements.container.appendChild(this.media),A.boolean(e.autoplay)&&(this.config.autoplay=e.autoplay),this.isHTML5&&(this.config.crossorigin&&this.media.setAttribute(\"crossorigin\",\"\"),this.config.autoplay&&this.media.setAttribute(\"autoplay\",\"\"),A.empty(e.poster)||(this.poster=e.poster),this.config.loop.active&&this.media.setAttribute(\"loop\",\"\"),this.config.muted&&this.media.setAttribute(\"muted\",\"\"),this.config.playsinline&&this.media.setAttribute(\"playsinline\",\"\")),Ue.addStyleHook.call(this),this.isHTML5&&st.insertElements.call(this,\"source\",t),this.config.title=e.title,Je.setup.call(this),this.isHTML5&&Object.keys(e).includes(\"tracks\")&&st.insertElements.call(this,\"track\",e.tracks),(this.isHTML5||this.isEmbed&&!this.supported.ui)&&Ue.build.call(this),this.isHTML5&&this.media.load(),A.empty(e.previewThumbnails)||(Object.assign(this.config.previewThumbnails,e.previewThumbnails),this.previewThumbnails&&this.previewThumbnails.loaded&&(this.previewThumbnails.destroy(),this.previewThumbnails=null),this.config.previewThumbnails.enabled&&(this.previewThumbnails=new it(this))),this.fullscreen.update()}),!0)):this.debug.warn(\"Invalid source format\")}};class nt{constructor(e,i){if(t(this,\"play\",(()=>A.function(this.media.play)?(this.ads&&this.ads.enabled&&this.ads.managerPromise.then((()=>this.ads.play())).catch((()=>se(this.media.play()))),this.media.play()):null)),t(this,\"pause\",(()=>this.playing&&A.function(this.media.pause)?this.media.pause():null)),t(this,\"togglePlay\",(e=>(A.boolean(e)?e:!this.playing)?this.play():this.pause())),t(this,\"stop\",(()=>{this.isHTML5?(this.pause(),this.restart()):A.function(this.media.stop)&&this.media.stop()})),t(this,\"restart\",(()=>{this.currentTime=0})),t(this,\"rewind\",(e=>{this.currentTime-=A.number(e)?e:this.config.seekTime})),t(this,\"forward\",(e=>{this.currentTime+=A.number(e)?e:this.config.seekTime})),t(this,\"increaseVolume\",(e=>{const t=this.media.muted?0:this.volume;this.volume=t+(A.number(e)?e:0)})),t(this,\"decreaseVolume\",(e=>{this.increaseVolume(-e)})),t(this,\"airplay\",(()=>{Y.airplay&&this.media.webkitShowPlaybackTargetPicker()})),t(this,\"toggleControls\",(e=>{if(this.supported.ui&&!this.isAudio){const t=U(this.elements.container,this.config.classNames.hideControls),i=void 0===e?void 0:!e,s=F(this.elements.container,this.config.classNames.hideControls,i);if(s&&A.array(this.config.controls)&&this.config.controls.includes(\"settings\")&&!A.empty(this.config.settings)&&Me.toggleMenu.call(this,!1),s!==t){const e=s?\"controlshidden\":\"controlsshown\";ee.call(this,this.media,e)}return!s}return!1})),t(this,\"on\",((e,t)=>{J.call(this,this.elements.container,e,t)})),t(this,\"once\",((e,t)=>{Z.call(this,this.elements.container,e,t)})),t(this,\"off\",((e,t)=>{G(this.elements.container,e,t)})),t(this,\"destroy\",((e,t=!1)=>{if(!this.ready)return;const i=()=>{document.body.style.overflow=\"\",this.embed=null,t?(Object.keys(this.elements).length&&(j(this.elements.buttons.play),j(this.elements.captions),j(this.elements.controls),j(this.elements.wrapper),this.elements.buttons.play=null,this.elements.captions=null,this.elements.controls=null,this.elements.wrapper=null),A.function(e)&&e()):(te.call(this),me.cancelRequests.call(this),D(this.elements.original,this.elements.container),ee.call(this,this.elements.original,\"destroyed\",!0),A.function(e)&&e.call(this.elements.original),this.ready=!1,setTimeout((()=>{this.elements=null,this.media=null}),200))};this.stop(),clearTimeout(this.timers.loading),clearTimeout(this.timers.controls),clearTimeout(this.timers.resized),this.isHTML5?(Ue.toggleNativeControls.call(this,!0),i()):this.isYouTube?(clearInterval(this.timers.buffering),clearInterval(this.timers.playing),null!==this.embed&&A.function(this.embed.destroy)&&this.embed.destroy(),i()):this.isVimeo&&(null!==this.embed&&this.embed.unload().then(i),setTimeout(i,200))})),t(this,\"supports\",(e=>Y.mime.call(this,e))),this.timers={},this.ready=!1,this.loading=!1,this.failed=!1,this.touch=Y.touch,this.media=e,this.config=N({},_e,nt.defaults,i||{},(()=>{try{return JSON.parse(this.media.getAttribute(\"data-plyr-config\"))}catch(e){return{}}})()),this.elements={container:null,fullscreen:null,captions:null,buttons:{},display:{},progress:{},inputs:{},settings:{popup:null,menu:null,panels:{},buttons:{}}},this.captions={active:null,currentTrack:-1,meta:new WeakMap},this.fullscreen={active:!1},this.options={speed:[],quality:[]},this.debug=new qe(this.config.debug),this.debug.log(\"Config\",this.config),this.debug.log(\"Support\",Y),A.nullOrUndefined(this.media)||!A.element(this.media))return void this.debug.error(\"Setup failed: no suitable element passed\");if(this.media.plyr)return void this.debug.warn(\"Target already setup\");if(!this.config.enabled)return void this.debug.error(\"Setup failed: disabled by config\");if(!Y.check().api)return void this.debug.error(\"Setup failed: no support\");const s=this.media.cloneNode(!0);s.autoplay=!1,this.elements.original=s;const n=this.media.tagName.toLowerCase();let a=null,r=null;switch(n){case\"div\":if(a=this.media.querySelector(\"iframe\"),A.element(a)){if(r=xe(a.getAttribute(\"src\")),this.provider=function(e){return/^(https?:\\/\\/)?(www\\.)?(youtube\\.com|youtube-nocookie\\.com|youtu\\.?be)\\/.+$/.test(e)?$e.youtube:/^https?:\\/\\/player.vimeo.com\\/video\\/\\d{0,9}(?=\\b|\\/)/.test(e)?$e.vimeo:null}(r.toString()),this.elements.container=this.media,this.media=a,this.elements.container.className=\"\",r.search.length){const e=[\"1\",\"true\"];e.includes(r.searchParams.get(\"autoplay\"))&&(this.config.autoplay=!0),e.includes(r.searchParams.get(\"loop\"))&&(this.config.loop.active=!0),this.isYouTube?(this.config.playsinline=e.includes(r.searchParams.get(\"playsinline\")),this.config.youtube.hl=r.searchParams.get(\"hl\")):this.config.playsinline=!0}}else this.provider=this.media.getAttribute(this.config.attributes.embed.provider),this.media.removeAttribute(this.config.attributes.embed.provider);if(A.empty(this.provider)||!Object.values($e).includes(this.provider))return void this.debug.error(\"Setup failed: Invalid provider\");this.type=Re;break;case\"video\":case\"audio\":this.type=n,this.provider=$e.html5,this.media.hasAttribute(\"crossorigin\")&&(this.config.crossorigin=!0),this.media.hasAttribute(\"autoplay\")&&(this.config.autoplay=!0),(this.media.hasAttribute(\"playsinline\")||this.media.hasAttribute(\"webkit-playsinline\"))&&(this.config.playsinline=!0),this.media.hasAttribute(\"muted\")&&(this.config.muted=!0),this.media.hasAttribute(\"loop\")&&(this.config.loop.active=!0);break;default:return void this.debug.error(\"Setup failed: unsupported type\")}this.supported=Y.check(this.type,this.provider),this.supported.api?(this.eventListeners=[],this.listeners=new Ve(this),this.storage=new Te(this),this.media.plyr=this,A.element(this.elements.container)||(this.elements.container=O(\"div\"),_(this.media,this.elements.container)),Ue.migrateStyles.call(this),Ue.addStyleHook.call(this),Je.setup.call(this),this.config.debug&&J.call(this,this.elements.container,this.config.events.join(\" \"),(e=>{this.debug.log(`event: ${e.type}`)})),this.fullscreen=new He(this),(this.isHTML5||this.isEmbed&&!this.supported.ui)&&Ue.build.call(this),this.listeners.container(),this.listeners.global(),this.config.ads.enabled&&(this.ads=new Ge(this)),this.isHTML5&&this.config.autoplay&&this.once(\"canplay\",(()=>se(this.play()))),this.lastSeekTime=0,this.config.previewThumbnails.enabled&&(this.previewThumbnails=new it(this))):this.debug.error(\"Setup failed: no support\")}get isHTML5(){return this.provider===$e.html5}get isEmbed(){return this.isYouTube||this.isVimeo}get isYouTube(){return this.provider===$e.youtube}get isVimeo(){return this.provider===$e.vimeo}get isVideo(){return this.type===Re}get isAudio(){return this.type===je}get playing(){return Boolean(this.ready&&!this.paused&&!this.ended)}get paused(){return Boolean(this.media.paused)}get stopped(){return Boolean(this.paused&&0===this.currentTime)}get ended(){return Boolean(this.media.ended)}set currentTime(e){if(!this.duration)return;const t=A.number(e)&&e>0;this.media.currentTime=t?Math.min(e,this.duration):0,this.debug.log(`Seeking to ${this.currentTime} seconds`)}get currentTime(){return Number(this.media.currentTime)}get buffered(){const{buffered:e}=this.media;return A.number(e)?e:e&&e.length&&this.duration>0?e.end(0)/this.duration:0}get seeking(){return Boolean(this.media.seeking)}get duration(){const e=parseFloat(this.config.duration),t=(this.media||{}).duration,i=A.number(t)&&t!==1/0?t:0;return e||i}set volume(e){let t=e;A.string(t)&&(t=Number(t)),A.number(t)||(t=this.storage.get(\"volume\")),A.number(t)||({volume:t}=this.config),t>1&&(t=1),t0&&(this.muted=!1)}get volume(){return Number(this.media.volume)}set muted(e){let t=e;A.boolean(t)||(t=this.storage.get(\"muted\")),A.boolean(t)||(t=this.config.muted),this.config.muted=t,this.media.muted=t}get muted(){return Boolean(this.media.muted)}get hasAudio(){return!this.isHTML5||(!!this.isAudio||(Boolean(this.media.mozHasAudio)||Boolean(this.media.webkitAudioDecodedByteCount)||Boolean(this.media.audioTracks&&this.media.audioTracks.length)))}set speed(e){let t=null;A.number(e)&&(t=e),A.number(t)||(t=this.storage.get(\"speed\")),A.number(t)||(t=this.config.speed.selected);const{minimumSpeed:i,maximumSpeed:s}=this;t=Ze(t,i,s),this.config.speed.selected=t,setTimeout((()=>{this.media&&(this.media.playbackRate=t)}),0)}get speed(){return Number(this.media.playbackRate)}get minimumSpeed(){return this.isYouTube?Math.min(...this.options.speed):this.isVimeo?.5:.0625}get maximumSpeed(){return this.isYouTube?Math.max(...this.options.speed):this.isVimeo?2:16}set quality(e){const t=this.config.quality,i=this.options.quality;if(!i.length)return;let s=[!A.empty(e)&&Number(e),this.storage.get(\"quality\"),t.selected,t.default].find(A.number),n=!0;if(!i.includes(s)){const e=ae(i,s);this.debug.warn(`Unsupported quality option: ${s}, using ${e} instead`),s=e,n=!1}t.selected=s,this.media.quality=s,n&&this.storage.set({quality:s})}get quality(){return this.media.quality}set loop(e){const t=A.boolean(e)?e:this.config.loop.active;this.config.loop.active=t,this.media.loop=t}get loop(){return Boolean(this.media.loop)}set source(e){st.change.call(this,e)}get source(){return this.media.currentSrc}get download(){const{download:e}=this.config.urls;return A.url(e)?e:this.source}set download(e){A.url(e)&&(this.config.urls.download=e,Me.setDownloadUrl.call(this))}set poster(e){this.isVideo?Ue.setPoster.call(this,e,!1).catch((()=>{})):this.debug.warn(\"Poster can only be set for video\")}get poster(){return this.isVideo?this.media.getAttribute(\"poster\")||this.media.getAttribute(\"data-poster\"):null}get ratio(){if(!this.isVideo)return null;const e=ce(ue.call(this));return A.array(e)?e.join(\":\"):e}set ratio(e){this.isVideo?A.string(e)&&le(e)?(this.config.ratio=ce(e),he.call(this)):this.debug.error(`Invalid aspect ratio specified (${e})`):this.debug.warn(\"Aspect ratio can only be set for video\")}set autoplay(e){this.config.autoplay=A.boolean(e)?e:this.config.autoplay}get autoplay(){return Boolean(this.config.autoplay)}toggleCaptions(e){Ne.toggle.call(this,e,!1)}set currentTrack(e){Ne.set.call(this,e,!1),Ne.setup.call(this)}get currentTrack(){const{toggled:e,currentTrack:t}=this.captions;return e?t:-1}set language(e){Ne.setLanguage.call(this,e,!1)}get language(){return(Ne.getCurrentTrack.call(this)||{}).language}set pip(e){if(!Y.pip)return;const t=A.boolean(e)?e:!this.pip;A.function(this.media.webkitSetPresentationMode)&&this.media.webkitSetPresentationMode(t?Ie:Oe),A.function(this.media.requestPictureInPicture)&&(!this.pip&&t?this.media.requestPictureInPicture():this.pip&&!t&&document.exitPictureInPicture())}get pip(){return Y.pip?A.empty(this.media.webkitPresentationMode)?this.media===document.pictureInPictureElement:this.media.webkitPresentationMode===Ie:null}setPreviewThumbnails(e){this.previewThumbnails&&this.previewThumbnails.loaded&&(this.previewThumbnails.destroy(),this.previewThumbnails=null),Object.assign(this.config.previewThumbnails,e),this.config.previewThumbnails.enabled&&(this.previewThumbnails=new it(this))}static supported(e,t){return Y.check(e,t)}static loadSprite(e,t){return Ee(e,t)}static setup(e,t={}){let i=null;return A.string(e)?i=Array.from(document.querySelectorAll(e)):A.nodeList(e)?i=Array.from(e):A.array(e)&&(i=e.filter(A.element)),A.empty(i)?null:i.map((e=>new nt(e,t)))}}var at;return nt.defaults=(at=_e,JSON.parse(JSON.stringify(at))),nt}));"}],"posts":[{"title":"函数Hook技术（Trampoline 蹦床）","slug":"post9","date":"2025-04-10T16:00:00.000Z","updated":"2025-04-11T17:36:00.000Z","comments":true,"path":"2025/04/11/post9/","permalink":"https://bhdtec.com/2025/04/11/post9/","excerpt":"","text":"这一期主要分享Hook中的Trampoline（蹦床）技术，这个相当于是Detour的进化版。Trampoline的最大的优势是解决Detour调用被Hook函数带来的无限递归问题。 一，技术介绍Trampoline和Detour的区别1.Dertour（转向）结合上一期内容Detour是拦截目标函数并把代码重定向到自己的函数（Hook函数）当中。比如当程序正常调用一个目标函数时实际上执行的是被我们修改后的指令，通过插入的Jmp指令让CPU跳转到我们的代码。本质就是拦截和重定向目标函数。 举例：汽车正常形式的一条公路上，我们设立了个路障（拦截）和指示牌（转向），强制让所有车开往我们指定的一条小路（Hook函数）上。 2.Trampoline（蹦床）跟Detour不同的是，在实行Detour之前先备份被窃取的字节（原始指令），再分配一块内存空间（Trampoline空间）存放原始指令。在这原始指令后面紧接着一个Jmp指令用来跳转回被窃取的字节之后的位置，继续执行原始函数的剩余部分。这样就达到了备份原始指令的目的，我们先通过Detour跳转到我们的Hook函数执行想要的功能逻辑（如果Hook函数当中我们需要调用原始指令的话直接调用Trampoline的地址就行了）。执行完Hook函数之后CPU会跳转到Trampoline，Trampoline会执行之前备份好的原始指令，然后通过Trampoline中的Jmp指令跳转回原始函数继续执行。本质上可以在自己的函数当中可以随意调用原函数避免出现递归循环问题。 举例：跟上面的公路举例中，在设置的路障旁边修建一条匝道（Trampoline），这个匝道包含被我们通过路障覆盖掉的原始公路的一部分（备份原始指令），匝道的尽头就是原始公路路障后面的部分。当车进入我们的小路（Hook函数）后，必须经过我们新修建的匝道（Trampoline）才能会到主公路的后面部分继续行驶。 二，Hook函数（Trampoline）1.函数的定义首先是函数的声明，跟Detour创建的Hook函数一样需要三个参数。分别是想要拦截的目标函数地址，指向我们自定义的Hook函数的地址，需要被窃取的字节长度： 1void * TrampolineHook(void * toHook, void * ourFunct, int len); 第一步跟之前一样先判断被窃取的字节长度是否小于5个字节，是的话就没有办法完整的写入Detour所需要的跳转指令返回NULL表示失败： 1if (len &lt; 5) return NULL; 之后可以为存放 Trampoline 代码分配一个新的内存空间，这里通过调用 Windows API 函数 VirtualAlloc 来实现。这个函数接受4个参数： 123456LPVOID VirtualAlloc( [in, optional] LPVOID lpAddress, [in] SIZE_T dwSize, [in] DWORD flAllocationType, [in] DWORD flProtect); 根据介绍第一个参数是分配的内存起始地址填写 NULL 参数会让系统自动选择分配的基地址，第二个参数是分配内存区域的大小填写 len+5 后面的5代表跳转指令的长度，第三个参数填写 MEM_COMMIT | MEM_RESERVE 表示直接完成内存的预留和提交可以立即让内存区域可用，第四个参数 PAGE_EXECUTE_READWRITE 让这块地址的拥有执行权限和读写权限。 此函数返回成功能得到新创建的内存区域地址，把这个地址存储在 trampoLine 指针当中： 1void * trampoLine = VirtualAlloc(NULL, len + 5, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE); 得到了新内存区域后通过 memcpy 函数把原始指令复制到 trampoLine 区域当中： 1memcpy(trampoLine, toHook, len); 原始指令后需要跳转到原函数的后面部分去才行，所以这里要先计算跳转回原始函数的地址： 1uintptr_t trampoJmpAddy = ((uintptr_t)toHook - (uintptr_t)trampoLine) - 5; 将 Jmp 指令的操作码写入内存区域，0xE9 是Jmp指令的操作码。 (uintptr_t)trampoLine + len 计算出原始指令之后的第一个字节处： 1*(BYTE*)((uintptr_t)trampoLine + len) = 0xE9; Jmp指令后面紧接着需要跳转的地址，这个地址在上面计算过，直接写入即可： 1*(uintptr_t *)((uintptr_t)trampoLine + len + 1) = trampoJmpAddy; 现在就可以执行Detour操作来修改目标函数了，这里为了方便可以直接调用在上一期创建的myHook函数： 1myHook(toHook, ourFunct, len); 根据前面所讲执行完我们的Hook函数之后就可以返回 Trampoline 的地址： 1return trampoLine; 下面是完整的代码： 123456789101112131415161718void * TrampolineHook(void * toHook, void * ourFunct, int len)&#123; if (len &lt; 5) return NULL; void * trampoLine = VirtualAlloc(NULL, len + 5, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE); memcpy(trampoLine, toHook, len); uintptr_t trampoJmpAddy = ((uintptr_t)toHook - (uintptr_t)trampoLine) - 5; *(BYTE*)((uintptr_t)trampoLine + len) = 0xE9; *(uintptr_t *)((uintptr_t)trampoLine + len + 1) = trampoJmpAddy; Hook(toHook, ourFunct, len); return trampoLine;&#125; 2.Trampoline函数的实现这里我就拿经典的 FPS 游戏 AssaultCube 来举例，这个游戏的渲染是通过 OpenGL 中的 wglSwapBuffers 函数来实现的。通过 IDA 查看 ac_client.exe 中的 Imports 就能搜到此函数的依赖： 1004DA3E0 SDL_GL_SwapBuffers SDL 确认了是OpenGL库之后通过 IDA 打开 opengl32.dll 搜索 Exports 窗口中的 wglSwapBuffers 函数： 1wglSwapBuffers 6923D080 362 双击进入此函数查看函数声明，因为不修改函数内部逻辑所以不用分析函数实现： 1int __stdcall wglSwapBuffers(HDC hDC); 可以看到 stdcall 调用约定，返回类型为 int ，接受一个HDC类型参数的函数。那么我们通过 typedef 定义一个函数指针类型 wglSwapBuffers ，再声明一个全局函数指针变量用来存储原始函数的地址和 Trampoline 地址： 12typedef int(__stdcall* p_wglSwapBuffers)(HDC hDC);p_wglSwapBuffers o_wglSwapBuffers; 创建我们的Hook函数用来“替代”原始的 wglSwapBuffers ，每次调用 wglSwapBuffers 时会先调用我们的Hook函数。在 Hook 函数中先执行一段自己想要的代码最后再跳转到 Trampoline 函数： 12345int __stdcall hook_wglSwapBuffers(HDC hDC)&#123; //自己的代码 return o_wglSwapBuffers(hDC); //跳转到 Trampoline 函数&#125; 这样以来我们就写完了Hook函数，之后在我们的线程创建处要调用此钩子函数之前先把原始函数 wglSwapBuffers 的地址存放到之前声明的 o_wglSwapBuffers 当中： 1o_wglSwapBuffers = (p_wglSwapBuffers)GetProcAddress(GetModuleHandle(L&quot;opengl32.dll&quot;), &quot;wglSwapBuffers&quot;); //自动获取原始 wglSwapBuffers 的地址 然后就可以正常调用我们的 TrampolineHook 函数了，最重要的一点是要把此函数返回的新内存地址（Trampoline函数地址）赋值给 o_wglSwapBuffers 变量。这样就能实现完整的Hook了，要是这里不改 o_wglSwapBuffers 变量的值，一直保持原始函数地址的话会无限递归导致栈溢出程序崩溃： 1o_wglSwapBuffers = (p_wglSwapBuffers)mem::TrampolineHook((void*)o_wglSwapBuffers, (void*)hook_wglSwapBuffers, 5); 在游戏中注入线程之后通过 Cheat Engine 查看 wglSwapBuffers 函数： 12345678OPENGL32.dll+3D07D - CC - int 3 OPENGL32.dll+3D07E - CC - int 3 OPENGL32.dll+3D07F - CC - int 3 OPENGL32.dll+3D080 - E9 C644BA19 - jmp AssaultCube_TrampolineHook.dll+1154B ;这里被Hook了OPENGL32.dll+3D085 - 83 E4 F8 - and esp,-08 &#123; 248 &#125;OPENGL32.dll+3D088 - 83 EC 14 - sub esp,14 &#123; 20 &#125;OPENGL32.dll+3D08B - 53 - push ebx 加个断点一步步执行就能调转到Hook函数： 1234567891011AssaultCube_TrampolineHook.dll+158CC - CC - int 3 AssaultCube_TrampolineHook.dll+158CD - CC - int 3 AssaultCube_TrampolineHook.dll+158CE - CC - int 3 AssaultCube_TrampolineHook.dll+158CF - CC - int 3 AssaultCube_TrampolineHook.dll+158D0 - 55 - push ebp ;Hook函数开始处AssaultCube_TrampolineHook.dll+158D1 - 8B EC - mov ebp,espAssaultCube_TrampolineHook.dll+158D3 - 81 EC 8C010000 - sub esp,0000018C &#123; 396 &#125;AssaultCube_TrampolineHook.dll+158D9 - 53 - push ebxAssaultCube_TrampolineHook.dll+158DA - 56 - push esiAssaultCube_TrampolineHook.dll+158DB - 57 - push edi Visual Studio 的调试器显示了所有变量的地址，Cheat Engine 调转到蹦床函数的地址就能看到新创建的内存空间： 123456700FFFFFF - - ?? 01000000 - 8B FF - mov edi,edi ;Trampoline 函数开始处执行原始指令01000002 - 55 - push ebp01000003 - 8B EC - mov ebp,esp01000005 - E9 7BD05360 - jmp OPENGL32.dll+3D085 ;跳转回原函数后续0100000A - 00 00 - add [eax],al 对此产生迷惑可以通过 Visual Studio 和 Cheat Engine进行配合调试一步步执行代码进行学习。 3.完整代码下面是完整带注释的代码可自行实践学习： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135// 获取游戏主模块的基址，用于后续计算游戏内存中各功能的地址uintptr_t baseAddress = (uintptr_t)GetModuleHandle(L&quot;ac_client.exe&quot;);// 获取OpenGL模块的基址，用于定位图形API函数uintptr_t openglAddress = (uintptr_t)GetModuleHandle(L&quot;opengl32.dll&quot;);// 定义函数指针类型，用于存储原始的wglSwapBuffers函数// __stdcall是Windows API常用的调用约定，确保参数从右到左入栈，由被调用者清理栈typedef int(__stdcall* p_wglSwapBuffers)(HDC hDC);// 声明一个函数指针，将用于保存原始的wglSwapBuffers函数地址p_wglSwapBuffers o_wglSwapBuffers;// 自定义的wglSwapBuffers钩子函数，在每帧渲染完成后被调用// 参数hDC是设备上下文句柄，标识了要交换缓冲区的窗口int __stdcall hook_wglSwapBuffers(HDC hDC)&#123; // 声明三个布尔变量，用于跟踪各个作弊功能的开关状态 bool bHealth = false, bAmmo = false, bRecoil = false; // 计算玩家对象的基址，通过游戏基址加上固定偏移0x10f4f4 uintptr_t playerBase = baseAddress + 0x10f4f4; // 使用多级指针寻址找到玩家血量的内存地址，偏移为0xf8 uintptr_t healthPtr = mem::findDMMAddy(playerBase, &#123; 0xf8 &#125;); // 使用多级指针寻址找到玩家弹药的内存地址，偏移链为0x374-&gt;0x14-&gt;0x0 uintptr_t ammoPtr = mem::findDMMAddy(playerBase, &#123; 0x374,0x14,0x0 &#125;); // 设置要写入的新值为1337，用于修改血量和弹药 int newValue = 1337; // 检测小键盘1键是否被按下（按一次切换一次状态） // GetAsyncKeyState返回值的最低位(0x1)表示按键是否在上次调用后被按下 if (GetAsyncKeyState(VK_NUMPAD1) &amp; 1) &#123; // 切换无限血量功能的开关状态 bHealth = !bHealth; &#125; // 检测小键盘2键是否被按下 if (GetAsyncKeyState(VK_NUMPAD2) &amp; 1) &#123; // 切换无限弹药功能的开关状态 bAmmo = !bAmmo; &#125; // 检测小键盘3键是否被按下 if (GetAsyncKeyState(VK_NUMPAD3) &amp; 1) &#123; // 切换无后座力功能的开关状态 bRecoil = !bRecoil; if (bRecoil) &#123; // 如果启用无后座力，则使用NOP指令(0x90)覆盖游戏中处理后座力的代码 // 这会使游戏在执行到这段代码时不做任何操作，从而消除后座力 mem::nopPatch((BYTE*)(baseAddress + 0x63786), 10); &#125; else &#123; // 如果禁用无后座力，则恢复原始的后座力处理代码 // 这段十六进制代码是游戏原本用于计算后座力效果的指令 mem::writePatch((BYTE*)(baseAddress + 0x63786), (BYTE*)(&quot;\\x50\\x8d\\x4c\\x24\\x1c\\x51\\x8b\\xce\\xff\\xd2&quot;), 10); &#125; &#125; // 检查玩家基址是否有效，防止在玩家不存在时进行内存操作导致崩溃 if (playerBase) &#123; // 如果无限血量功能已启用 if (bHealth) &#123; // 将新值(1337)写入到玩家血量地址，4表示写入4个字节(int类型大小) mem::writePatch((BYTE*)healthPtr, (BYTE*)&amp;newValue, 4); &#125; // 如果无限弹药功能已启用 if (bAmmo) &#123; // 将新值(1337)写入到玩家弹药地址 mem::writePatch((BYTE*)ammoPtr, (BYTE*)&amp;newValue, 4); &#125; &#125; // 调用原始的wglSwapBuffers函数完成缓冲区交换，确保游戏正常显示 // 这是钩子函数的最后一步，必须执行以保持游戏画面更新 return o_wglSwapBuffers(hDC);&#125;// 作弊功能的主线程函数，在DLL注入后由一个新线程执行DWORD WINAPI HackThread(HMODULE hModule)&#123; // 获取OpenGL32.dll中wglSwapBuffers函数的原始地址 // GetProcAddress用于从DLL中获取导出函数的地址 o_wglSwapBuffers = (p_wglSwapBuffers)GetProcAddress(GetModuleHandle(L&quot;opengl32.dll&quot;), &quot;wglSwapBuffers&quot;); // 使用蹦床钩子技术钩住wglSwapBuffers函数 // 将原始函数入口点的前5个字节替换为跳转指令，指向我们的hook_wglSwapBuffers函数 // 同时创建一个蹦床，保存原始函数的执行流程，返回值是可以调用原始函数的地址 o_wglSwapBuffers = (p_wglSwapBuffers)mem::TrampolineHook((void*)o_wglSwapBuffers, (void*)hook_wglSwapBuffers, 5); // 线程函数返回0，表示成功完成 return 0;&#125;// DLL入口点函数，当DLL被加载或卸载时由系统调用BOOL APIENTRY DllMain( HMODULE hModule, // 当前DLL的句柄 DWORD ul_reason_for_call, // 调用原因 LPVOID lpReserved // 保留参数 )&#123; // 根据不同的调用原因执行不同的操作 switch (ul_reason_for_call) &#123; case DLL_PROCESS_ATTACH: // 当DLL被加载到进程时 &#123; // 创建一个新线程来执行作弊功能 // 这样做是为了避免在DllMain中执行过多代码，因为DllMain有严格的限制 HANDLE hThread = nullptr; hThread = CreateThread(nullptr, 0, (LPTHREAD_START_ROUTINE)HackThread, hModule, 0, nullptr); // 如果线程创建成功，关闭线程句柄 // 我们不需要等待线程结束，所以可以立即关闭句柄 if (hThread) &#123; CloseHandle(hThread); &#125; &#125; case DLL_THREAD_ATTACH: // 当进程创建新线程时 case DLL_THREAD_DETACH: // 当线程退出时 case DLL_PROCESS_DETACH: // 当DLL从进程中卸载时 break; &#125; // 返回TRUE表示DLL初始化成功 return TRUE;&#125; 每一种Hook技术都有各自的优势和缺点，根据当时的情况来选择适合的技术才是最优解，后续我会继续补充其他的Hook技术。文章当中有需要更改的部分请在评论区指出或者联系我个人邮箱进行反馈，谢谢观看！","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://bhdtec.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C语言","slug":"C语言","permalink":"https://bhdtec.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"函数","slug":"函数","permalink":"https://bhdtec.com/tags/%E5%87%BD%E6%95%B0/"},{"name":"API","slug":"API","permalink":"https://bhdtec.com/tags/API/"}]},{"title":"函数Hook技术（Detour 转向）","slug":"post8","date":"2025-04-06T16:00:00.000Z","updated":"2025-04-11T17:33:30.000Z","comments":true,"path":"2025/04/07/post8/","permalink":"https://bhdtec.com/2025/04/07/post8/","excerpt":"","text":"今天分享函数Hook中的Detour技术，这项技术可以拦截修改或者完全替换目标函数的任意代码。我们最多接触的是Cheat Engine 当中的注入脚本功能，想把这个功能转换成C++程序的话只能通过detour（转向）来实现。下面这篇文章当中将介绍Hook技术的具体实现detour方法。 一，技术介绍1.Detour和Hook的区别在一些技术文章中总能看到两种术语，Detour和Hook。Hook是个更广泛的概念，一般是指拦截和修改正常执行程序的技术。Hook有多种实现方式，其中一个是detour。 那么Detour指的是通过跳转来转向原始程序的技术。先转向到另一段代码（此代码不一定是自己的代码，可以转向到进程内存的不同位置）然后通常会返回原始位置。 在实际编程开发当中，很多开发者会把这两种术语互换使用。尤其是在Windows开发领域。例如微软的Detour库本质上就是个函数hooking的库，但是名称却使用了”Detours”。 2.中间函数钩子（Mid Function Hooking）detour技术还有一种称呼叫 Mid Function Hooking 。我们Detour函数的第一个字节的话那这个就不叫中间函数钩子，只有Detour函数的剩下部分才叫中间函数钩子。 在函数的第一个字节放置Detour的话很容易被一些反作弊系统检测到。因为反作弊总不能时时刻刻检测整个函数的完整性，大部分反作弊会检测函数的前几行代码是否正确，所以中间钩子函数不会那么容易被检测。 3.外部钩子（External Hooking）在一些外部作弊软件当中会调用 Windows API 的 WriteProcessMemory 将代码写入到目标进程，通过相同的方式把原有的代码改成跳转代码（调转到自己的代码）来实现外部Detour（外部钩子）。 实现外部钩子要把汇编代码转换成指定的shellcode再写入目标进程，比起内部钩子要复杂得多。在内部使用钩子时就不需要这么麻烦。 4.被窃取的字节（Stolen Bytes）我们把detour写入到目标内存时被覆盖的字节称为“被窃取的字节”（Stolen Bytes）。我们需要彻底了解我们的detour到底覆盖了多少个字节，执行detour时要执行这些字节，不然栈和寄存器的值被破环的话可能导致程序崩溃。 这里的字节数时根据实际情况来决定的，比如我们要detour的地址处有一个长度为8字节的指令，我们的detour只占5字节。这种情况下需要把8个字节都作为被窃取的字节（5个字节为跳转指令，3个字节为空指令），在detour当中执行这完整的8字节指令。说白了就是不破坏原程序的指令确保程序不会崩溃。 5.代码洞（Code Caves）代码洞指的是目标进程中没有被进程使用的内存位置，就是已经被分配了但是进程不使用的内存。 使用detour时可以把代码写到这个内存位置，这样就不用再单独的分配内存了让自己的行为悄无声息。要使用代码洞的前提是内存页必须得有执行权限，可以使用 VirtualProtect 或 VirtualProtectEx 修改权限。但是创建了具有写入权限的进程句柄的话本身就没必要担心反作弊的问题了。 二，Hook函数（Detour）1.函数定义首先Hook函数需要一个要被Hook的原始函数地址，还需要一个我们自己定义的函数地址，最后需要覆盖字节的长度： 1bool Hook(void * toHook, void * ourFunct, int len); 先检查需要覆盖的字节长度是不是至少为5个字节，因为x86架构下完整的跳转指令（jmp）需要5个字节。其中第一个字节的操作码为0xE9，剩下4个字节为相对地址偏移量。如果长度小于5直接让函数返回false： 123if (len &lt; 5) &#123; return false;&#125; 长度没问题之后就要修改目标内存的保护属性，这个可以通过调用 Windows API 当中的 VirtualProtect 来目标函数的内存保护属性为可读写。同时通过此API的最后一个参数来保存原始保护属性到自定义的变量当中，等修改完之后方便恢复到原来的属性： 12DWORD curProtection;VirtualProtect(toHook, len, PAGE_EXECUTE_READWRITE, &amp;curProtection); 获取到可读写权限之后使用memset函数把目标地址处的需要覆盖的全部字节填充为0x90（Nop指令），目的是为了清楚原有的指令： 1memset(toHook, 0x90, len); 计算从原来的函数跳转到我们的函数需要的相对偏移量。x86架构中，相对偏移量是相对于原函数跳转指令之后的地址计算的，所以得减个5（跳转指令本身的长度）： 1DWORD relativeAddress = ((DWORD)ourFunct - (DWORD)toHook) - 5; 有了跳转地址之后可以写入跳转指令了，先在目标地址的第一个字节处写入0xE9（x86汇编中是无条件跳转JMP指令的操作码）。紧接着后面四个字节处写入前面算好的跳转地址： 12*(BYTE*)toHook = 0xE9;*(DWORD*)((DWORD)toHook + 1) = relativeAddress; 全部操作完整之后可以恢复内存的保护属性为原来的属性。调用 VirtualProtect 把内存页的保护属性恢复过来，最后返回结果true表示Hook成功： 123DWORD temp;VirtualProtect(toHook, len, curProtection, &amp;temp);return true; 下面是完整代码： 1234567891011121314151617181920bool myHook(void * toHook, void * ourFunct, int len) &#123; if (len &lt; 5) &#123; return false; &#125; DWORD curProtection; VirtualProtect(toHook, len, PAGE_EXECUTE_READWRITE, &amp;curProtection); memset(toHook, 0x90, len); DWORD relativeAddress = ((DWORD)ourFunct - (DWORD)toHook) - 5; *(BYTE*)toHook = 0xE9; *(DWORD*)((DWORD)toHook + 1) = relativeAddress; DWORD temp; VirtualProtect(toHook, len, curProtection, &amp;temp); return true;&#125; 2.Hook函数实现在我 GitHub 项目 Hitman5_InternalCheat 当中有使用此技术的片段，下面把这些片段提取出来做个介绍，更详细的查看项目源代码即可了解。 我在游戏中找到了关于子弹修改的关键函数（在杀手5逆向分析系列教程中有讲），下面是此函数写入子弹数值部分的汇编代码： 12345678910.text:006F5C70 push ebp.text:006F5C71 mov ebp, esp.text:006F5C73 sub esp, 1Ch.text:006F5C76 mov ax, [ebp+currentAmmo].text:006F5C7A push ebx.text:006F5C7B push esi.text:006F5C7C mov esi, ecx.text:006F5C7E mov edx, [esi].text:006F5C80 mov [esi+316h], ax ; 此处通过ax寄存器写入子弹数.text:006F5C87 mov eax, [edx+180h] 我在写入子弹的位置进行了Hook（此地址处006F5C80），下面是我要修改的Hook函数实现： 12345678910111213141516171819void __declspec(naked) hook::ammoFunc() &#123; //每次调用更新子弹代码就修改子弹数为999 __asm &#123; push ecx ;先存储ecx寄存器防止程序崩溃 mov ecx, [esi + 0x5E6] cmp ecx, 2 ;判断是敌方还是本人 je code ;是敌方就跳转到原始指令 mov ax, 0x3E7 ;是本人就把999存到ax当中 mov[esi + 0x00000316], ax ;修改子弹数为999 pop ecx ;恢复原来的ecx寄存器 jmp ammoBackAddy ;跳转到原程序后续代码处 code : ;原代码 mov[esi + 0x00000316], ax pop ecx jmp ammoBackAddy &#125;&#125; 先查看并存储目标位置的原始指令包括机器码： 1HMA.exe+2F5C80 -&gt; 66 89 86 16 03 00 00 == mov [esi+00000316],ax 可以看到机器码总共占7个字节，也就是说要覆盖的长度为7个字节。目标地址为模块基址加上偏移量 0x2F5C80。原程序的下一行代码地址为目标地址加上被窃取的字节长度： 123int ammoLen = 7;void* ammoDst = (void*)(modBaseAddy + 0x2F5C80);ammoBackAddy = (DWORD)ammoDst + ammoLen; 有了这些信息之后可以直接调用Hook函数来进行真正的Hook了： 1mem::myHook(ammoDst, hook::ammoFunc, ammoLen); 3.恢复Hook函数我们想要结束Hook的话需要把之前被窃取的字节恢复成原来的模样才行。这里可以写一段修改内存机器码的函数，接受的参数为目标地址，修改内容和大小： 1234567void mem::writePatch(BYTE* dst, BYTE* src, unsigned int size)&#123; DWORD oldPertec = 0; VirtualProtect((BYTE*)dst, size, PAGE_EXECUTE_READWRITE, &amp;oldPertec); memcpy((BYTE*)dst, (BYTE*)src, size); VirtualProtect((BYTE*)dst, size, oldPertec, &amp;oldPertec);&#125; 同样的先存储原来的内存保护属性，再把内存保护属性修改为可读写，把给定的修改内容写进去，再把内存保护属性恢复回来。 下面调用此函数来恢复被窃取的字节为原来的机器码： 1mem::writePatch((BYTE*)ammoDst, (BYTE*)&quot;\\x66\\x89\\x86\\x16\\x03\\x00\\x00&quot;, ammoLen); 这样以来程序就变回了原来的代码。 上面介绍的这种Detour方法是Hook技术当中的一种技术，后面会陆续分享更多的Hook技术。可以把存储原始指令的机制整合到Hook函数当中使用会更加方便。文章当中有需要更改的部分请在评论区指出或者联系我个人邮箱进行反馈，谢谢观看！","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://bhdtec.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C语言","slug":"C语言","permalink":"https://bhdtec.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"函数","slug":"函数","permalink":"https://bhdtec.com/tags/%E5%87%BD%E6%95%B0/"},{"name":"API","slug":"API","permalink":"https://bhdtec.com/tags/API/"}]},{"title":"游戏函数调用技术","slug":"post7","date":"2025-03-31T16:00:00.000Z","updated":"2025-04-07T17:11:30.000Z","comments":true,"path":"2025/04/01/post7/","permalink":"https://bhdtec.com/2025/04/01/post7/","excerpt":"","text":"今天分享的新技术是怎么调用游戏当中的函数，这就引出一个新问题，为啥要调用游戏中的函数？虽然我们可以自己为游戏编写任何形式的函数来执行，但是有一部分复杂的函数是很难自己去写的。比如射线检测函数，游戏中成功定位到此函数的话就没必要单独再编写一份复杂的射线检测了，直接调用自带的函数即可。 一，技术解析这种技术一般被称为 “函数指针重定向” ，这项技术允许我们直接调用游戏内存中的函数，就跟调用自己写的函数一样。这项技术通常用于游戏模组开发，游戏外挂开发，调试工具开发等技术。以下是C++形式的大致原理讲解： 12345678//通过typedef定义函数指针typedef cvar_t*(__cdecl * _Cvar_Get)(const char *var_name, const char *var_value, int flags);//将函数指针进行实例化，将其内存指向指定地址_Cvar_Get Cvar_Get = (_Cvar_Get)0x043F688;//调用函数Cvar_Get(&quot;cl_gamepath&quot;, &quot;OpenArena&quot;, 0); 1.函数指针的定义第一行代码定义了一个新的类型，这个类型是一个函数指针名为 _Cvar_Get 。函数指针在C++当中的一般语法为： 1返回类型 (调用约定 *指针名称)(参数列表) 这里的 cvar_t* 是函数的返回类型，说明函数会返回一个指向 cvar_t 结构体的指针。在IDA Pro的伪代码当中的第一行就能看到函数的返回类型。比如知道了游戏中的某一个需要调用的函数返回类型，那么调用时可以把返回类型写成IDA中看到的类型。 __cdecl 指的是函数的调用约定，调用约定是个很重要的概念，参数传递和栈的清理都是由这个来决定的。以下是常见的调用约定： cdecl —— 参数通过栈来传递（从右向左入栈），调用者负责清理栈（谁调用谁清理） stdcall —— 参数通过栈来传递（从右向左入栈），被调用函数负责清理栈（调用的不负责清理） fastcall —— 部分参数通过寄存器传递（前2-4个参数）剩下的从右向左入栈，被调用函数负责清理栈（调用的不负责清理）。通过寄存器传递的目的是提高性能，相当于是stdcall的进化版。 thiscall —— this指针通过特定的寄存器传递（x86是ECX）剩下的从右向左入栈，被调用函数负责清理栈（调用的不负责清理） 后面的 * 是用来修饰后面的定义类型，后面的 _Cvar_Get 是我们定义的新类型名称，加上星号的修饰就表示这是个指针类型。 1(const char *var_name, const char *var_value, int flags) 最后一个括号当中的是函数的参数列表，包含三个参数（两个字符串和一个整数）。 那么最前面加的 typedef 主要作用是告诉编译器我们在定义一个新的类型名称而不是声明变量。所以整行的意思如下： 1typedef cvar_t*(__cdecl * _Cvar_Get)(const char *var_name, const char *var_value, int flags); 创建一个名为 _Cvar_Get 的新类型，这是个函数指针类型，指向的这个函数使用 __cdecl 调用约定并且接受三个参数（两个 const char 和一个 int ），最后返回一个 cvar_t 类型的值。 2.函数指针的赋值我们来看第二行代码，主要操作时函数指针变量的声明和赋值： 1_Cvar_Get Cvar_Get = (_Cvar_Get)0x043F688; _Cvar_Get 是我们在前面定义的类型名，后面的 Cvar_Get 是新定义的变量名（ _Cvar_Get 类型的函数指针变量），0x043F688 是个内存地址（游戏内函数的内存地址）， (_Cvar_Get) 是类型转换把内存地址转换为函数指针类型。 通俗一点来讲在实际用途当中，通过分析IDA中函数的参数类型，返回值和调用约定。再使用 typedef 将这个原型定义为一个函数指针类型，然后声明一个该类型的变量指向IDA或者动态调试找到的函数内存地址。这样就可以像调用普通C++函数一样调用游戏内部函数了。 3.函数指针的调用下面来详细解释第三行代码： 1Cvar_Get(&quot;cl_gamepath&quot;, &quot;OpenArena&quot;, 0); 这行代码是对函数指针的调用，看起来跟普通函数的调用一样，但是实际上这里调用的是指向内存地址 0x043F688 的函数。 1.执行过程是先找到 Cvar_Get 变量，一看是个函数指针，那就获取该指针指向的内存地址（ 0x043F688 ）。 2.根据 __cdecl 调用约定，参数从右向左入栈，首先将第三个参数 0 压入栈，然后把第二个参数 OpenArena 的地址压入栈，最后把第三个参数 cl_gamepath 的地址压入栈。 3.程序跳转到地址为 0x043F688 处执行那里的代码，执行过程中被调用函数可以通过栈来访问传入的三个参数，函数执行完之后函数返回一个 cvar_t* 类型的指针。 4.因为是 __cdecl 调用约定，所以调用者负责清理栈。 4.举例说明假设我们在IDA中发现了一个我们需要的游戏内部函数，这个函数负责创建爆炸效果： 12345函数地址: 0x00487A2C函数名: Game_CreateExplosion传入参数: float x, float y, float z, float radius, int damage返回值: void调用约定: __cdecl 根据上面内容，实现方式如下： 12345678// 1. 定义函数类型typedef void(__cdecl *_Game_CreateExplosion)(float x, float y, float z, float radius, int damage);// 2. 创建函数指针实例_Game_CreateExplosion Game_CreateExplosion = (_Game_CreateExplosion)0x00487A2C;// 3. 调用游戏内部函数Game_CreateExplosion(100.0f, 200.0f, 50.0f, 30.0f, 100); 因为我们的函数指针定义和游戏内的函数内存布局是完全匹配的，调用约定也必须跟游戏内部的保持一直，所以CPU会调转到游戏代码的正确位置执行原始代码不会导致游戏崩溃。 二，实际演示1.无参函数的调用（1）示范程序编译为了实现上面的技术，可以自己写一段程序来模拟游戏中的函数。以下一段无参函数调用源码： 123456789101112131415161718192021222324252627#include &lt;iostream&gt;#include &lt;Windows.h&gt;void printword_A() //第一个无参函数&#123; std::cout &lt;&lt; &quot;This is A !!!\\n&quot;; //打印字符串&#125;void printword_B() //第二个无参函数&#123; std::cout &lt;&lt; &quot;This is B !!!\\n&quot;; //打印字符串&#125;int main()&#123; while (true) //无限循环用来获取按键反应 &#123; if (GetAsyncKeyState(VK_F1) &amp; 1) //按F1打印字符串 &#123; printword_A(); &#125; if (GetAsyncKeyState(VK_F2) &amp; 1) //按F2打印字符串 &#123; printword_B(); &#125; &#125;&#125; Visual Studio 在编译时得把优化选项全部关闭，不然编译出来的汇编代码都是彻底优化之后的代码整体调用都会发生变化。在项目设置中进行关闭： （2）调试反汇编编译之后的程序通过x32dbg进行调试，以下是main函数部分的反汇编代码： 12345678910111213141516171819202122push ebpmov ebp,espmov eax,1test eax,eaxje hooktestproject1.F1107Apush 70call dword ptr ds:[&lt;GetAsyncKeyState&gt;]movsx ecx,axand ecx,1je hooktestproject1.F11062call &lt;hooktestproject1.?printword_A@@YAXXZ&gt;nop push 71call dword ptr ds:[&lt;GetAsyncKeyState&gt;]movsx edx,axand edx,1je hooktestproject1.F11078call &lt;hooktestproject1.?printword_B@@YAXXZ&gt;nop jmp hooktestproject1.F11043pop ebpret 可以看到调用两个 printword 函数call之前是没有进行任何传参操作，就可以断定此函数是无参函数。下一部判断返回类型，在call指令出下断点然后按快捷键触发断点，进入函数内部，以下是函数内部实现： 123456789push ebp ;通过栈保存ebpmov ebp,esppush hooktestproject1.F13140mov eax,dword ptr ds:[&lt;?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A&gt;]push eax ;传字符串并调用printf函数call &lt;hooktestproject1.??$?6U?$char_traits@D@std@@@std@@YAAAV?$basic_ostream@DU?$char_traits@D@std@@@0@AAV10@PBD@Z&gt;add esp,8 ;栈平衡pop ebp ;恢复ebpret 调用完 printf 函数之后进行了栈平衡操作，这里的栈平衡是针对 printf 函数的两个参数，并没有看到任何返回值。在调用者部分能看到调用 printword 函数后有个 nop 操作，这是由于没有任何参数通过栈来传递也就是没有必要清理栈就用了 nop 来代替。通过上述分析就可以确定这是一个调用约定为 cdecl 的无返回值的函数。 （3）Hook程序已经确定了我们需要调用函数的返回类型，调用约定，参数情况。可以通过 DLL hook 程序的方式来调用这个函数。下面需要找到的是函数地址值，x32dbg 下双击进入对应的call指令后，点击函数第一行后在下方会显示函数的偏移地址： 注意：这里要获取的不是call指令处的地址而是函数地址（call之后的函数首行地址） 因为函数的地址不是静态地址，所以调用时需要先获取模块地址再加上偏移地址就能定位函数地址，下面是实现方法： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263// 定义函数指针类型，用于调用目标程序中的函数typedef void(__cdecl* _PrintA)(); // PrintA函数的函数指针类型定义typedef void(__cdecl* _PrintB)(); // PrintB函数的函数指针类型定义// 获取当前进程的基地址uintptr_t modbase = (uintptr_t)GetModuleHandleA(NULL);// 通过基地址加偏移量定位目标函数_PrintA PrintA = (_PrintA)(modbase + 0x105C); // 初始化PrintA函数指针，指向基地址+0x105C的位置_PrintB PrintB = (_PrintB)(modbase + 0x1072); // 初始化PrintB函数指针，指向基地址+0x1072的位置/** * 注入线程的主函数 * @param hModule 当前DLL模块句柄 * @return 线程退出码 */DWORD WINAPI HackThread(HMODULE hModule)&#123; // 无限循环监听按键 while (true) &#123; if (GetAsyncKeyState(VK_NUMPAD7) &amp; 1) // 检测小键盘7是否被按下(按下一次) &#123; PrintA(); // 调用目标程序中的PrintA函数 &#125; if (GetAsyncKeyState(VK_NUMPAD8) &amp; 1) // 检测小键盘8是否被按下(按下一次) &#123; PrintB(); // 调用目标程序中的PrintB函数 &#125; if (GetAsyncKeyState(VK_END) &amp; 1) // 检测End键是否被按下(按下一次) &#123; break; // 结束循环，准备退出线程 &#125; &#125; // 释放DLL并退出线程 FreeLibraryAndExitThread(hModule, 0); return 0; // 返回退出码(此行代码实际上不会执行，因为FreeLibraryAndExitThread会直接终止线程)&#125;/** * DLL入口点函数 * @param hModule DLL模块句柄 * @param ul_reason_for_call 调用原因 * @param lpReserved 保留参数 * @return 是否成功 */BOOL APIENTRY DllMain(HMODULE hModule, DWORD ul_reason_for_call, LPVOID lpReserved)&#123; switch (ul_reason_for_call) &#123; case DLL_PROCESS_ATTACH: // 当DLL被加载到进程时 // 创建一个新线程执行HackThread函数，避免在DllMain中执行过多操作 CreateThread(nullptr, 0, (LPTHREAD_START_ROUTINE)HackThread, hModule, 0, nullptr); break; default: break; &#125; return TRUE; // 返回成功&#125; 2.有参函数的调用（1）示范程序修改把第二个函数改成带参的并且打印输出特定的字符串： 1234567void printword_B(const char* word) //第二个带参函数&#123; std::cout &lt;&lt; word &lt;&lt; &quot;\\n&quot;; //打印输入字符串&#125;printword_B(&quot;Hello World&quot;); //调用 （2）调试反汇编x32dbg 跳转到 main 函数查看第二个函数的汇编代码： 1234567891011push 62call dword ptr ds:[&lt;GetAsyncKeyState&gt;]movsx edx,axand edx,1je hooktestproject_1.2C108Fpush hooktestproject_1.2C315C ;通过栈传参call &lt;hooktestproject_1.void __cdecl printword_B(char const *)&gt; ;第二个函数的调用add esp,4 ;调用者平衡栈jmp hooktestproject_1.2C1053pop ebpret 汇编代码可以知道 函数B 通过栈传递了一个参数，查看此参数的地址值发现是一个以0结尾的字符串： 调用完 函数B 之后调用者平衡了栈，查看函数B内部也看不到任何返回值。因此这个函数的调用约定为 cdecl ，有一个字符串参数并无返回值。 （3）Hook程序修改一下我们的Hook程序把 函数B 改成带参的类型，把原有的字符串改成自己想要的字符串： 123456789101112131415161718192021222324252627282930313233343536typedef void(__cdecl* _PrintA)(); // 定义无参数函数指针类型，用于调用printword_A函数typedef void(__cdecl* _PrintB)(const char * changeWord); // 定义带字符串参数的函数指针类型，用于调用printword_B函数uintptr_t modbase = (uintptr_t)GetModuleHandleA(NULL); // 获取当前进程的基地址// 通过基地址加偏移量获取目标函数的实际地址_PrintA PrintA = (_PrintA)(modbase + 0x1000); // 初始化PrintA函数指针，指向printword_A函数_PrintB PrintB = (_PrintB)(modbase + 0x1020); // 初始化PrintB函数指针，指向printword_B函数// 注入线程的主函数DWORD WINAPI HackThread(HMODULE hModule)&#123; // 无限循环监听按键 while (true) &#123; if (GetAsyncKeyState(VK_NUMPAD7) &amp; 1) // 检测小键盘7是否被按下(按下一次) &#123; PrintA(); // 调用目标程序中的printword_A函数 &#125; if (GetAsyncKeyState(VK_NUMPAD8) &amp; 1) // 检测小键盘8是否被按下(按下一次) &#123; // 直接传递字符串字面量，这可能会导致问题，因为字符串存储在DLL内存空间 // 更安全的做法是在目标进程空间分配内存并复制字符串 PrintB(&quot;Hack Success !&quot;); // 调用目标程序中的printword_B函数并传入自定义字符串 &#125; if (GetAsyncKeyState(VK_END) &amp; 1) // 检测End键是否被按下(按下一次) &#123; break; // 结束循环，准备退出线程 &#125; &#125; // 释放DLL并退出线程 FreeLibraryAndExitThread(hModule, 0); return 0; // 返回退出码(此行代码实际上不会执行，因为FreeLibraryAndExitThread会直接终止线程) 展示效果图： 3.thiscall函数的调用（1）示范程序修改为了调用thiscall创建一个玩家类，里面写一个减生命值函数。创建实例，把实例地址传递给一个变量再通过此变量来调用成员函数和传递参数： 12345678910111213141516171819202122232425262728293031323334353637#include &lt;iostream&gt;#include &lt;Windows.h&gt;class player&#123;public: void subHealthFunc(int damage) &#123; health -= damage; std::cout &lt;&lt; &quot;damage is : &quot; &lt;&lt; damage &lt;&lt; &quot;\\n&quot;; &#125; int health;&#125;;player* l_player;int main()&#123; player player_sam; l_player = &amp;player_sam; l_player-&gt;health = 1000; while (true) //无限循环用来获取按键反应 &#123; if (GetAsyncKeyState(VK_NUMPAD1) &amp; 1) //按F1打印字符串 &#123; std::cout &lt;&lt; &quot;health is : &quot; &lt;&lt; l_player-&gt;health &lt;&lt; &quot;\\n&quot;; &#125; if (GetAsyncKeyState(VK_NUMPAD2) &amp; 1) //按F2打印字符串 &#123; l_player-&gt;subHealthFunc(10); std::cout &lt;&lt; &quot;new health is : &quot; &lt;&lt; l_player-&gt;health &lt;&lt; &quot;\\n&quot;; &#125; &#125;&#125; （2）调式反汇编x32dbg 跳转到 main 函数查看成员函数调用部分的汇编代码： 12345678push 62call dword ptr ds:[&lt;GetAsyncKeyState&gt;]movsx edx,axand edx,1je hooktestproject_1.1C1125push A ;第二个参数（damage）mov ecx,dword ptr ds:[&lt;class player *l_player&gt;] ;第一个参数this指针call &lt;hooktestproject_1.public: void __thiscall player::subHealthFunc(int)&gt; 在实际情况下大部分通过ecx传递第一个参数的大概率为thiscall调用约定，还可以发现此函数有两个参数，函数内部也没有返回值。 （3）Hook程序123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// 定义一个玩家结构体，用于管理玩家相关的功能和数据struct _player&#123; // 定义一个函数指针类型，表示造成大量伤害的成员函数 // __thiscall 表示这是一个C++类成员函数的调用约定 // 参数1: this指针，指向对象实例 // 参数2: 伤害值 typedef void(__thiscall* _bigDamage)(void* ptr_this, int damage); // 声明一个函数指针，将用于存储目标函数的地址 _bigDamage bigdamage; // 存储伤害值的变量 int damage; // 从内存地址0x1c53c8获取this指针 // 这个地址可能存储了游戏中玩家对象的指针 void* ptr_this = *(void**)0x1c53c8;&#125; player; // 创建一个全局player实例// 获取当前进程的基址，用于计算函数的实际地址uintptr_t modbase = (uintptr_t)GetModuleHandleA(NULL);// DLL注入后的主线程函数DWORD WINAPI HackThread(HMODULE hModule)&#123; // 初始化bigdamage函数指针 // 通过基址加偏移量0x1000计算出目标函数的实际地址 player.bigdamage = (_player::_bigDamage)(modbase + 0x1000); // 主循环，持续检测按键输入 while (true) &#123; // 检测是否按下小键盘7键 if (GetAsyncKeyState(VK_NUMPAD7) &amp; 1) &#123; // 调用bigdamage函数，传入this指针和伤害值100 // 这将对游戏中的玩家造成100点伤害 player.bigdamage(player.ptr_this, 100); &#125; // 检测是否按下End键，如果按下则退出循环 if (GetAsyncKeyState(VK_END) &amp; 1) &#123; break; &#125; &#125; // 释放DLL并退出线程 FreeLibraryAndExitThread(hModule, 0); return 0;&#125; 展示效果图： 好了现在你已经掌握了此技术，可以随意调用自己所需要的程序函数了。这种技术最主要的还是以分析为主，找出函数的调用约定，参数，返回值就能任意调用了。文章当中有需要更改的部分请在评论区指出或者联系我个人邮箱进行反馈，谢谢观看！","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://bhdtec.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C语言","slug":"C语言","permalink":"https://bhdtec.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"函数","slug":"函数","permalink":"https://bhdtec.com/tags/%E5%87%BD%E6%95%B0/"},{"name":"API","slug":"API","permalink":"https://bhdtec.com/tags/API/"}]},{"title":"射线检测函数的分析","slug":"post6","date":"2025-03-15T16:00:00.000Z","updated":"2025-03-20T06:46:26.000Z","comments":true,"path":"2025/03/16/post6/","permalink":"https://bhdtec.com/2025/03/16/post6/","excerpt":"","text":"大部分FPS作弊程序都有一些必不可少的功能，包括自瞄，透视，自动扳机等。在研究这项技术时我发现这些技术的关键点在于调用游戏中的射线检测函数。下面我将介绍一些常见游戏引擎当中的射线检测功能，以及简单的讲解射线检测的实现原理。 一，射线检测的介绍基本原理首先射线就是一条从一个点出发一直延长的线，跟现实中的激光一样但是在游戏中是无终点并且一般是不可见的。这条从一个点射出来的线碰到障碍物（开发者定义的障碍物）就会停止。在FPS游戏从始至终一直会使用这个射线来检测与游戏场景当中一些特定物体的交互情况。 在游戏中射线检测有很多的用途，比如玩家前面有一扇门，游戏开发者设定按下E键会开门。按照一般逻辑我们只有接近门然后视角对着门按E才能开门。那么怎么知道玩家是否在门的附近，而且是否面对着门呢？ 当然就是用射线检测来实现这一功能。这个功能跟蝙蝠的超声波一样，从玩家的准星当中发出一条直线类似于超声波，等遇到前方的门或者其他物品之后这条射线就停止运动并返回它碰到的物品信息。在每一帧一直检测玩家的准星发射的射线碰到的物品以及距离，再根据相应的物品做出相应的操作。 在一部分游戏中摄像机发射的Line Trace（射线检测）和枪械的弹道是不一样的，尤其是在一些第三人称射击游戏当中。以下是具体步骤： 确定的起点和方向发射一条射线 计算射线与场景当中物体的相交点 返回这部分相交信息，比如是否相交，相交点（位置，距离，物体）等等 二，Unity引擎当中的射线检测1.Ray射线的定义首先使用射线检测之前就必须要创建一条射线，Unity直接提供了这条射线的结构体。这是一条无穷的线，开始于origin点，朝向direction方向。在Unity的API当中提供了一个叫 Ray 的结构体，定义如下： 1public Ray(Vector3 origin, Vector3 direction); origin是射线的起点位置，direction是射线的方向。 2.Ray的数学表达Ray 用方程式表达形式如下：$$P(t)&#x3D;O+t⋅D$$ P(t) 是射线上的点 O 是射线起点（ray.origin） D 是射线方向（ray.direction） t 是参数（距离，t 大于等于 0） 3.使用方法有常见的两种使用方法，一个是从玩家摄像机发射跟着鼠标的方向来检测的射线，还有一种是从玩家或者物体位置向前发射的射线： 1234// 创建从摄像机到鼠标对准位置的射线Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);// 创建从物体位置向前的射线Ray forwardRay = new Ray(transform.position, transform.forward); 4.射线碰撞捕获的信息Unity会通过 RaycastHit 结构体来返回一堆所需要的信息，这个结构体包含了关于此射线碰撞的所有重要数据： 1234567Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);RaycastHit hit;if (Physics.Raycast(ray, out hit, 100.0f))&#123; // 现在可以访问 hit 中的所有信息&#125; collider —— 射线击中的碰撞体 transform —— 射线击中碰撞体所属于的 Transform 组件 rigidbody —— 射线击中碰撞体关联的刚体（存在的情况下） point —— 射线与碰撞体相交的精准 Vec3 位置 normal —— 射线碰撞处的表面法线（向量为单位） distance —— 射线起点到相交点的距离 material —— 射线击中碰撞体的物理材质 textureCoord（ textureCoord2 ） —— 射线碰撞点在物体纹理上的UV坐标（Vector2） triangleIndex —— 射线击中的三角形索引（针对网格碰撞体 int） barycentricCoordinate —— 射线碰撞点在击中三角形内的中心坐标点（Vector2） 5.LayerMask的概念Unity当中的每一个游戏对象都会被分配到特定的层（Layer），Unity本身就提供了一些默认的层，比如Default,Ignore Raycast,Water,UI等等。用户自定义的层有第8层到31层（User Layers 8 -31 ）。 LayerMask实际上是个32位整数，其中每一位对应一个层。比如某一位为1就代表包含在掩码中，反之为0表示在掩码外。以下是通过代码获取指定 LayerMask ： 1LayerMask playerEnemyMask = LayerMask.GetMask(&quot;Player&quot;, &quot;Enemy&quot;); 一般的用法也很简单通过 Physics.Raycast 函数来实现，这个函数有多种用法可以通过查看官方文档来了解。这里只谈一些常用的用法： 1234567891011public LayerMask interactableLayers; //公开LayerMask类型void Update() //生命周期函数，每帧都会被调用&#123; Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition); //创建射线，方向为鼠标位置 RaycastHit hit; //用于存储射线击中物体的信息 // 只检测指定层的物体 if (Physics.Raycast(ray, out hit, 100.0f, interactableLayers)) &#123; Debug.Log(&quot;射线击中了指定层的物体: &quot; + hit.collider.gameObject.name); &#125;&#125; 代码解释： 每一帧 ( 通过 Update() ) 执行以下操作 从当前鼠标指向的位置射出一条射线 使用 Physics.Raycast( ) 检测射线是否击中指定物体 射线最远距离被限定为 100.0f 只检测 interactableLayers 指定层的物体 如果击中到了那就在控制台打印名称 6.在实际游戏中的引用下面展示在一般团队FPS当中的引用，实际情况肯定比这复杂多了。如何使用射线检测来识别准星指向的是敌人还是队友： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546using UnityEngine; //导入Unity核心命名空间public class TargetDetector : MonoBehaviour&#123; // 射线最大检测距离 public float detectionRange = 100f; // 当前玩家的队伍ID public int myTeamID = 1; // 1=蓝队，2=红队 void Update() //生命周期函数，每帧都会被调用 &#123; // 从相机中心发射射线 Ray ray = Camera.main.ViewportPointToRay(new Vector3(0.5f, 0.5f, 0)); RaycastHit hit; //收集击中信息 // 执行射线检测 if (Physics.Raycast(ray, out hit, detectionRange)) &#123; // 尝试获取目标的队伍组件 TeamMember targetTeam = hit.collider.GetComponent&lt;TeamMember&gt;(); if (targetTeam != null) &#123; // 判断是敌人还是队友 if (targetTeam.teamID == myTeamID) &#123; // 是队友 Debug.Log(&quot;指向的是队友: &quot; + targetTeam.playerName); &#125; else &#123; // 是敌人 Debug.Log(&quot;指向的是敌人: &quot; + targetTeam.playerName); &#125; &#125; &#125; &#125;&#125;// 简单的队伍成员组件public class TeamMember : MonoBehaviour&#123; public int teamID; // 1=蓝队，2=红队 public string playerName;&#125; 以上只是简单的FPS游戏当中的调用，射线检测还有一大堆用途可以实现不同的功能。其他方法可以通过官方教程来探索，这里只介绍对于FPS当中的准星射线检测部分方便后续逆向分析用。 三，Unreal引擎当中的射线检测1.通过蓝图实现UE引擎当中一般初学者使用的都是蓝图，在蓝图中可以搜到一些射线检测相关的API蓝图： (前缀：Multi) + 射线形状 + [后缀：ForObjects|ByChannel|ByProfile] 加上前缀Multi代表射线可以穿透多个物体，没有这个前缀的话碰到第一个对象射线就失效了。后面的射线形状代表可以定义多种形状的射线，比如线形，球形，胶囊形等等。后缀就是按特定的方式来筛选分别是按类类型，通道类型和预设类型。 UE5官方指南有详细的蓝图链接教程可以点击此教程来研究是如何实现的，以下是成品模板： 这里演示的 API 是 **Single Line Trace By Channel ** 只是对首个碰撞物体的检测（不会检测叠加的物体），命中物体之后会把物体的名称显示到屏幕上。 2.通过C++方式实现以下是通过C++的方式来实现跟Unity相似的对于不同队伍的射线检测判断。 （1）获取玩家视角通过C++实现其实跟Unity的概念上差不多，语法和实现方式稍有差别。首先要创建一个三维向量用来存储摄像机的位置，然后创建一个旋转器变量用来存储摄像机的旋转角度。之后通过函数获取摄像机的位置和旋转： 1234// 获取玩家视角FVector CameraLocation;FRotator CameraRotation;GetActorEyesViewPoint(CameraLocation, CameraRotation); （2）射线起点和终点射线的起点就是摄像机的位置，终点就是先把摄像机旋转转换为Vector向量再乘以1000.0f（用户自定义）就得到了从摄像机朝向扩展1000个单位的向量了，这个加上摄像机开始位置得到了射线的终点坐标： 123// 计算射线起点和终点FVector TraceStart = CameraLocation;FVector TraceEnd = CameraLocation + (CameraRotation.Vector() * 1000.0f); （3）执行射线检测先创建 FHitResult 结构体来存储射线检测结果（跟RaycastHit差不多），然后通过 LineTraceSingleByChannel 执行单次射线检测返回首个碰撞结果： 12345678// 执行射线检测bool bHit = GetWorld()-&gt;LineTraceSingleByChannel( //bHit返回是否击中了物体 HitResult, //存储射线检测的结果 TraceStart, //射线的起点 TraceEnd, //射线的终点 ECC_Visibility, //碰撞通道，这里使用的是可见性通道 FCollisionQueryParams() //碰撞查询参数，默认值); 再通过判断来处理 bHit 的检测结果： 123456// 处理检测结果if (bHit) //是否击中了物体&#123; AActor* HitActor = HitResult.GetActor(); //获取被射线击中的对象（Actor） if (HitActor) //确保获取到了对象 &#123; （4）获取队伍判断敌友在击中的对象身上找有没有 UTeamComponent 类型的组件，如果存在再继续判断是敌人还是队友： 1234// 获取目标的队伍组件UTeamComponent* TeamComponent = HitActor-&gt;FindComponentByClass&lt;UTeamComponent&gt;();if (TeamComponent) //检查是否成功找到了队伍组件&#123; 再通过击中玩家的队伍ID来判断是敌是友，之后把调试信息打印出来： 123456789101112131415int32 TargetTeamID = TeamComponent-&gt;TeamID; //访问队伍组件中的 TeamID 属性int32 MyTeamID = 1; // 假设玩家队伍ID为1if (TargetTeamID == MyTeamID) //比较队伍 ID 判断是敌是友&#123; // 是队友 GEngine-&gt;AddOnScreenDebugMessage(-1, 2.0f, FColor::Green, FString::Printf(TEXT(&quot;队友: %s&quot;), *HitActor-&gt;GetName()));//在屏幕上显示调试信息&#125;else&#123; // 是敌人 GEngine-&gt;AddOnScreenDebugMessage(-1, 2.0f, FColor::Red, FString::Printf(TEXT(&quot;敌人: %s&quot;), *HitActor-&gt;GetName()));//在屏幕上显示调试信息&#125; 那么整体工作流程就是先获取玩家摄像机的位置和朝向，再计算射线的起点和终点，之后执行射线检测检查是否击中了物体。如果击中了物体获取被击中的对象信息，从对象信息中找队伍组件，如果有队伍组件的话就比较队伍ID判断是敌是友，最后在屏幕上显示敌友信息。以下是简单但功能完整的UE射线检测代码（实际游戏比这复杂）： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657// 在头文件中声明UFUNCTION(BlueprintCallable, Category = &quot;Detection&quot;)void PerformLineTrace();// 在 CPP 文件中实现void AMyCharacter::PerformLineTrace()&#123; // 获取玩家视角 FVector CameraLocation; FRotator CameraRotation; GetActorEyesViewPoint(CameraLocation, CameraRotation); // 计算射线起点和终点 FVector TraceStart = CameraLocation; FVector TraceEnd = CameraLocation + (CameraRotation.Vector() * 1000.0f); // 射线检测结果 FHitResult HitResult; // 执行射线检测 bool bHit = GetWorld()-&gt;LineTraceSingleByChannel( HitResult, TraceStart, TraceEnd, ECC_Visibility, FCollisionQueryParams() ); // 处理检测结果 if (bHit) &#123; AActor* HitActor = HitResult.GetActor(); if (HitActor) &#123; // 获取目标的队伍组件 UTeamComponent* TeamComponent = HitActor-&gt;FindComponentByClass&lt;UTeamComponent&gt;(); if (TeamComponent) &#123; int32 TargetTeamID = TeamComponent-&gt;TeamID; int32 MyTeamID = 1; // 假设玩家队伍ID为1 if (TargetTeamID == MyTeamID) &#123; // 是队友 GEngine-&gt;AddOnScreenDebugMessage(-1, 2.0f, FColor::Green, FString::Printf(TEXT(&quot;队友: %s&quot;), *HitActor-&gt;GetName())); &#125; else &#123; // 是敌人 GEngine-&gt;AddOnScreenDebugMessage(-1, 2.0f, FColor::Red, FString::Printf(TEXT(&quot;敌人: %s&quot;), *HitActor-&gt;GetName())); &#125; &#125; &#125; &#125;&#125; 以上就是两大游戏引擎的射线检测功能分析，其他游戏引擎跟这两个引擎的检测方式大差不差，在逆向分析当中可以当作参考点来学习。文章当中有需要更改的部分请在评论区指出，谢谢观看！","categories":[{"name":"代码分析","slug":"代码分析","permalink":"https://bhdtec.com/categories/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"分析","slug":"分析","permalink":"https://bhdtec.com/tags/%E5%88%86%E6%9E%90/"},{"name":"函数","slug":"函数","permalink":"https://bhdtec.com/tags/%E5%87%BD%E6%95%B0/"},{"name":"API","slug":"API","permalink":"https://bhdtec.com/tags/API/"},{"name":"游戏引擎","slug":"游戏引擎","permalink":"https://bhdtec.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"}]},{"title":"杀手5逆向分析（四）","slug":"post5","date":"2025-03-07T16:00:00.000Z","updated":"2025-03-20T06:46:30.000Z","comments":true,"path":"2025/03/08/post5/","permalink":"https://bhdtec.com/2025/03/08/post5/","excerpt":"","text":"这一期分析游戏的得分系统，我原本以为得分系统是很简单的其实没有那么简单。因为游戏采用了单独加分减分机制最终得分会根据当时一段时间的各种分数的加减来计算出来的。不跟据时间进行的计算会通过其他函数来进行写入操作，所以主要涉及更新得分的函数有两个。 分数函数的分析1.查找得分地址在游戏左上角可以看到得分系统其实都是按整数来计算的，在 Cheat Engine 当中我们直接按 4字节 来进行搜索，每干掉一个非目标NPC都会进行相应的惩罚并减分数。从0开始搜索，按照杀掉的NPC输入相应的负值再次反复搜索就能定位到分数地址。 这里搜到的地址有5个而且都是静态地址，分数从游戏开始到结束都会存在并且不受环境因素影响（一会消失一会出现），所以一般都会以静态地址的方式来存储的。这里我们需要从这5个地址当中找到真正的分数地址，因此对每个地址的分数进行不停的修改直到找到真正的分数地址，最后锁定的正确地址为 HMA.exe+D64A78 。但是发现分数为正的时候是正常存储的，为负的时候变成了很大一串数字。这其实是因为补码的形式存储负数而导致的，补码最高位是符号位，0表示正数1表示负数。所以负数正常看的情况下会变得很大，更详细的介绍可以参考此介绍来学习。 2.锁定得分函数使用Cheat Engine的 Find out what writes to this address 功能，游戏中被减分或者加分就能得到修改分数的代码有四行： 通过观察这四行的调用次数可以知道： 第一行是在分数完全更新后才被调用 第二行只要有分数加减就不停的被调用 第三行各个分数计算结果为负时才调用 第四行各个分数计算结果为正时才调用 这个游戏采用了实时分数计算机制，在同一时刻会有加分也会有减分，计算完分数之后再加到总分数当中，同时加分和减分会在游戏中是这样显示的： 查看每一行汇编代码的地址，然后在IDA中打开这些地址能够发现其中三行代码来自同一个函数，只有第一行代码才来自于单独的函数。 3.分析分数函数（一）先分析第一行汇编代码的函数，这是一个非常小的一段函数，根据上面的分析重命名函数为 finalScoreUpdate 。此函数通过 __thiscall 方式调用的，接受三个参数一个是this指针，剩下两个是整数变量： 1int __thiscall finalScoreUpdate(DWORD this, int a2, int a3); 看下面的实现就能知道a2就是最终要显示的分数，因为 this +4 是目前分数板上面的数值。通过 ReClass.NET 查看内存地址猜测每个成员的数值变化可以大概推断作用： 12345678910int result; // eax *(_DWORD *)this = a2; //设置目标分数（最终要显示的分数） result = *(_DWORD *)(this + 8); *(_DWORD *)(this + 0x18) = 1; //设置状态标志为1（表示分数在更新） *(_DWORD *)(this + 0x10) = a3; //保存时间或速度参数（可能是过渡之类的） *(_DWORD *)(this + 0xC) = 0; //重置中间过渡值为0 *(_DWORD *)(this + 4) = result; // 分数完全更新后被调用 *(_DWORD *)(this + 0x14) = result; //保存当前基础分数（可能用于计算差值） return result; 那么可以确定此函数的作用是当玩家击杀敌人或触发得分变化的时候调用，然后更新参数初始化分数后为后面的平滑过渡做准备，接下来看一下第二个函数。 4.分析分数函数（二）第二个函数有两个很显眼的字符串分别是 ScoreUpdateNegStop 和 ScoreUpdatePosStop ，这两个判断分别对比计算之后的最终分数。最终要给总分数加分的话就调用 ScoreUpdatePosStop 事件，反之就是 ScoreUpdateNegStop 事件。 123456789101112131415161718192021if ( v9 &gt;= v8 )&#123; if ( v9 &gt; v8 ) &#123; v12 = (__int64)off_1039044; v16 = 0x80000012; // 可能是某种错误代码或者状态码 v17 = &quot;ScoreUpdateNegStop&quot;; sub_4BA510((int)&amp;v16, (int)&amp;v12); sub_820460(&amp;v16); &#125; *(_DWORD *)(this + 4) = *(_DWORD *)this;// 各个分数计算结果为负时调用&#125; else &#123; v13 = (__int64)off_1039044; v14 = 0x80000012; v15 = &quot;ScoreUpdatePosStop&quot;; sub_4BA510((int)&amp;v14, (int)&amp;v13); sub_820460(&amp;v14); *(_DWORD *)(this + 4) = *(_DWORD *)this;// 各个分数计算结果为正时调用 &#125; 正分数停止：当最终分数超过当前分数时，调用 ScoreUpdateNegStop 判断事件。 负分数停止：当最终分数低于当前分数时，条用 ScoreUpdatePosStop 判断事件。 因此可以把此函数命名为 scoreUpdate 函数，此函数通过 __thiscall 方式调用的，接受两个参数一个是this指针，另一个是整数变量： 1int __thiscall scoreUpdate(DWORD this, int a2); 在进入正负分数判断之前会有一个调用次数最多的判断，根据 this + 0x18 的状态来进入平滑过渡计算，分数地址的写入是通过 v7 变量赋值进行的。v7 变量是通过函数 sub_5DA6D0 得到的，反过来看这个函数的实现是一个浮点数的计算公式。 根据网上搜索得知此函数实现了一个 二次缓动插值函数 （Quadratic Ease-in-out），主要用在得分系统中实现分数的平滑过渡效果。比如当我们在游戏中执行某个操作失去或者获得分数时，游戏不会立即把分数变成新的分数而是使用这个缓动函数计算中间值创建一个平滑过渡看起来分数加的很自然。 总而言之，在游戏中分数在慢慢递增或者递减的时候就开始不停的调用此函数来进行加分实现过渡动画。那么可以把这个函数命名为 InOutQuad 为了方便理解。 123456789101112131415v3 = *(_DWORD *)(this + 0x18);if ( v3 != 1 ) // 检查状态值知否为1，是的话进入平滑过渡计算&#123; result = *(_DWORD *)(this + 0x18) - 2; if ( *(_DWORD *)(this + 0x18) != 2 ) // 再次检查状态是否为2，是的话进入平滑过渡计算 return result; v5 = *(_DWORD *)(this + 0x14); v6 = *(float *)(this + 0x10); v17 = (const char *)(*(_DWORD *)this - v5); v15 = (const char *)v5; v11 = (float)(int)v17; v10 = (float)v5; v7 = InOutQuad(*(float *)(this + 0xC), v10, v11, v6);// 平滑过渡计算 *(_DWORD *)(this + 4) = _ftol2_sse_excpt(v7);// 只要有分数加减就不停的被调用&#125; 在函数的后面部分有个 v18 的变量类似于获取了时间增量（也有可能是基于帧时间），这里的特殊数字 1048576 是2的20次方： 12v18 = (double)qword_1224770 / 1048576.0; // 获取时间增量*(float *)&amp;v19 = *(float *)(this + 0xC) + v18; 获取到的时间增量值用来更新中间值 this +0xC ，确保不超过目标值 this +0x10 ： 12if ( *(float *)(this + 0x10) &lt;= (double)*(float *)&amp;v19 )// 更新中间值确保不超过目标值 result = *(_DWORD *)(this + 0x10); 那么可以确定此函数的功能为在每帧渲染或者游戏循环中调用，并且用动态方式调整目前显示的分数直到变成目标值。 5.结构体推测（根据偏移量）123456789struct ScoreController &#123; int targetScore; // +0x0 (由a2设置的目标分数) int displayScore; // +0x4 (当前显示的分数) int previousScore; // +0x8 (更新前的原始分数) int intermediateValue; // +0xC (用于平滑计算的中间值) int transitionParam; // +0x10 (由a3设置的过渡参数，如时间/速度) int baseScore; // +0x14 (初始分数副本) int state; // +0x18 (状态标志: 1=更新中, 2=结束过渡)&#125;; 6.分数系统工作流程 得分在进行变化时，会先调用 finalScoreUpdate 设置新的目标分数（a2参数）和一个过渡参数（a3参数），再进行重置中间状态。 通过调用 scoreUpdate 函数根据时间的增量值 v18 会逐渐更新中间值 this +0xC （intermediateValue）。 之后使用插值函数（InOutQuad）计算分数的过渡效果，再将结果转换为整数后更新 this + 4 （displayScore）。 当中间值 this +0xC （intermediateValue）达到目标值时，会将状态设为0，结束过渡过程并锁定 this + 4 （displayScore）到最终值。 7.IDA Pro当中设置结构体我们推测出了大部分分数相关的结构体，这种情况下可以在IDA中自定义上面推测出来的结构体。打开 Local Types 界面，鼠标右键点击 Add Type ，然后输入结构体名称和大小点击 OK 即可创建一个空的结构体。 在新创建的空结构体上面按快捷键 D 可以选择成员变量类型，根据上面的结构体形式添加好所有变量： 回到我们的 C++ 伪代码当中，在函数声明 this 指针上面鼠标右键选择 Convert to struct * .. 选项，然后选择我们刚刚添加的结构体后发现代码变得顺眼多了。 以下是添加完结构体之后的完整伪代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778int __thiscall scoreUpdate(ScoreController *this, int a2)&#123; int state; // edi int result; // eax int baseScore; // eax int transitionParam; // ecx double v7; // st7 int targetScore; // ecx int v9; // eax float v10; // [esp+4h] [ebp-34h] float v11; // [esp+8h] [ebp-30h] __int64 v12; // [esp+18h] [ebp-20h] BYREF __int64 v13; // [esp+20h] [ebp-18h] BYREF unsigned int v14; // [esp+28h] [ebp-10h] BYREF const char *v15; // [esp+2Ch] [ebp-Ch] unsigned int v16; // [esp+30h] [ebp-8h] BYREF const char *v17; // [esp+34h] [ebp-4h] float v18; // [esp+40h] [ebp+8h] int v19; // [esp+40h] [ebp+8h] state = this-&gt;state; if ( state != 1 ) // 检查状态值知否为1，是的话进入平滑过渡计算 &#123; result = this-&gt;state - 2; if ( this-&gt;state != 2 ) // 再次检查状态是否为2，是的话进入平滑过渡计算 return result; baseScore = this-&gt;baseScore; transitionParam = this-&gt;transitionParam; v17 = (const char *)(this-&gt;targetScore - baseScore); v15 = (const char *)baseScore; v11 = (float)(int)v17; v10 = (float)baseScore; v7 = InOutQuad(*(float *)&amp;this-&gt;intermediateValue, v10, v11, *(float *)&amp;transitionParam);// 平滑过渡计算 this-&gt;displayScore = _ftol2_sse_excpt(v7); // 只要有分数加减就不停的被调用 &#125; if ( *(float *)&amp;this-&gt;transitionParam &lt;= (double)*(float *)&amp;this-&gt;intermediateValue ) &#123; if ( state == 1 ) &#123; sub_58E340(a2); &#125; else if ( state == 2 ) &#123; targetScore = this-&gt;targetScore; this-&gt;state = 0; v9 = this-&gt;baseScore; if ( v9 &gt;= targetScore ) &#123; if ( v9 &gt; targetScore ) &#123; v12 = (__int64)off_1039044; v16 = 0x80000012; // 可能是某种错误代码或者状态码 v17 = &quot;ScoreUpdateNegStop&quot;; sub_4BA510((int)&amp;v16, (int)&amp;v12); sub_820460(&amp;v16); &#125; this-&gt;displayScore = this-&gt;targetScore; // 各个分数计算结果为负时调用 &#125; else &#123; v13 = (__int64)off_1039044; v14 = 0x80000012; v15 = &quot;ScoreUpdatePosStop&quot;; sub_4BA510((int)&amp;v14, (int)&amp;v13); sub_820460(&amp;v14); this-&gt;displayScore = this-&gt;targetScore; // 各个分数计算结果为正时调用 &#125; &#125; &#125; v18 = (double)qword_1224770 / 1048576.0; // 获取时间增量 // 1048576 = 2的20次方 *(float *)&amp;v19 = *(float *)&amp;this-&gt;intermediateValue + v18; result = v19; if ( *(float *)&amp;this-&gt;transitionParam &lt;= (double)*(float *)&amp;v19 )// 更新中间值确保不超过目标值 result = this-&gt;transitionParam; this-&gt;intermediateValue = result; return result;&#125; 12345678910111213int __thiscall finalScoreUpdate(ScoreController *this, int a2, int a3)&#123; int result; // eax this-&gt;targetScore = a2; // 设置目标分数（最终要显示的分数） result = this-&gt;previousScore; this-&gt;state = 1; // 设置状态标志为1（表示分数在更新） this-&gt;transitionParam = a3; // 保存时间或速度参数（可能是过渡之类的） this-&gt;intermediateValue = 0; // 重置中间过渡值为0 this-&gt;displayScore = result; // 分数完全更新后被调用 this-&gt;baseScore = result; // 保存当前基础分数（可能用于计算差值） return result;&#125; 因为逆向工程大部分都是搞猜测验证来进行的，所以文章中有错误猜测或错误分析的部分请在评论区纠正。有任何私人问题可以联系我的私人邮箱，邮箱地址在首页。谢谢观看！","categories":[{"name":"逆向工程","slug":"逆向工程","permalink":"https://bhdtec.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"逆向","slug":"逆向","permalink":"https://bhdtec.com/tags/%E9%80%86%E5%90%91/"},{"name":"IDA","slug":"IDA","permalink":"https://bhdtec.com/tags/IDA/"},{"name":"CE","slug":"CE","permalink":"https://bhdtec.com/tags/CE/"}]},{"title":"杀手5逆向分析（三）","slug":"post4","date":"2025-03-03T16:00:00.000Z","updated":"2025-03-20T06:46:34.000Z","comments":true,"path":"2025/03/04/post4/","permalink":"https://bhdtec.com/2025/03/04/post4/","excerpt":"","text":"这一期主要分析对NPC造成伤害函数以及后座力函数。使用的工具有IDA Pro和Cheat Engine，还有利用Class Informer插件来简化工作量。 一，后座力函数的分析1.定位函数每次找指定的函数之前都建议用 Class Informer 插件来进行关键字搜索。比如我们这里需要查找跟后座力相关的类，那么我们就搜索关键字 Recoil 便能搜寻到相关的类： 很幸运地只搜到了叫 ZHM5WeaponRecoil 的类，看名称就知道是跟武器后座力有关的。双击打开可以看到虚函数表，每一个虚函数点进去找到最长的那一个，F5 生成 C++ 伪代码之后就可以分析了。 2.函数伪代码大致分析可以发现这个函数是通过 __thiscall 方式调用的，接受两个参数一个是this指针（指向武器对象），另一个是浮点数（可能与射击时间或强度有关）。把此函数命名为 weaponRecoil ： 1void __thiscall weaponRecoil(int this, float a2); 现在通过 Cheat Engine 的动态分析可以确定的是 this+0x38 &#x2F; 0x3C 分别是 X&#x2F;Y轴当前视角的偏移值。第一个判断就涉及这两个参数，要是判断为真就会让视角不进行任何修改。 12345if ( 1.0 == *(float *)(this + 0x24) &amp;&amp; 1.0 == *(float *)(this + 0x14) )// if true no recoil &#123; *(_DWORD *)(this + 0x38) = 0; *(_DWORD *)(this + 0x3C) = 0; &#125; this + 0x24 和 this + 0x14 这两个浮点数为1的情况下会执行重置视角偏移会变成无后座力的效果，在Cheat Engine 中删掉这个判断的话的确变成了无后座力（视角不会发生任何抖动）。那这里的两个参数可能是后座力恢复进度和后座力控制系数之类的参数。 要是有后座力效果，那就会执行else的内容。一开始就从输入参数当中提取某个值进行了计算并累积了这个值，可以称之为当前累计后座力。 1234a2 = (double)*(__int64 *)(LODWORD(a2) + 0x18) / 1048576.0;a2 = *(float *)(this + 8) + a2; //this + 8 为当前累计后座力v5 = a2;*(float *)(this + 8) = a2; //保存此累计后座力 下面的判断可以推断出 this + 0xC 为后座力的阈值，只有超过这个阈值之后才会有后座力效果： 1if ( *(float *)(this + 0xC) &lt;= v5 ) // 检查是否超过阈值 3.函数算法分析下面就是一系列详细的数学计算过程了，以下是大致分析没有进行动态分析验证，以供参考： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596else &#123; // 从输入参数中提取后座力增量值 // 可能是从射击事件中获取数据并进行缩放 a2 = (double)*(__int64 *)(LODWORD(a2) + 0x18) / 1048576.0; // 更新累积后座力值 a2 = *(float *)(this + 8) + a2; // this+8为当前累积后座力 v5 = a2; *(float *)(this + 8) = a2; // 保存更新后的累积后座力 // 检查累积后座力是否超过阈值 if ( *(float *)(this + 0xC) &lt;= v5 ) // this+0xC为后座力阈值 &#123; // 计算超出阈值的后座力量 a2 = v5 - *(float *)(this + 0xC); // 处理后座力恢复逻辑 if ( *(float *)(this + 0x14) &lt; 1.0 ) // 如果后座力未完全恢复 &#123; // 计算新的后座力恢复进度 v6 = a2 / *(float *)(this + 0x1C); // this+0x1C为后座力恢复速率参数 HIDWORD(v14) = *(_DWORD *)(this + 0x14); // 保存旧的恢复进度 *(float *)(this + 0x14) = v6; // 更新恢复进度 // 确保恢复进度不超过1.0 v7 = 0x3F800000; // 浮点数1.0的十六进制表示 if ( *(float *)(this + 0x14) &lt;= 1.0 ) v7 = *(_DWORD *)(this + 0x14); *(_DWORD *)(this + 0x14) = v7; // 计算恢复过程中的视角偏移变化 v12 = sub_9DCE70(v7); // 可能是sin或cos函数 *((float *)&amp;v14 + 1) = v12 - sub_9DCE70(HIDWORD(v14)); // 计算三角函数差值 // 计算X轴和Y轴的视角偏移增量 *(float *)&amp;v14 = *(float *)(this + 0x30) * *((float *)&amp;v14 + 1); // X轴偏移增量 *((float *)&amp;v14 + 1) = *((float *)&amp;v14 + 1) * *(float *)(this + 0x34); // Y轴偏移增量 // 更新当前视角偏移 *(float *)(this + 0x38) = *(float *)(this + 0x38) + *(float *)&amp;v14; // 更新X轴偏移 *(float *)(this + 0x3C) = *(float *)(this + 0x3C) + *((float *)&amp;v14 + 1); // 更新Y轴偏移 v4 = 1.0; &#125; // 计算额外后座力 a2 = a2 - *(float *)(this + 0x1C); // 减去恢复速率参数 // 处理额外后座力效果 if ( a2 &gt; 0.0 &amp;&amp; *v3 &lt; v4 ) // 如果有额外后座力且后座力控制因子小于1.0 &#123; // 如果后座力控制因子为0，初始化额外后座力参数 if ( *v3 == 0.0 ) &#123; // 保存当前视角偏移用于后续计算 v8 = *(_DWORD *)(this + 0x38); // 获取X轴视角偏移 *(_DWORD *)(this + 0x44) = *(_DWORD *)(this + 0x3C); // 保存Y轴视角偏移 v14 = *(float *)(this + 0x44); // 复制到临时变量 *(_DWORD *)(this + 0x40) = v8; // 保存X轴视角偏移 // 计算视角偏移的平方和(用于归一化) *((float *)&amp;v14 + 1) = *(float *)(this + 0x40) * *(float *)(this + 0x40) + v14 * v14; // 计算平方根 SquareRoot(*((float *)&amp;v14 + 1)); // 计算后座力强度参数 *(float *)(this + 0x28) = *((float *)&amp;v14 + 1) / *(float *)(this + 0x18); // this+0x18: 后座力强度调节参数 &#125; // 更新后座力控制因子 v9 = *v3; // 保存旧的控制因子值 v10 = a2 / *(float *)(this + 0x28); // 计算新的控制因子值 a2 = 1.0; HIDWORD(v14) = 0; *v3 = v10; // 更新控制因子 // 限制控制因子在有效范围内 a2 = sub_93E700(v3, (char *)&amp;v14 + 4, &amp;a2); // 可能是min/max函数 v11 = a2; *v3 = a2; // 保存调整后的控制因子 // 计算控制因子变化导致的视角偏移 v13 = sub_9DCE70(LODWORD(v11)); // 对新控制因子应用三角函数 a2 = v13 - sub_9DCE70(LODWORD(v9)); // 计算三角函数差值 // 计算X轴和Y轴的视角偏移值 *(float *)&amp;v14 = -*(float *)(this + 0x40) * a2; // X轴偏移增量(负值表示反向修正) *((float *)&amp;v14 + 1) = a2 * -*(float *)(this + 0x44); // Y轴偏移增量(负值表示反向修正) // 改变当前视角 *(float *)(this + 0x38) = *(float *)(this + 0x38) + *(float *)&amp;v14; // 更新X轴最终视角 *(float *)(this + 0x3C) = *(float *)(this + 0x3C) + *((float *)&amp;v14 + 1); // 更新Y轴最终视角 &#125; &#125; &#125; 想要实现无后座力只需要把最开始的两个跳转指令Nop掉就行了： 120095ECFD jp short loc_95ED1F0095ED0B jp short loc_95ED1F 4.游戏后座力机制 后座力一般会影响玩家的X，Y视角（上下，左右） 后座力通常会随着时间进行恢复 连续射击情况下会累积后座力大小 后座力通常有阈值和最大限制值 二，造成伤害函数的分析1.定位函数在游戏中收到NPC伤害后执行的函数跟玩家对NPC造成伤害执行的函数是不同的。在部分游戏中只要是造成伤害都会使用同一个处理造成伤害的函数来处理，但是在杀手5中都是单独处理的。为了找到给对方造成伤害的函数我还是通过 Class Informer 插件进行关键字 Damage 的搜索，但是搜出来了4个： ZHM5SplashDamageEntity ：可能负责范围伤害（如爆炸）的传播与计算。 ZHitmanDamageOverTime ：可能处理持续性伤害（如中毒&#x2F;燃烧） ZHM5ForwardDamageToHitmanEntity ：可能是伤害事件转发器，将外部伤害传递给Hitman实体，非计算核心 ZHM5DamageCounterEntity ：可能是伤害统计计数器（如成就系统），记录而非计算 这个几个类的虚函数每一个都点进去一个个查看进行动态调试没有找到关于玩家对NPC造成伤害的具体函数。因此改变了方向，跟搜索玩家生命值函数的方法一样。我们已经知道生命值是浮点数计算的，那么伤害值也应该是浮点数，还有最大生命值为100。 通过一下方法找到NPC生命值参数： 在游戏中找到伤害比较低的武器 找一个固定的满生命值的NPC后通过Cheat Engine搜索100（浮点数） 对着NPC的腿部打一枪（为了让造成的伤害最小化防止NPC死亡） 搜索类型选择 减少的数值 继续搜索 对其他NPC造成伤害后搜索类型选择 未变化的值（为了减少搜索结果） 重复3 - 6 步骤，在保证NPC不死亡的情况下找到NPC的血量值 等找到了NPC的血量之后锁定此值并锁定，可以开很多枪进行验证是否正确。之后通过 Cheat Engine 的 Find out what writes to this address 功能找到相应的汇编代码。 2.函数伪代码分析将此汇编代码的地址复制到 IDA 当中，可以发现这个函数是通过 __thiscall 方式调用的，接受两个参数一个是this指针（指向NPC实体对象），另一个是浮点数（玩家对NPC造成的伤害值）。把此函数命名为 applyDamage ： 1void __thiscall applyDamage(DWORD this, float damage); 第一行代码就是对生命值变量的修改，根据上下文可以知道 this + 0xA8 为NPC当前生命值，this + 0xA4 可能是NPC的最大生命值： 1enemy_Health = damage + *(float *)(this + 0xA8); 新生命值 &#x3D; 当前生命值 + 伤害值（应当为负），通过动态分析可以证实 damage 变量为负的浮点数。这样加上一个负值实际上是在减少生命值。 紧接着是保存NPC的最大生命值到临时变量后更新NPC目前的生命值： 12v2 = *(float *)(this + 0xA4);*(float *)(this + 0xA8) = enemy_Health; 后续就是一个 if 判断： 最大生命值大于0（NPC活着） 新计算出来的生命值要小于最大生命值 12if ( v2 &gt; 0.0 &amp;&amp; *(float *)(this + 0xA4) &gt; (double)enemy_Health ) *(_DWORD *)(this + 0xA8) = *(_DWORD *)(this + 0xA4); 如果满足以上两个条件的话，把当前生命值设为最大生命值。这就变得有点奇怪了，因为这个函数是计算玩家对NPC造成的伤害函数而这个判断是让NPC处于无敌状态的判断。为了解释这个异常行为通过动态分析查看 this + 0xA4 的值，发现这里的最大生命值一直都是显示为0，所以说此判断不会被正常执行。 我根据上面的判断条件对 this + 0xA4 的值进行修改并且让他大于当前生命值就能发现NPC变成了无敌状态。可以推断这里的判断可能是为了给某些NPC加上无敌效果（比如在过场动画中），或者是某种”第一次受伤”触发器（第一次受到伤害时恢复为满血），也有可能是开发者为了调试而留下的调试代码。 最后一个判断是个简单的检测生命值是否低于0，如果是则设置为0。这样就防止生命值为负，确保NPC死时生命值正好为0而不是负的： 12if ( *(float *)(this + 0xA8) &lt;= 0.0 ) *(_DWORD *)(this + 0xA8) = 0; 3.实际效果分析在游戏当中，这个函数的行为是： 玩家攻击NPC后传入NPC对象和伤害值 NPC的生命值减少 如果NPC的生命值为0或以下，NPC死亡并把生命值设为0 在特殊情况下，可能会使NPC无敌 4.函数完整代码12345678910111213void __thiscall applyDamage(DWORD this, float damage)&#123; double v2; // st7 float enemy_Health; // [esp+8h] [ebp+8h] enemy_Health = damage + *(float *)(this + 0xA8); v2 = *(float *)(this + 0xA4); *(float *)(this + 0xA8) = enemy_Health; if ( v2 &gt; 0.0 &amp;&amp; *(float *)(this + 0xA4) &gt; (double)enemy_Health ) *(_DWORD *)(this + 0xA8) = *(_DWORD *)(this + 0xA4); if ( *(float *)(this + 0xA8) &lt;= 0.0 ) *(_DWORD *)(this + 0xA8) = 0;&#125; 因为逆向工程大部分都是搞猜测验证来进行的，所以文章中有错误猜测或错误分析的部分请在评论区纠正。有任何私人问题可以联系我的私人邮箱，邮箱地址在首页。谢谢观看！","categories":[{"name":"逆向工程","slug":"逆向工程","permalink":"https://bhdtec.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"逆向","slug":"逆向","permalink":"https://bhdtec.com/tags/%E9%80%86%E5%90%91/"},{"name":"IDA","slug":"IDA","permalink":"https://bhdtec.com/tags/IDA/"},{"name":"CE","slug":"CE","permalink":"https://bhdtec.com/tags/CE/"}]},{"title":"杀手5逆向分析（二）","slug":"post3","date":"2025-02-25T16:00:00.000Z","updated":"2025-03-01T16:00:00.000Z","comments":true,"path":"2025/02/26/post3/","permalink":"https://bhdtec.com/2025/02/26/post3/","excerpt":"","text":"这一期主要分析射击函数，分析步骤跟上一期一样先用Cheat Engine来定位函数位置，再通过IDA Pro进行静态分析。大多数FPS游戏中找射击函数是要通过子弹数来定位的，第一步自然而然就是找出内存中的子弹存储地址。再查看此地址被哪个汇编代码所更改来锁定相应的函数。 射击函数的分析一，定位子弹内存地址首先把Cheat Engine附加进程到游戏的可执行程序当中，然后搜索随便一个枪械的子弹数量。子弹数量多数情况下会被存储为整数形式，有可能是2字节的也有可能是4字节的。要是没有搜到可以换扫描类型来搜索，一些游戏会对子弹数或者生命值之类的数据进行加密处理，这种情况后续会单独出一期教程来讲解。现在回到主题在4字节搜索的情况下进行多次搜索还是不能定位到子弹数量。切换2字节类型来进行搜索很快就能找到子弹数量，但是有三个搜索结果都是子弹数量。 可以看到其中两个是静态地址，把这其中一个数据进行修改回到游戏查看实际子弹数量有没有发生改变。把三个数据都挨个进行测试之后发现两个静态地址修改后不会发生任何变化。所以可以确定这两个静态地址不是真正的子弹内存地址。 二，找出子弹相关的汇编代码筛选来子弹地址之后进行 Find out what writes to this address 操作，然后在游戏中几枪就能看到修改子弹的汇编代码了。 点击 Show disassembler 就能看到所有相关的代码了，此时打开IDA把这个段汇编代码的地址复制过去。 三，在IDA中分析此函数1.UpdateAmmo函数可以看到这个函数的调用约定为 __thiscall 接受两个参数，其中一个是this指针另一个为当前子弹数。 1int __thiscall ShootMaybe(_WORD *this, __int16 currentAmmo); 将函数名改为 ShootMaybe ，把存储子弹的变量命名为 currentAmmo 就可以在IDA中慢慢分析了。在代码的第二行就能看到我们的子弹内存地址被传入的参数给写入了。 12this_cpy = *(_DWORD *)this;this[0x18B] = currentAmmo; // this+316h == Ammo 所以说剩余子弹是在上个函数或者更早的函数中被计算好的而这个函数是负责写入的。那可以推断此函数负责弹药值的直接写入并不是负责射击的，因此把函数名改成 UpdateAmmo 。继续往下分析，this指针的某一个地址传给v4变量之后就进行了调用，可以确定是在调用虚函数。 12v4 = *(void (**)(void))(this_cpy + 0x180); //从虚表偏移0x180获取函数v4(); //调用函数 按照正常游戏的逻辑，推测后面调用的基本都是一些子弹射击之后的事件，比如播放射击音效，生成弹道，HUD更新之类的事情。我们需要找到的是真正的计算子弹的部分，所以需要研究调用 UpdateAmmo 函数的函数。 2.Shoot函数那么为了查看上一层的函数就要回到Cheat Engine，然后对修改内存值的那一行汇编代码加断点，选中代码后按快捷键 F5 就可以加断点操作了。有断点代码行会变成红色表示加断点成功。回到游戏中随便开一枪会发现游戏处于暂停状态了。此时在 Memory Viewer 窗口的右下角出现了一个小窗口记录了栈中的返回地址。 双击第一行就能跳转到调用 UpdateAmmo 函数的调用处，也就是说当前断点出的每一层级的调用都可以在这里看到。调用 UpdateAmmo 是通过eax寄存器记录的值为调用处调用的并不是静态函数地址调用。 1HMA.NMP::Matrix&lt;float&gt;::postMultiply+F72 - FF D0 - call eax 这种调用方式大概率为虚函数调用，为了验证这一想法在IDA中打开此地址。可以看到这是个相当大并且复杂的函数。把这个函数暂时命名为 callUpdateAmmo 方便后续理解。这个函数接受四个参数，调用方式没有被IDA正确识别显示 __usercall ，但是第一个参数是通过ecx寄存器传递的指针类型，所以大差不差大概率又是个 __thiscall 调用约定。将第一个参数重新命名为 this 打开 Cheat Engine 在函数第一行加入断点查看一下这个 this 到底是啥。 1int __usercall callUpdateAmmo@&lt;eax&gt;(DWORD this@&lt;ecx&gt;, int a2@&lt;ebp&gt;, int a3@&lt;edi&gt;, int a4@&lt;esi&gt;); 将IDA中把函数的第一行汇编代码的地址复制到 Cheat Engine 当中加入断点，游戏中进行射击击中断点后查看ecx寄存器的值。把这个地址粘贴到 ReClass.NET 当中可以发现是一个 ItemWeapon 类的实例。 ReClass.NET 会自动获取 RTTI信息 重建继承树在右侧用红字显示。 在IDA Pro中通过安装 Class Informer 插件来解析RTTI记录，安装方法以及插件地址可以从此GitHub地址获取。 （1）弹药量识别在IDA中查看 call eax 的C++伪代码处，确实是一个接受两参数的函数调用。 1234(*(void (__thiscall **)(DWORD, int))(*(_DWORD *)(this + 0xF0) + 0x64))( this + 0xF0, *(unsigned __int16 *)(this + 0x406) - 1 &lt;= 0 ? 0 : *(unsigned __int16 *)(this + 0x406) - 1);// this + 0x406 == CurrentAmmo ReClass.NET中看到 this + 0xF0 指向的也是一个实例，为了弄清楚这些类的结构，在IDA中打开 Class Informer 插件进行解析，解析出来的结果有3000多个类。按快捷键 Ctrl + F 进行搜索类名称或者是类静态地址（在ReClass.NET中显示）。搜索完毕后可以看到 callUpdateAmmo 函数的this指针为一个叫 ZHM5ItemWeapon 的类，继承了很多类。 100EBD1D4 33 MA ZHM5ItemWeapon ZHM5ItemWeapon: ZHM5Item, ZReusablePropEntity, ZEntityImpl, IEntity, IComponentInterface, IReusableProp, IHM5Item, IComponentInterface, IHM5ItemWeapon, IComponentInterface; this + 0xF0 指向的是也是叫 ZHM5ItemWeapon 的类，但是只继承了两个类。 100E6B1B4 101 MA ZHM5ItemWeapon IHM5ItemWeapon: IComponentInterface; 双击打开这个 00E6B1B4 类的虚函数表可以发现我们之前定义的 UpdateAmmo 函数。了解类的结构对我们的分析和理解有很大的帮助。 在分析类似射击函数数优先寻找 – 或 -1 操作，通常对应弹药消耗。**++** 或 +1 操作通常对应总射击次数的递增。回到之前的分析这个函数传入的第一个参数是 ZHM5ItemWeapon 类的是一个实例。第二个参数是个条件表达式，简单来说这段代码的目的是将当前弹药量（ this + 0x406 ）减1，但确保弹药量不会变成负数。这段代码才是真正的子弹数量减少代码，对应的汇编代码为： 1text:009ECEAD dec eax ; Decrease Ammo 可以看到函数的前面有一个++操作，WORD 类型（2字节）也符合此游戏的子弹存储大小： 1++*(_WORD *)(this + 0x40A); // 射击总数递增 动态分析确认 this + 0x40A 指向的的确是射击总数。弹药系统的典型特征还包括边界保护类似于： 1if (新值 &lt;= 0) 设为0; （2）扩散系数识别扩散一般跟浮点运算有关，涉及乘除加减的操作通常与弹道物理相关。在函数中可以发现有一个很大的for循环，这个循环大概率是开枪时循环的。 在循环当中有一个关于浮点运算的部分： 1*(float *)(this + 0x420) = 1.0 / (double)v15 + *(float *)(this + 0x420);// this + 0x420 == 扩散系数 可以发现 this + 0x420 地址的浮点数会随着循环次数会一直叠加，在下面还有个关于边界保护的判断： 12if ( *(float *)(this + 0x420) &gt; 1.0 ) // 扩散限制在 1 以内*(_DWORD *)(this + 0x420) = 0x3F800000; // 0x3F800000 (float 1.0) 0x3F800000 是1.0的IEEE754编码，根据这些特征可以推测 this + 0x420 是扩散增长系数，通过动态分析发现确定是扩散增长系数。 我们再看函数的第一个if判断分析一下，因为这段也是关于浮点数的加减乘除： 123456789101112131415161718v5 = (*(int (__thiscall **)(DWORD, int, int))(*(_DWORD *)(this + 0xF0) + 0x180))(this + 0xF0, a3, a4); v6 = *(float *)(this + 0x1AC); ++*(_WORD *)(this + 0x40A); // 射击总数递增 v73 = v5; if ( v6 &gt; 0.0 ) &#123; *(float *)&amp;v76 = (((double (__thiscall *)(DWORD, _DWORD))*(_DWORD *)(*(_DWORD *)(this + 0xF0) + 0x80))( this + 0xF0, 0) - *(float *)(v73 + 8)) / *(float *)(this + 0x1AC) + *(float *)(this + 0x1B0); v7 = *(float *)&amp;v76; v8 = flt_11536DC; *(float *)(this + 0x1A8) = *(float *)&amp;v76; if ( v8 &gt; v7 ) *(_DWORD *)(this + 0x1A8) = 0; &#125; 把这段进行缩短提取关键部分看一下： 12345678910111213if ( *(float *)(this + 0x1AC) &gt; 0.0 ) // 判断条件：this + 0x1AC &gt; 0&#123; // 核心计算公式： *(float *)(this + 0x1A8) = (某函数计算结果 - *(float *)(v73 + 8)) / *(float *)(this + 0x1AC) // 分母为 this + 0x1AC + *(float *)(this + 0x1B0); // 叠加偏移量值 // 限制逻辑： if (*(float *)(this + 0x1A8) &lt; flt_11536DC ) &#123; *(_DWORD *)(this + 0x1A8) = 0; // 重置为0 &#125;&#125; 把核心计算公式按照数学公式来分析：$$结果 &#x3D; \\frac{Δ}{this+0x1AC}+偏移值$$当 this+0x1AC 的值越大，计算结果越小。计算结果 this + 0x1A8 需要小于阈值 flt_11536DC 否则就被清零。典型的FPS武器扩散公式：$$扩散值 &#x3D; 基础扩散 + (\\frac{扰动值}{恢复速度})$$代码中的 this + 0x1A8 跟这个公式相似为实时扩散值，所以 this+0x1AC 可以为扩散恢复速度， this + 0x1B0 为基础扩散值。 （3）射击循环来分析函数的关键部分也就是for循环，每一次子弹射击都会执行这个循环： 1for ( i = 0; i &lt; v76; ++i ) //v76表示本次射击需要发射的子弹数 循环次数表示每次需要发射的子弹数，v76是通过前面的 sub_8F83E0 函数计算得出的： 123*(float *)&amp;v10 = COERCE_FLOAT(sub_8F83E0((int *)(this + 0x290), (int)v60, v9));v76 = v10;if ( v76 == result ) // 有结果才进入循环 v76一般值可能为1（单发），3（三连发），全自动（根据按下按键的时间来计算）。把v75命名为 shootBullet 。 （4）射击间隔在循环内计算扩散值之前会先计算射击间隔，前面确定过 this + 0x420 是扩散系数。计算当中有个 v15 的变量参与计算，根据上下文这个变量大概率就是射击间隔： 123v15 = *(_BYTE *)(v73 + 0x42); // v73+0x42 = 射击间隔倒数（如30=每秒30发）if (v15 &lt; 1) v15 = 1; // 防止除以0扩散值 = 1.0/(double)v15 + 扩散值; //扩散值 = *(float *)(this + 0x420) 从 v73 + 0x42 这个地址读取射击速率比如10（代表10发&#x2F;秒），1.0除以射击速率得到一发子弹的射击间隔（如0.01秒）。把这个时间加到扩散系数当中，射速越快扩散增长就越快，v15变量可以改名为 bulletLag 。 （5）特殊射击检测下一段代码if判断有可能是判断特殊射击的，因为通过 Cheat Engine 把判断对应的汇编指令 Nop 掉发现造成的伤害变低了（原本冲锋枪3发打腿死，Nop 之后需要5发才腿能解决）。根据上下文可以大致猜测一下此判断内容： 12345678910if (!v14) &#123; // v14表示是否处于特殊射击模式（如狙击开镜） // 获取武器配件数据 v16 = *(int **)(dword_1221358 + 0x74); // 全局武器库指针 v71[0] = *v16; // 加载配件基础数据 v66 = sub_602920(v71, &amp;unk_10C67D8); // 解析配件属性 // 计算配件对扩散的影响 v20 = 配件对象-&gt;GetSpreadModifier(); // 获取配件提供的扩散修正 v21 = 配件对象-&gt;ApplySpreadModifier(修正值 + 1.0/射击间隔);&#125; 因此 v14 变量可以重新命名为 specialShoot 。后面的操作基本都是SSE指令的解析，进行的操作大概率为弹道向量计算，碰撞检测，子弹实例生成，播放射击音效，触发命中特效等等操作。这里就不一一展开讲解了，需要解析的话可以参考英特尔官方的 SSE指令解析 来辅助解析。 （6）连发计数器即使把减少子弹代码Nop掉，但是冲锋枪射击一个弹匣子弹之后还是自动停顿了。函数最后能看到有个对地址 this + 0x404 的判断。当我查看这个地址并在游戏中射击时发现每发射一个子弹会让这个地址值增加，当子弹数达到当前弹匣数也就是 this + 0x404 == this + 0x406 时射击就停止了。因此可以猜测这里的判断是计算射击数并强制清空当前后坐力： 123if (*(_WORD *)(this + 0x404)) // 检查连发计数器是否非零 *(_DWORD *)(this + 0x458) = 0; // 重置后坐力*(_QWORD *)(this + 0x410) = qword_1224748; // 更新时间戳 在这个判断之前就有一个对连发计数器检测 ( this + 0x404 ) 的增加操作： 1++*(_WORD *)(this + 0x404); 当把这个对应的汇编代码Nop掉之后发现可以进行无限射击并且不受当前弹匣子弹数限制了。分析到这里就可以知道此函数就是游戏的射击模块，因此可以把函数名称改为 Shoot 。 下面放完整 UpdateAmmo函数 和 Shoot函数 的代码以供参考： 123456789101112131415161718192021222324252627282930313233343536373839404142int __thiscall UpdateAmmo(DWORD this, __int16 currentAmmo)&#123; int v3; // edx void (*v4)(void); // eax char v5; // bl _DWORD *v6; // eax void (__thiscall *v7)(DWORD); // eax char v9[8]; // [esp+8h] [ebp-1Ch] BYREF _BYTE v10[8]; // [esp+10h] [ebp-14h] BYREF _DWORD v11[2]; // [esp+18h] [ebp-Ch] BYREF int v12; // [esp+20h] [ebp-4h] v3 = *(_DWORD *)this; *(_WORD *)(this + 0x316) = currentAmmo; // this+316h == Ammo v4 = *(void (**)(void))(v3 + 0x180); v12 = 0; v4(); if ( *(_DWORD *)(*(int (__thiscall **)(DWORD))(*(_DWORD *)(this - 0xE0) + 0x64))(this - 0xE0) ) &#123; v7 = *(void (__thiscall **)(DWORD))(*(_DWORD *)(this - 0xE0) + 0x64); v12 = 2; v7(this - 0xE0); v6 = (_DWORD *)sub_8FFCB0((int)v10); v5 = v12; &#125; else &#123; v5 = 1; v11[0] = 0x80000004; v11[1] = &quot;NULL&quot;; v6 = v11; &#125; sub_7A4BB0((int)v6); if ( (v5 &amp; 2) != 0 ) &#123; v5 &amp;= ~2u; sub_820460(v10); &#125; if ( (v5 &amp; 1) != 0 ) sub_820460(v11); return sub_820460(v9);&#125; 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260int __usercall Shoot@&lt;eax&gt;(DWORD this@&lt;ecx&gt;, int a2@&lt;ebp&gt;, int a3@&lt;edi&gt;, int a4@&lt;esi&gt;)&#123; int v5; // eax double v6; // st7 double v7; // st7 double v8; // st6 unsigned int v9; // eax int v10; // eax int *v11; // ecx int v12; // edx int result; // eax bool specialShoot; // zf char bulletLag; // al int *v16; // eax int (__thiscall *v17)(DWORD, int *); // edx int *v18; // eax int v19; // eax double v20; // st7 void (__thiscall *v21)(int *, _DWORD); // eax __m128 v22; // xmm2 __m128 v23; // xmm0 __m128 v24; // xmm0 __m128 v25; // xmm0 __m128 v26; // xmm0 const __m128i *v27; // eax __m128 v28; // xmm1 __m128 v29; // xmm1 __m128 v30; // xmm0 __m128 v31; // xmm0 __m128 v32; // xmm0 __m128 v33; // xmm1 __m128i v34; // xmm0 void (__thiscall *v35)(DWORD, _BYTE *, __m128 *, DWORD, _DWORD); // edx __m128 v36; // xmm0 int *v37; // eax int v38; // eax int v39; // edx bool v40; // al int (__thiscall *v41)(DWORD, _BYTE *); // edx int v42; // eax _DWORD *v43; // ecx int v44; // edx __m128 v45; // xmm0 double v46; // st7 void (__thiscall *v47)(_DWORD, _DWORD); // eax double v48; // st7 float v49; // ecx int v50; // ecx double v51; // st7 float v52; // ecx int v53; // ecx void (__thiscall *v54)(DWORD, _DWORD); // edx _BYTE v56[48]; // [esp+64h] [ebp-1DCh] BYREF _DWORD v57[20]; // [esp+94h] [ebp-1ACh] BYREF __m128 v58; // [esp+E4h] [ebp-15Ch] bool v59; // [esp+F4h] [ebp-14Ch] _DWORD v60[32]; // [esp+104h] [ebp-13Ch] BYREF _BYTE v61[16]; // [esp+184h] [ebp-BCh] BYREF __m128 v62; // [esp+194h] [ebp-ACh] BYREF __m128 v63; // [esp+1A4h] [ebp-9Ch] _BYTE v64[36]; // [esp+1B8h] [ebp-88h] BYREF __m128i v65; // [esp+1DCh] [ebp-64h] BYREF int *v66; // [esp+1ECh] [ebp-54h] int v67; // [esp+1F0h] [ebp-50h] BYREF int v68; // [esp+1F4h] [ebp-4Ch] BYREF int v69; // [esp+1F8h] [ebp-48h] BYREF int v70; // [esp+1FCh] [ebp-44h] int v71[2]; // [esp+200h] [ebp-40h] BYREF _DWORD v72[2]; // [esp+208h] [ebp-38h] BYREF int v73; // [esp+210h] [ebp-30h] _DWORD v74[2]; // [esp+214h] [ebp-2Ch] BYREF float v75; // [esp+21Ch] [ebp-24h] int shootBullet; // [esp+220h] [ebp-20h] bool v77; // [esp+227h] [ebp-19h] int i; // [esp+228h] [ebp-18h] int v79; // [esp+22Ch] [ebp-14h] float v80; // [esp+230h] [ebp-10h] int v81; // [esp+234h] [ebp-Ch] void *retAddr2; // [esp+238h] [ebp-8h] void *retaddr; // [esp+240h] [ebp+0h] v81 = a2; retAddr2 = retaddr; v5 = (*(int (__thiscall **)(DWORD, int, int))(*(_DWORD *)(this + 0xF0) + 0x180))(this + 0xF0, a3, a4); v6 = *(float *)(this + 0x1AC); // this + 0x1AC == 扩散恢复速度 ++*(_WORD *)(this + 0x40A); // this + 0x40A == 射击总数递增 v73 = v5; if ( v6 &gt; 0.0 ) &#123; *(float *)&amp;shootBullet = (((double (__thiscall *)(DWORD, _DWORD))*(_DWORD *)(*(_DWORD *)(this + 0xF0) + 0x80))( this + 0xF0, 0) - *(float *)(v73 + 8)) / *(float *)(this + 0x1AC) + *(float *)(this + 0x1B0); v7 = *(float *)&amp;shootBullet; v8 = flt_11536DC; *(float *)(this + 0x1A8) = *(float *)&amp;shootBullet; if ( v8 &gt; v7 ) *(_DWORD *)(this + 0x1A8) = 0; &#125; memset(v60, 0, sizeof(v60)); v9 = (*(int (__thiscall **)(_DWORD))(**(_DWORD **)(this + 0x3DC) + 0x14))(*(_DWORD *)(this + 0x3DC)); *(float *)&amp;v10 = COERCE_FLOAT(sub_8F83E0((int *)(this + 0x290), (int)v60, v9)); v11 = *(int **)(this + 0x3DC); v12 = *v11; shootBullet = v10; result = (*(int (__thiscall **)(int *))(v12 + 0x14))(v11); if ( shootBullet == result ) &#123; v77 = *(_DWORD *)(*(int (__thiscall **)(DWORD, float))(*(_DWORD *)(this + 0x10) + 0x64))( this + 0x10, COERCE_FLOAT(LODWORD(v80))) == dword_1221354; if ( !v77 || (specialShoot = (*(_DWORD *)(dword_1221358 + 0x6EC) &amp; 0x1000) == 0, HIBYTE(v80) = 1, specialShoot) ) HIBYTE(v80) = 0; for ( i = 0; i &lt; shootBullet; ++i ) &#123; bulletLag = *(_BYTE *)(v73 + 0x42); if ( bulletLag &lt; 1 ) bulletLag = 1; specialShoot = HIBYTE(v80) == 0; LODWORD(v75) = bulletLag; *(float *)(this + 0x420) = 1.0 / (double)bulletLag + *(float *)(this + 0x420);// this + 0x420 == 扩散系数 if ( !specialShoot ) // 是否处于特殊射击模式（如狙击开镜） &#123; v16 = *(int **)(dword_1221358 + 0x74); v71[0] = 0; v71[0] = *v16; v71[1] = v16[1]; v66 = (int *)sub_602920(v71, (int)&amp;unk_10C67D8); v17 = *(int (__thiscall **)(DWORD, int *))(*(_DWORD *)this + 0x14); v71[0] = 0; v18 = (int *)v17(this, &amp;v68); v19 = sub_602920(v18, (int)&amp;unk_10C67D8); v68 = 0; if ( v66 ) &#123; if ( v66 != (int *)v19 ) &#123; v79 = *v66; v20 = ((double (__thiscall *)(int *))*(_DWORD *)(v79 + 0xA8))(v66); v21 = *(void (__thiscall **)(int *, _DWORD))(v79 + 0xAC); v75 = v20 + 1.0 / (double)SLODWORD(v75); v21(v66, LODWORD(v75)); &#125; &#125; &#125; if ( *(float *)(this + 0x420) &gt; 1.0 ) // 扩散限制在 1 以内 *(_DWORD *)(this + 0x420) = 0x3F800000; // 0x3F800000 (float 1.0) sub_82C0C0(v64); v22 = (__m128)xmmword_EAAF00; v23 = _mm_shuffle_ps((__m128)_mm_loadl_epi64(&amp;v65), (__m128)v65.m128i_u32[2], 4); v24 = _mm_sub_ps( *(__m128 *)(this + 0x3F0), _mm_shuffle_ps(v23, _mm_shuffle_ps((__m128)xmmword_EAAF00, v23, 0xAF), 0x24)); v25 = _mm_and_ps(_mm_mul_ps(v24, v24), (__m128)xmmword_EBD1A0); v26 = _mm_hadd_ps(v25, v25); if ( _mm_movemask_ps( _mm_cmple_ps( _mm_and_ps(_mm_sqrt_ps(_mm_hadd_ps(v26, v26)), (__m128)xmmword_EBD180), _mm_shuffle_ps((__m128)(unsigned int)dword_11536E0, (__m128)(unsigned int)dword_11536E0, 0))) == 0xF ) &#123; v27 = (const __m128i *)(*(int (__thiscall **)(DWORD, _BYTE *))(*(_DWORD *)(this + 0xF0) + 0x4C))( this + 0xF0, v56); v22 = (__m128)xmmword_EAAF00; v28 = _mm_shuffle_ps((__m128)_mm_loadl_epi64(v27), (__m128)v27-&gt;m128i_u32[2], 4); v29 = _mm_shuffle_ps(v28, _mm_shuffle_ps((__m128)xmmword_EAAF00, v28, 0xAF), 0x24); v30 = _mm_and_ps(_mm_mul_ps(v29, v29), (__m128)xmmword_EBD1A0); v31 = _mm_hadd_ps(v30, v30); v32 = _mm_mul_ps(_mm_div_ps((__m128)xmmword_F58720, _mm_sqrt_ps(_mm_hadd_ps(v31, v31))), v29); v33 = _mm_shuffle_ps((__m128)_mm_loadl_epi64(&amp;v65), (__m128)v65.m128i_u32[2], 4); v63 = _mm_add_ps( _mm_mul_ps(v32, _mm_shuffle_ps((__m128)xmmword_EBD260, (__m128)xmmword_EBD260, 0)), _mm_shuffle_ps(v33, _mm_shuffle_ps((__m128)xmmword_EAAF00, v33, 0xAF), 0x24)); v65.m128i_i64[0] = v63.m128_u64[0]; v65.m128i_i32[2] = v63.m128_i32[2]; &#125; v34 = _mm_loadl_epi64(&amp;v65); v35 = *(void (__thiscall **)(DWORD, _BYTE *, __m128 *, DWORD, _DWORD))(*(_DWORD *)(this + 0xF0) + 0x124); v80 = *(float *)(this + 0x458); v36 = _mm_shuffle_ps((__m128)_mm_move_epi64(v34), (__m128)v65.m128i_u32[2], 4); v62 = _mm_shuffle_ps(v36, _mm_shuffle_ps(v22, v36, 0xAF), 0x24); v35(this + 0xF0, v61, &amp;v62, this + 0x3F0, LODWORD(v80)); v37 = (int *)(*(int (__thiscall **)(DWORD, int *))(*(_DWORD *)this + 0x14))(this, &amp;v67); v72[0] = 0; v72[0] = *v37; v38 = sub_602920(v37, (int)&amp;unk_10C67D8); v39 = *(_DWORD *)(this + 0x3DC); v72[1] = v38; sub_54A170((int)v57, (int)v72, v39); v72[0] = 0; v67 = 0; v40 = !v77 &amp;&amp; *(unsigned __int16 *)(this + 0x40A) &gt; (*(int (__thiscall **)(_DWORD))(**(_DWORD **)(this + 0x3DC) + 0x34))(*(_DWORD *)(this + 0x3DC)); v41 = *(int (__thiscall **)(DWORD, _BYTE *))(*(_DWORD *)(this + 0xF0) + 0x4C); v59 = v40; v42 = v41(this + 0xF0, v56); v43 = (_DWORD *)v60[i]; v44 = *(_DWORD *)(this + 0xF0); v45 = _mm_shuffle_ps( (__m128)_mm_loadl_epi64((const __m128i *)(v42 + 0x24)), (__m128)*(unsigned int *)(v42 + 0x2C), 4); v58 = _mm_shuffle_ps(v45, _mm_shuffle_ps((__m128)xmmword_EAAF00, v45, 0xAF), 0x24); v79 = *v43 + 0x2C; v46 = ((double (__thiscall *)(DWORD))*(_DWORD *)(v44 + 0x12C))(this + 0xF0); v47 = *(void (__thiscall **)(_DWORD, _DWORD))v79; v80 = v46; v47(v60[i], LODWORD(v80)); v79 = *(_DWORD *)v60[i] + 0x34; v48 = ((double (__thiscall *)(DWORD))*(_DWORD *)(*(_DWORD *)(this + 0xF0) + 0x130))(this + 0xF0); v80 = v49; v50 = v60[i]; v80 = v48; (*(void (__thiscall **)(int, float))v79)(v50, COERCE_FLOAT(LODWORD(v80))); v79 = *(_DWORD *)v60[i] + 0x3C; v51 = ((double (__thiscall *)(DWORD))*(_DWORD *)(*(_DWORD *)(this + 0xF0) + 0x134))(this + 0xF0); v80 = v52; v53 = v60[i]; v80 = v51; (*(void (__thiscall **)(int, float))v79)(v53, COERCE_FLOAT(LODWORD(v80))); (*(void (__thiscall **)(bool, _DWORD *, _BYTE *, _BYTE *, _DWORD, unsigned int, bool, int))(*(_DWORD *)v60[i] + 0x48))( (*(_BYTE *)(this + 0x45C) &amp; 0x40) != 0, v57, v64, v61, 0, 0xFFFFFFFF, (*(_BYTE *)(this + 0x45C) &amp; 0x40) != 0, *(_BYTE *)(this + 0x45C) &gt;&gt; 7); if ( v59 ) *(_WORD *)(this + 0x40A) = 0; v69 = *(_DWORD *)(this + 0x80); v70 = sub_602920((int *)(this + 0x80), (int)&amp;unk_10C1BDC); if ( v70 &amp;&amp; sub_602920(&amp;v69, (int)&amp;unk_10C67CC) ) &#123; sub_CC7A90(v74); if ( v74[1] ) sub_5E7820(v57[0xD], 0, v65.m128i_i32[0], v65.m128i_i32[1], v65.m128i_i32[2], 0); v74[0] = 0; &#125; v69 = 0; &#125; ++*(_WORD *)(this + 0x404); v54 = *(void (__thiscall **)(DWORD, _DWORD))(*(_DWORD *)(this + 0xF0) + 0xF4); LODWORD(v80) = *(unsigned __int16 *)(this + 0x404); v54(this + 0xF0, 0); (*(void (__thiscall **)(DWORD, int))(*(_DWORD *)(this + 0xF0) + 0x64))( this + 0xF0, *(unsigned __int16 *)(this + 0x406) - 1 &lt;= 0 ? 0 : *(unsigned __int16 *)(this + 0x406) - 1);// this + 0x406 == CurrentAmmo // call ShootMaybe if ( *(_WORD *)(this + 0x404) ) // this + 0x404 == BurstCounter *(_DWORD *)(this + 0x458) = 0; *(_QWORD *)(this + 0x410) = qword_1224748; return sub_4AC9A0((char *)this, dword_1153738, (int)v74); &#125; return result;&#125; 因为逆向工程大部分都是搞猜测验证来进行的，所以文章中有错误猜测或错误分析的部分请在评论区纠正。有任何私人问题可以联系我的私人邮箱，邮箱地址在首页。谢谢观看！","categories":[{"name":"逆向工程","slug":"逆向工程","permalink":"https://bhdtec.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"逆向","slug":"逆向","permalink":"https://bhdtec.com/tags/%E9%80%86%E5%90%91/"},{"name":"IDA","slug":"IDA","permalink":"https://bhdtec.com/tags/IDA/"},{"name":"CE","slug":"CE","permalink":"https://bhdtec.com/tags/CE/"}]},{"title":"杀手5逆向分析（一）","slug":"post2","date":"2025-02-22T16:00:00.000Z","updated":"2025-02-28T16:00:00.000Z","comments":true,"path":"2025/02/23/post2/","permalink":"https://bhdtec.com/2025/02/23/post2/","excerpt":"","text":"本系列HITMAN 5的教程主要是针对游戏的主要功能进行逆向分析，使用的工具分别有Cheat Engine ，IDA Pro ，ReClass.NET 。Cheat Engine 是用来实时调试，修改内存值，测试验证推理等等用途。IDA Pro 用来静态分析函数的主要实现逻辑等。ReClass.NET 可以分析数据的内存结构，类指针的分析。 这一期教程的分析内容主要针对生命值函数。下面对这一函数进行锁定位置和详细分析运行逻辑。本系列教程的后续会对游戏的主要功能函数都挨个进行分析。 生命值函数的分析一，定位生命值首先打开Cheat Engine并且点击左上角的选择程序按钮，选择游戏程序点确定就能把调试器附加到游戏上面。此时可以对游戏内存地址进行任意的搜索。 生命值一般在游戏当中以浮点值的形式存储的，单浮点数占用4个字节的位置，因此搜索时可以用4字节方式搜索也可以直接按浮点数形式搜索。一般情况下都是按四字节来搜索，因为少部分游戏不采用浮点值存储而用整数值，所以以防万一我这里还是按照四字节方式来搜索。在这款游戏中生命值的具体数值时看不到的，在低难度的情况下收到伤害之后生命值会慢慢的进行回复。在满生命值状态下我们按照100来进行搜索或者按照未知数值进行搜索。搜索完之后可以看到有上千万的结果，为了筛选出自己所需的值就要让生命值进行变动。游戏中的生命值变动之后扫描类型就可以换成增加的值或者减少的值来反复搜索直到找到自己所需要的生命值。详细步骤可以参考网上各种教程来学习，这里就不展开讲述了。 最终找到的浮点变量可以进行修改看看游戏中的生命值是否有发生改变，要是没有发生变化就说明找错了得重新找。 二，找出生命值相关的汇编代码在找到的变量上鼠标右键选择 Find out what writes to this address 会弹出一个窗口来检测修改此内存地址的汇编代码的窗口。 在游戏中被敌方击中后就会在窗口中显示相应的汇编代码，在窗口的下方显示各个寄存器在执行此代码时存储的值。 1008082E4 - D9 9E 18020000 - fstp dword ptr [esi+00000218] ;修改生命值的汇编代码 点击窗口右边的 Show disassembler 后会弹出另一个大窗口叫 Memory Viewer 。窗口上方显示的就是汇编代码区域记录着内存地址，机器码，汇编代码，备注信息。窗口下方显示的则是内存具体值可以右键改变显示形式。 在我们刚刚找到的那一行代码上面鼠标右键选择 Replace with code that does nothing 就可以将此处的代码全部改成 Nop 指令。在游戏中我们就实现了真正的无敌。 三，在IDA Pro中分析此函数1.调用约定分析将游戏的可执行文件 HMA.exe 拖入到IDA Pro当中等待分析完毕。在 Cheat Engine 中的代码窗口中选择刚刚找到的那一行代码，然后按快捷键 Ctrl + G 就会显示地址，复制此地址打开IDA Pro按快捷键 G 在弹出的窗口当中粘贴并按回车就能跳转到相应的代码位置。按 F5 键会把汇编代码转换成C++的伪代码以便我们看懂。 1bool __userpurge sub_808080@&lt;al&gt;(int a1@&lt;ecx&gt;, float a2@&lt;ebp&gt;, __m128 *a3) 我们可以看到函数名称为 sub_808080 代表函数的开始地址为808080，在名称上面按快捷键 N 就可以重新命名此函数为 takeDamage （名称可以随意设置主要是为了方便理解）。函数往下滑可以定位到我们计算生命值的位置： 1*(float *)(a1 + 0x218) = *(float *)(a1 + 0x218) - v1[0]; //(a1 + 0x218) == 当前生命值 在汇编代码中[esi+00000218]代表的是当前生命值的内存地址，在这个伪代码当中(a1 + 0x218)代表的是当前生命值。在IDA当中一些没有被识别的调用约定会被认定为 __userpurge 约定，在函数的参数中可以发现a1变量是作为第一个参数传递的实体对象而且是用ecx寄存器传递的那么基本可以确定这个函数是 thiscall 调用约定。 关键特征 a1@ 表示 a1 参数通过 ECX 寄存器 传递。 thiscall 约定在 x86 架构中默认将 this 指针通过 ECX 寄存器传递。 2.函数内容的分析由于已经确定a1是this指针因此可以在a1变量上按快捷键 N 重命名为this，翻到函数的第一行可以看到有个if判断： 1if ( *(_BYTE *)(this + 0x214) ) return 0; 要是偏移为0x214的变量为真的话就直接返回不执行整个函数了，也就是说不会被扣除血量。因此可以猜测这里的1字节大小的变量可能表示对象的无敌状态标志（如 isInvincible ）。 下一个判断也同样出现了 this + 0x210 转换为指针后加上偏移计算的值，由此可以确定 this + 0x210 是个指针。 12345if ( (*(_DWORD *)(*(_DWORD *)(this + 0x210) + 0x6EC) &amp; 0x10000000) != 0 &amp;&amp; a3-&gt;m128_i32[3] ) &#123; sub_6D3380(a3); //此函数内部不会对生命值进行修改 return 0; &#125; 通过ReClass.NET查看可以看到 this + 0x210 指针指向的是 BaseCharacter 类。游戏角色的基类一般包含生命值、位置、状态等信息。a3是个 __m128 类型，通常用于存储 4 个单精度浮点数，在参数当中的a3被声明为一个**__m128**类型的指针数组。从宏观的角度猜测这个函数的情况下，判断角色的某一个属性和a3数组中的某一个值都是否为真，是的话玩家就不会收到伤害。那么可以猜测此代码可能为玩家在某种状态下不会收到伤害。a3数组可以推断为是一个包含攻击的详细信息（伤害值、攻击类型、来源等），所以可以把a3改名成 AttackInfo 。 大致了解一些参数之后我们回头来看生命值被写入的那一行，发现生命值是从 v1[0] 的值减去而得到的。那么这里的 v1 数组大概率就是存储伤害值的数组了。可以给这个变量改名为 f_damage ,命名之后可以看到 f_damage 在上面的多个判断和计算中得来的。 继续分析下面的代码，可以大致的猜测下面的算法内容以便在后续的逆向工程中得到验证： 12345678910111213v18 = 1.0; if ( dword_1154278 ) // 全局难度或模式标志 &#123; v6 = flt_1156B94; //基础伤害系数 if ( flt_1156B94 &gt;= 0.2 ) v6 = 0.2; // 限制最大伤害系数 f_damage = v6; v18 = 0.0; if ( v6 &gt;= 0.0 ) v18 = v6; *(double *)&amp;v14.m128_u64[1] = 1.0; v18 = 1.0 - (double)*(int *)(sub_7803C0(v4) + 8) / 5.0 * (5.0 * v18); &#125; dword_1154278 可能是游戏难度或者是游戏模式，v6 赋予的应该是基础伤害的系数，接着判断伤害系数是否大于0.2，是的话就限制最大伤害系数。根据下面的代码可以分析 v18 应该是某种防御系数的值。 1234v7 = ((double (__thiscall *)(_DWORD, __int32))*(_DWORD *)(**(_DWORD **)(this + 0x210) + 0x1A8))( *(_DWORD *)(this + 0x210), AttackInfo-&gt;m128_i32[2]); v8 = v7 * v18; // 应用防御减伤 在这一行调用了玩家基类的某一个虚函数，传递的参数有玩家对象和伤害信息。可以推断从角色虚表中获取了基础伤害计算方法然后赋值给 v7 ，后面对 v7 乘以猜测的防御系数值。根据推断信息可以把 v7 命名为baseDamage，v8 命名为 curDamage , v18 命名为 defenseRate 。 AttackInfo 在游戏开发中一般包含攻击来源，伤害倍率，攻击方向等信息，可以参考此文档。在接下来的代码中使用了通过攻击信息来进行判断的操作。 123456789101112131415v9 = AttackInfo-&gt;m128_i32[3] == 0; curDamage_2 = curDamage; if ( v9 ) // 无来源攻击 &#123; v10 = _mm_and_ps(_mm_mul_ps(AttackInfo[2], AttackInfo[2]), (__m128)xmmword_ECD230); v11 = _mm_hadd_ps(v10, v10); v14 = _mm_sqrt_ps(_mm_hadd_ps(v11, v11)); //计算向量值 curDamage = v14.m128_f32[0] * 2.0; //伤害加倍 &#125; else // 有来源攻击 &#123; (*(void (__thiscall **)(__int32, __m128 *))(*(_DWORD *)AttackInfo-&gt;m128_i32[3] + 0x14))( AttackInfo-&gt;m128_i32[3], AttackInfo + 1); // 处理特定攻击效果 &#125; 根据上下文可以推断此处的判断条件是玩家收到的攻击是否有明确来源（如玩家，敌人），因此 v9 可以命名为 b_damageComeFrom 。在游戏开发中AttackInfo 类通常包含： 攻击力（**m128_i32[0]&#x2F;m128_f32[0]**） 攻击方向（**m128_i32[1-2]**，存储向量） 攻击来源（**m128_i32[3]**，指向发起攻击的对象） 在有来源攻击的情况下会先计算关于攻击方向的一堆向量值然后让算出来的值进行加倍操作。在无来源攻击的情况下会调用特殊处理的虚函数。接下来通过计算获得了我们的 f_damage 变量。 1f_damage = defenseRate * curDamage_2; // 最终伤害 = 调整后系数（防御系数） * 基础伤害 在下一个判断当中能看到某一个地址值为真的话就让生命值等于某一个值，动态分析可以发现 this + 0x21C 为最大生命值。那么这个判断类似于开启作弊模式之类的让角色一直获得最大生命值。 1234if ( dword_114F5E0 ) // cheatMode ? &#123; *(_DWORD *)(this + 0x218) = *(_DWORD *)(this + 0x21C); // this + 0x21C == 最大生命值 &#125; 在 else 下面又进行了跟上面类似的计算以及判断，最终对生命值进行了写入操作，在文章最下面我会把这部分计算内容的分析放上去以供参考。 在函数的下方还有对生命值对于小于0的检测，要是生命值低于0就让他强行等于0。 123if ( *(float *)(this + 0x218) &lt; 0.0 ) // 生命值不能小于0 *(_DWORD *)(this + 0x218) = 0; &#125; 最后函数返回之前会进行一个简单的判断，根据生命值和伤害数值判断玩家是否死亡。 1return curDamage_2 &gt; 0.0 &amp;&amp; *(float *)(this + 0x218) == 0.0; // 返回是否死亡 接下来就是整个完整的函数代码： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126bool __userpurge takeDamage@&lt;al&gt;(int this@&lt;ecx&gt;, float a2@&lt;ebp&gt;, __m128 *AttackInfo)&#123; int v4; // ecx float v6; // edx double baseDamage; // st7 double curDamage; // st7 bool b_damageComeFrom; // zf __m128 v10; // xmm0 __m128 v11; // xmm0 int *p_defenseRate; // eax float v13; // eax __m128 v14; // [esp+18h] [ebp-3Ch] BYREF float damageFix; // [esp+34h] [ebp-20h] BYREF float healthPercent; // [esp+38h] [ebp-1Ch] BYREF float curDamage_2; // [esp+3Ch] [ebp-18h] float defenseRate; // [esp+40h] [ebp-14h] BYREF float f_damage; // [esp+44h] [ebp-10h] BYREF _DWORD v20[3]; // [esp+48h] [ebp-Ch] BYREF _UNKNOWN *retaddr; // [esp+54h] [ebp+0h] *(float *)v20 = a2; v20[1] = retaddr; damageFix = 0.0; if ( *(_BYTE *)(this + 0x214) ) // this + 0x214 == isInvincible 是否处于无敌状态 return 0; v4 = *(_DWORD *)(this + 0x210); if ( (*(_DWORD *)(v4 + 0x6EC) &amp; 0x10000000) != 0 &amp;&amp; AttackInfo-&gt;m128_i32[3] )// this + 0x210 指向 BaseCharacter &#123; sub_6D3380(this, (int)v20, (int)AttackInfo); return 0; &#125; defenseRate = 1.0; if ( dword_1154278 ) &#123; v6 = flt_1156B94; if ( flt_1156B94 &gt;= 0.2 ) v6 = 0.2; f_damage = v6; defenseRate = 0.0; if ( v6 &gt;= 0.0 ) defenseRate = v6; *(double *)&amp;v14.m128_u64[1] = 1.0; defenseRate = 1.0 - (double)*(int *)(sub_7803C0(v4) + 8) / 5.0 * (5.0 * defenseRate); &#125; baseDamage = ((double (__thiscall *)(_DWORD, __int32))*(_DWORD *)(**(_DWORD **)(this + 0x210) + 0x1A8))( *(_DWORD *)(this + 0x210), AttackInfo-&gt;m128_i32[2]); curDamage = baseDamage * defenseRate; // 应用防御减伤 b_damageComeFrom = AttackInfo-&gt;m128_i32[3] == 0; curDamage_2 = curDamage; if ( b_damageComeFrom ) &#123; v10 = _mm_and_ps(_mm_mul_ps(AttackInfo[2], AttackInfo[2]), (__m128)xmmword_ECD230); v11 = _mm_hadd_ps(v10, v10); v14 = _mm_sqrt_ps(_mm_hadd_ps(v11, v11)); curDamage = v14.m128_f32[0] * 2.0; &#125; else &#123; (*(void (__thiscall **)(__int32, __m128 *))(*(_DWORD *)AttackInfo-&gt;m128_i32[3] + 0x14))( AttackInfo-&gt;m128_i32[3], AttackInfo + 1); &#125; defenseRate = curDamage; f_damage = defenseRate * curDamage_2; v14.m128_i32[2] = (__int32)&amp;unk_1012F44; v14.m128_i32[3] = (__int32)&amp;f_damage; sub_9FAF70(dword_12233E8, &amp;v14.m128_u16[4], 0); curDamage_2 = *(float *)(this + 0x218); if ( dword_114F5E0 ) // cheatMode ? &#123; *(_DWORD *)(this + 0x218) = *(_DWORD *)(this + 0x21C);// this + 0x21C == max_Health &#125; else &#123; b_damageComeFrom = AttackInfo-&gt;m128_i32[3] == 0;// 是否为无来源攻击 defenseRate = *(float *)(this + 0x21C); // 读取最大生命值 healthPercent = curDamage_2 * 100.0 / defenseRate;// 对生命值进行百分比计算 if ( b_damageComeFrom ) // 无来源攻击 &#123; defenseRate = 0.0; p_defenseRate = (int *)&amp;defenseRate; // 没有防御倍率 &#125; else &#123; // 有来源攻击 p_defenseRate = (int *)(*(int (__thiscall **)(__int32, float *))(*(_DWORD *)AttackInfo-&gt;m128_i32[3] + 0x18))( AttackInfo-&gt;m128_i32[3], &amp;damageFix); // 获取防御率 &#125; v14.m128_i32[2] = 0; v14.m128_i32[2] = *p_defenseRate; v14.m128_i32[3] = sub_602920(p_defenseRate, (int)&amp;unk_10BECB8); defenseRate = sub_83D9A0(&amp;v14.m128_u16[4]); // 通过一系列计算获得防御率 damageFix = sub_4B9D80(flt_1159670); // 读取伤害修正值 if ( AttackInfo-&gt;m128_i32[3] ) // 有来源攻击时 &#123; if ( defenseRate &gt;= (double)healthPercent )// 防御率大于生命百分比时 &#123; healthPercent = sub_836480((_QWORD *)this, 1.0); damageFix = damageFix - (healthPercent + f_damage);// 重新计算伤害修正值 if ( damageFix &lt; 0.0 ) // 修正值小于零时 &#123; f_damage = f_damage + damageFix; damageFix = 1000.0; f_damage = sub_93E700(0, (int)&amp;healthPercent, &amp;damageFix);// 重新计算伤害修正值 &#125; &#125; &#125; *(float *)(this + 0x218) = *(float *)(this + 0x218) - f_damage;// this + 0x218 == health if ( dword_1221378 &amp;&amp; (*(_BYTE *)(dword_1221378 + 0xC) &amp; 4) != 0 ) &#123; damageFix = *(float *)(this + 0x21C); defenseRate = damageFix * 0.1; v13 = defenseRate; if ( *(float *)(this + 0x218) &gt;= (double)defenseRate ) v13 = *(float *)(this + 0x218); *(float *)(this + 0x218) = v13; &#125; if ( *(float *)(this + 0x218) &lt; 0.0 ) // 生命值不能小于0 *(_DWORD *)(this + 0x218) = 0; &#125; sub_6D3380(this, (int)v20, (int)AttackInfo); sub_53ECF0(AttackInfo, LODWORD(f_damage)); // 可能记录伤害日志 sub_40CEB0(f_damage); return curDamage_2 &gt; 0.0 &amp;&amp; *(float *)(this + 0x218) == 0.0;// 返回是否死亡&#125; 因为逆向工程大部分都是搞猜测验证来进行的，所以文章中有错误猜测或错误分析的部分请在评论区纠正。有任何私人问题可以联系我的私人邮箱，邮箱地址在首页。谢谢观看！","categories":[{"name":"逆向工程","slug":"逆向工程","permalink":"https://bhdtec.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"逆向","slug":"逆向","permalink":"https://bhdtec.com/tags/%E9%80%86%E5%90%91/"},{"name":"IDA","slug":"IDA","permalink":"https://bhdtec.com/tags/IDA/"},{"name":"CE","slug":"CE","permalink":"https://bhdtec.com/tags/CE/"}]},{"title":"获取程序的PID和模块基址","slug":"post1","date":"2025-02-21T16:00:00.000Z","updated":"2025-03-20T06:46:46.000Z","comments":true,"path":"2025/02/22/post1/","permalink":"https://bhdtec.com/2025/02/22/post1/","excerpt":"","text":"PID是Process ID的缩写，每个正在运行的软件都会有各自的PID，类似于身份证号。只要进程被运行，操作系统会给每个运行的进程分配一个数字标识符。获得PID就可以对指定的进程进行内存修改，附加调试器等等操作。正常情况下打开Windows系统的任务管理器就能看到所有进程的PID信息： 模块基址（Module Base Address）指的是被加载到内存中程序的内存空间起始地址。每打开一个进程操作系统除了分配PID之外还会给程序分配一段内存地址用来存放程序的代码和数据。这个内存地址的起点就是模块基址。PID是身份证号情况下模块基址相当于是家庭住址。 PID和模块基址对于逆向分析和内存分析来说至关重要，下面我会介绍外部程序（.exe程序）和DLL注入（内部注入）获取程序的PID和模块基址的具体方法。 一，外部程序1.PID获取（1）Windows API外部程序主要是通过调用 Windows API 的方式来获取其他程序的所有信息。要获取PID有几个API需要先了解分别是CreateToolhelp32Snapshot 函数： 1234HANDLE CreateToolhelp32Snapshot( [in] DWORD dwFlags, [in] DWORD th32ProcessID); 通过这个函数可以获取程序的快照信息，第二个参数为NULL时可以获取所有进程的快照信息。这里的快照包含了系统当前状态的各种信息，比如进程信息，线程信息，堆信息，模块信息等等。剩下两个API分别是Process32First 函数和Process32Next 函数： 12345678BOOL Process32First( [in] HANDLE hSnapshot, [in, out] LPPROCESSENTRY32 lppe);BOOL Process32Next( [in] HANDLE hSnapshot, [out] LPPROCESSENTRY32 lppe); 这两个函数分别用来检索快照当中的第一个和下一个进程信息，可以用来遍历所有进程找到适合自己的进程然后获取所需要的信息。 （2）具体实现利用这两个API就可以很轻松的实现找到PID的操作，首先要先提供一个自己所需的程序名然后创建所有进程的快照。把这些快照中的程序名信息一个个拿出来跟我们提供的程序名进行对比，把对比成功的快照留下再从中获取我们需要的PID信息就行。下面是具体实现方法： 123456789101112131415161718192021222324252627282930313233DWORD mem::getProcId(const wchar_t* procName)&#123; DWORD retProcID = 0; // 初始化返回的进程ID // 创建系统进程快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, NULL); if (hSnap != INVALID_HANDLE_VALUE) &#123; PROCESSENTRY32 procEntry; procEntry.dwSize = sizeof(PROCESSENTRY32); // 设置结构体大小 // 获取第一个进程信息 if (Process32First(hSnap, &amp;procEntry)) &#123; do &#123; // 比较进程名（不区分大小写） if (!_wcsicmp(procName, procEntry.szExeFile)) &#123; retProcID = procEntry.th32ProcessID; // 找到目标进程，保存ID break; // 结束循环 &#125; &#125; while (Process32Next(hSnap, &amp;procEntry)); // 获取下一个进程信息 &#125; else &#123; return 0; // 如果无法获取第一个进程，返回0 &#125; &#125; CloseHandle(hSnap); // 关闭快照句柄 return retProcID; // 返回找到的进程ID，如果未找到则为0&#125; 2.模块基址的获取（1）Windows API模块基址的获取跟获取PID类似都是通过遍历系统快照来获取的，CreateToolhelp32Snapshot 函数的第二个参数中需要明确表明PID为了只针对单个进程遍历模块名。Module32First 函数和 Module32Next 函数： 12345678BOOL Module32First( [in] HANDLE hSnapshot, [in, out] LPMODULEENTRY32 lpme);BOOL Module32Next( [in] HANDLE hSnapshot, [out] LPMODULEENTRY32 lpme); 这两个是用来检索进程或线程关联的下一个模块的相关信息。比如在大部分软件当中一个可执行程序（.exe）程序会附带一堆dll模块，这两个函数可以遍历每一个模块直到找到自己所需要的。 （2）具体实现获取模块基址的步骤跟获取PID的步骤大差不差，都是通过快照遍历的方式来获取。获取模块基址之前要先获取PID作为CreateToolhelp32Snapshot 函数的第二个参数来传入。 1234567891011121314151617181920212223242526272829uintptr_t mem::getModuleBase(const wchar_t* procName, DWORD procID)&#123; uintptr_t retAddress = 0; // 初始化返回的模块基址 // 创建指定进程的模块快照 HANDLE hSnap = CreateToolhelp32Snapshot(TH32CS_SNAPMODULE | TH32CS_SNAPMODULE32, procID); if (hSnap != INVALID_HANDLE_VALUE) &#123; MODULEENTRY32 modEntry; modEntry.dwSize = sizeof(MODULEENTRY32); // 设置结构体大小 // 获取第一个模块信息 if (Module32First(hSnap, &amp;modEntry)) &#123; do &#123; // 比较模块名（不区分大小写） if (!_wcsicmp(procName, modEntry.szModule)) &#123; retAddress = (uintptr_t)modEntry.modBaseAddr; // 找到目标模块，保存基址 break; // 结束循环 &#125; &#125; while (Module32Next(hSnap, &amp;modEntry)); // 获取下一个模块信息 &#125; &#125; CloseHandle(hSnap); // 关闭快照句柄 return retAddress; // 返回找到的模块基址，如果未找到则为0&#125; 二，DLL注入DLL注入的全称为 Dynamic-Link Library Injection ，是一种将DLL模块强制加载到进程内存空间的技术。这个技术有多重用途比如安全监控，恶意软件攻击，调试程序等等。DLL注入说白了就是把自己写的代码强行写入到指定的程序让目标程序加载自己的代码。由于自身的代码已经在目标进程的内存空间当中了所以没有必要获取目标进程的PID了。 （1）Windows API在内部代码中获取基址变得极其简单，只需要调用Windows API中的GetModuleHandle 函数，这个函数只有一个参数接受模块的名称（.dll 或 .exe 文件）。这个参数为NULL的话，返回的则是当前进程主模块的基地址。 123HMODULE GetModuleHandleA( [in, optional] LPCSTR lpModuleName); 可以发现这个函数的返回值并不是地址值而是句柄（HMODULE），在Windows内存管理体系中模块句柄直接等价于模块的基地址指针。在使用中直接把返回值强制转换成指针就行了。 （2）具体实现在实际使用中需要获取的基址为主要可执行文件的话（.exe）可以直接传NULL参即可。要是需要获取DLL模块的基址的话就需要传入模块名，传入模块名不加后缀默认按.dll来算。 12uintptr_t baseAddress = (uintptr_t)GetModuleHandle(NULL);uintptr_t baseAddress = (uintptr_t)GetModuleHandle(L&quot;xxx.dll&quot;); 有需要补充的或者需要整改的可在评论区回复！","categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://bhdtec.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C语言","slug":"C语言","permalink":"https://bhdtec.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"WINAPI","slug":"WINAPI","permalink":"https://bhdtec.com/tags/WINAPI/"}]}],"categories":[{"name":"技术分享","slug":"技术分享","permalink":"https://bhdtec.com/categories/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/"},{"name":"代码分析","slug":"代码分析","permalink":"https://bhdtec.com/categories/%E4%BB%A3%E7%A0%81%E5%88%86%E6%9E%90/"},{"name":"逆向工程","slug":"逆向工程","permalink":"https://bhdtec.com/categories/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B/"}],"tags":[{"name":"技术","slug":"技术","permalink":"https://bhdtec.com/tags/%E6%8A%80%E6%9C%AF/"},{"name":"C语言","slug":"C语言","permalink":"https://bhdtec.com/tags/C%E8%AF%AD%E8%A8%80/"},{"name":"函数","slug":"函数","permalink":"https://bhdtec.com/tags/%E5%87%BD%E6%95%B0/"},{"name":"API","slug":"API","permalink":"https://bhdtec.com/tags/API/"},{"name":"分析","slug":"分析","permalink":"https://bhdtec.com/tags/%E5%88%86%E6%9E%90/"},{"name":"游戏引擎","slug":"游戏引擎","permalink":"https://bhdtec.com/tags/%E6%B8%B8%E6%88%8F%E5%BC%95%E6%93%8E/"},{"name":"逆向","slug":"逆向","permalink":"https://bhdtec.com/tags/%E9%80%86%E5%90%91/"},{"name":"IDA","slug":"IDA","permalink":"https://bhdtec.com/tags/IDA/"},{"name":"CE","slug":"CE","permalink":"https://bhdtec.com/tags/CE/"},{"name":"WINAPI","slug":"WINAPI","permalink":"https://bhdtec.com/tags/WINAPI/"}]}